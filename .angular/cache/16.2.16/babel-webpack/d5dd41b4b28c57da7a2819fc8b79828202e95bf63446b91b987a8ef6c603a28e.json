{"ast":null,"code":"import { Router } from '@angular/router';\nimport { AuthService } from '@avans-nx-workshop/features';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@avans-nx-workshop/features\";\nimport * as i2 from \"@angular/router\";\nimport * as i3 from \"@angular/common\";\nimport * as i4 from \"@angular/forms\";\nfunction RegisterComponent_div_16_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 12);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", ctx_r0.errorMessage, \" \");\n  }\n}\nexport class RegisterComponent {\n  constructor(authService, router) {\n    this.authService = authService;\n    this.router = router;\n    this.registrationData = {\n      name: '',\n      emailAddress: '',\n      password: ''\n    };\n    this.errorMessage = null;\n  }\n  register() {\n    console.log('Attempting to register with data:', this.registrationData);\n    this.authService.register(this.registrationData).subscribe({\n      next: user => {\n        console.log('Registration response from server:', user);\n        // Check if the response contains a valid token\n        if (user?.token) {\n          console.log('User successfully registered with Token:', user.token);\n          // Redirect to the login page after successful registration\n          this.router.navigate(['/login']);\n        } else {\n          console.warn('Registration successful but missing token in the response:', user);\n          this.errorMessage = 'Registration successful, but token is missing. Please contact support.';\n        }\n      },\n      error: err => {\n        this.errorMessage = 'Registration failed. Please try again.';\n        console.error('Registration error occurred:', err);\n        // Log detailed error information if available\n        if (err.error) {\n          console.error('Backend error message:', err.error.message || err.error);\n        }\n        // Provide more user-friendly error messages based on the HTTP status code\n        if (err.status === 409) {\n          this.errorMessage = 'Email is already in use. Please use a different email.';\n        } else if (err.status === 400) {\n          this.errorMessage = 'Invalid registration data. Please check your input.';\n        } else {\n          this.errorMessage = 'An unexpected error occurred. Please try again later.';\n        }\n      }\n    });\n  }\n  static {\n    this.ɵfac = function RegisterComponent_Factory(t) {\n      return new (t || RegisterComponent)(i0.ɵɵdirectiveInject(i1.AuthService), i0.ɵɵdirectiveInject(i2.Router));\n    };\n  }\n  static {\n    this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n      type: RegisterComponent,\n      selectors: [[\"app-register\"]],\n      decls: 17,\n      vars: 4,\n      consts: [[1, \"register-container\", \"d-flex\", \"justify-content-center\", \"align-items-center\"], [1, \"card\", \"p-4\", 2, \"width\", \"400px\", \"margin-top\", \"10vh\", \"margin-bottom\", \"10vh\"], [1, \"text-center\", \"mb-4\"], [3, \"ngSubmit\"], [1, \"form-group\", \"mb-3\"], [\"id\", \"name\", \"type\", \"text\", \"placeholder\", \"Name\", \"name\", \"name\", \"required\", \"\", 1, \"form-control\", 3, \"ngModel\", \"ngModelChange\"], [\"id\", \"emailAddress\", \"type\", \"email\", \"placeholder\", \"Email Address\", \"name\", \"emailAddress\", \"required\", \"\", 1, \"form-control\", 3, \"ngModel\", \"ngModelChange\"], [\"id\", \"password\", \"type\", \"password\", \"placeholder\", \"Password\", \"name\", \"password\", \"required\", \"\", 1, \"form-control\", 3, \"ngModel\", \"ngModelChange\"], [\"type\", \"submit\", 1, \"btn\", \"btn-primary\", \"w-100\", \"mb-3\"], [1, \"text-center\"], [\"routerLink\", \"/login\", 1, \"text-decoration-none\"], [\"class\", \"error-message text-danger mt-3 text-center\", 4, \"ngIf\"], [1, \"error-message\", \"text-danger\", \"mt-3\", \"text-center\"]],\n      template: function RegisterComponent_Template(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵelementStart(0, \"div\", 0)(1, \"div\", 1)(2, \"h3\", 2);\n          i0.ɵɵtext(3, \"Register\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(4, \"form\", 3);\n          i0.ɵɵlistener(\"ngSubmit\", function RegisterComponent_Template_form_ngSubmit_4_listener() {\n            return ctx.register();\n          });\n          i0.ɵɵelementStart(5, \"div\", 4)(6, \"input\", 5);\n          i0.ɵɵlistener(\"ngModelChange\", function RegisterComponent_Template_input_ngModelChange_6_listener($event) {\n            return ctx.registrationData.name = $event;\n          });\n          i0.ɵɵelementEnd()();\n          i0.ɵɵelementStart(7, \"div\", 4)(8, \"input\", 6);\n          i0.ɵɵlistener(\"ngModelChange\", function RegisterComponent_Template_input_ngModelChange_8_listener($event) {\n            return ctx.registrationData.emailAddress = $event;\n          });\n          i0.ɵɵelementEnd()();\n          i0.ɵɵelementStart(9, \"div\", 4)(10, \"input\", 7);\n          i0.ɵɵlistener(\"ngModelChange\", function RegisterComponent_Template_input_ngModelChange_10_listener($event) {\n            return ctx.registrationData.password = $event;\n          });\n          i0.ɵɵelementEnd()();\n          i0.ɵɵelementStart(11, \"button\", 8);\n          i0.ɵɵtext(12, \"Register\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(13, \"div\", 9)(14, \"a\", 10);\n          i0.ɵɵtext(15, \"Already have an account? Login\");\n          i0.ɵɵelementEnd()()();\n          i0.ɵɵtemplate(16, RegisterComponent_div_16_Template, 2, 1, \"div\", 11);\n          i0.ɵɵelementEnd()();\n        }\n        if (rf & 2) {\n          i0.ɵɵadvance(6);\n          i0.ɵɵproperty(\"ngModel\", ctx.registrationData.name);\n          i0.ɵɵadvance(2);\n          i0.ɵɵproperty(\"ngModel\", ctx.registrationData.emailAddress);\n          i0.ɵɵadvance(2);\n          i0.ɵɵproperty(\"ngModel\", ctx.registrationData.password);\n          i0.ɵɵadvance(6);\n          i0.ɵɵproperty(\"ngIf\", ctx.errorMessage);\n        }\n      },\n      dependencies: [i3.NgIf, i2.RouterLink, i4.ɵNgNoValidate, i4.DefaultValueAccessor, i4.NgControlStatus, i4.NgControlStatusGroup, i4.RequiredValidator, i4.NgModel, i4.NgForm],\n      encapsulation: 2\n    });\n  }\n}","map":{"version":3,"names":["Router","AuthService","i0","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵadvance","ɵɵtextInterpolate1","ctx_r0","errorMessage","RegisterComponent","constructor","authService","router","registrationData","name","emailAddress","password","register","console","log","subscribe","next","user","token","navigate","warn","error","err","message","status","ɵɵdirectiveInject","i1","i2","selectors","decls","vars","consts","template","RegisterComponent_Template","rf","ctx","ɵɵlistener","RegisterComponent_Template_form_ngSubmit_4_listener","RegisterComponent_Template_input_ngModelChange_6_listener","$event","RegisterComponent_Template_input_ngModelChange_8_listener","RegisterComponent_Template_input_ngModelChange_10_listener","ɵɵtemplate","RegisterComponent_div_16_Template","ɵɵproperty"],"sources":["C:\\Users\\salim\\Dev\\avans-nx-workshop-2024\\avans-nx-workshop\\apps\\my-app\\src\\app\\components\\register\\register.component.ts","C:\\Users\\salim\\Dev\\avans-nx-workshop-2024\\avans-nx-workshop\\apps\\my-app\\src\\app\\components\\register\\register.component.html"],"sourcesContent":["import { Component } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { AuthService } from '@avans-nx-workshop/features';\r\nimport { IUserRegistration, IUserIdentity } from '@avans-nx-workshop/shared/api';\r\n\r\n@Component({\r\n  selector: 'app-register',\r\n  templateUrl: './register.component.html',\r\n})\r\nexport class RegisterComponent {\r\n  registrationData: IUserRegistration = {\r\n    name: '',\r\n    emailAddress: '',\r\n    password: '',\r\n  };\r\n\r\n  errorMessage: string | null = null;\r\n\r\n  constructor(private authService: AuthService, private router: Router) {}\r\n\r\n  register(): void {\r\n    console.log('Attempting to register with data:', this.registrationData);\r\n\r\n    this.authService.register(this.registrationData).subscribe({\r\n      next: (user: IUserIdentity) => {\r\n        console.log('Registration response from server:', user);\r\n\r\n        // Check if the response contains a valid token\r\n        if (user?.token) {\r\n          console.log('User successfully registered with Token:', user.token);\r\n\r\n          // Redirect to the login page after successful registration\r\n          this.router.navigate(['/login']);\r\n        } else {\r\n          console.warn(\r\n            'Registration successful but missing token in the response:',\r\n            user\r\n          );\r\n          this.errorMessage =\r\n            'Registration successful, but token is missing. Please contact support.';\r\n        }\r\n      },\r\n      error: (err) => {\r\n        this.errorMessage = 'Registration failed. Please try again.';\r\n        console.error('Registration error occurred:', err);\r\n\r\n        // Log detailed error information if available\r\n        if (err.error) {\r\n          console.error('Backend error message:', err.error.message || err.error);\r\n        }\r\n\r\n        // Provide more user-friendly error messages based on the HTTP status code\r\n        if (err.status === 409) {\r\n          this.errorMessage = 'Email is already in use. Please use a different email.';\r\n        } else if (err.status === 400) {\r\n          this.errorMessage = 'Invalid registration data. Please check your input.';\r\n        } else {\r\n          this.errorMessage = 'An unexpected error occurred. Please try again later.';\r\n        }\r\n      },\r\n    });\r\n  }\r\n}\r\n","<div class=\"register-container d-flex justify-content-center align-items-center\">\r\n    <div class=\"card p-4\" style=\"width: 400px;margin-top: 10vh; margin-bottom: 10vh;\">\r\n        <h3 class=\"text-center mb-4\">Register</h3>\r\n        <form (ngSubmit)=\"register()\">\r\n            <div class=\"form-group mb-3\">\r\n                <input\r\n                    id=\"name\"\r\n                    type=\"text\"\r\n                    class=\"form-control\"\r\n                    placeholder=\"Name\"\r\n                    [(ngModel)]=\"registrationData.name\"\r\n                    name=\"name\"\r\n                    required\r\n                />\r\n            </div>\r\n            <div class=\"form-group mb-3\">\r\n                <input\r\n                    id=\"emailAddress\"\r\n                    type=\"email\"\r\n                    class=\"form-control\"\r\n                    placeholder=\"Email Address\"\r\n                    [(ngModel)]=\"registrationData.emailAddress\"\r\n                    name=\"emailAddress\"\r\n                    required\r\n                />\r\n            </div>\r\n            <div class=\"form-group mb-3\">\r\n                <input\r\n                    id=\"password\"\r\n                    type=\"password\"\r\n                    class=\"form-control\"\r\n                    placeholder=\"Password\"\r\n                    [(ngModel)]=\"registrationData.password\"\r\n                    name=\"password\"\r\n                    required\r\n                />\r\n            </div>\r\n            <button type=\"submit\" class=\"btn btn-primary w-100 mb-3\">Register</button>\r\n            <div class=\"text-center\">\r\n                <a routerLink=\"/login\" class=\"text-decoration-none\">Already have an account? Login</a>\r\n            </div>\r\n        </form>\r\n        <div *ngIf=\"errorMessage\" class=\"error-message text-danger mt-3 text-center\">\r\n            {{ errorMessage }}\r\n        </div>\r\n    </div>\r\n</div>\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}