{"ast":null,"code":"\"use strict\";\n\nvar _asyncToGenerator = require(\"C:/Users/salim/Dev/avans-nx-workshop-2024/avans-nx-workshop/node_modules/@babel/runtime/helpers/asyncToGenerator.js\").default;\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.InstanceLoader = void 0;\nconst common_1 = require(\"@nestjs/common\");\nconst messages_1 = require(\"../helpers/messages\");\nconst internal_core_module_1 = require(\"./internal-core-module/internal-core-module\");\nclass InstanceLoader {\n  constructor(container, injector, graphInspector, logger = new common_1.Logger(InstanceLoader.name, {\n    timestamp: true\n  })) {\n    this.container = container;\n    this.injector = injector;\n    this.graphInspector = graphInspector;\n    this.logger = logger;\n  }\n  setLogger(logger) {\n    this.logger = logger;\n  }\n  createInstancesOfDependencies(modules = this.container.getModules()) {\n    var _this = this;\n    return _asyncToGenerator(function* () {\n      _this.createPrototypes(modules);\n      try {\n        yield _this.createInstances(modules);\n      } catch (err) {\n        _this.graphInspector.inspectModules(modules);\n        _this.graphInspector.registerPartial(err);\n        throw err;\n      }\n      _this.graphInspector.inspectModules(modules);\n    })();\n  }\n  createPrototypes(modules) {\n    modules.forEach(moduleRef => {\n      this.createPrototypesOfProviders(moduleRef);\n      this.createPrototypesOfInjectables(moduleRef);\n      this.createPrototypesOfControllers(moduleRef);\n    });\n  }\n  createInstances(modules) {\n    var _this2 = this;\n    return _asyncToGenerator(function* () {\n      yield Promise.all([...modules.values()].map( /*#__PURE__*/function () {\n        var _ref = _asyncToGenerator(function* (moduleRef) {\n          yield _this2.createInstancesOfProviders(moduleRef);\n          yield _this2.createInstancesOfInjectables(moduleRef);\n          yield _this2.createInstancesOfControllers(moduleRef);\n          const {\n            name\n          } = moduleRef;\n          _this2.isModuleWhitelisted(name) && _this2.logger.log((0, messages_1.MODULE_INIT_MESSAGE)`${name}`);\n        });\n        return function (_x) {\n          return _ref.apply(this, arguments);\n        };\n      }()));\n    })();\n  }\n  createPrototypesOfProviders(moduleRef) {\n    const {\n      providers\n    } = moduleRef;\n    providers.forEach(wrapper => this.injector.loadPrototype(wrapper, providers));\n  }\n  createInstancesOfProviders(moduleRef) {\n    var _this3 = this;\n    return _asyncToGenerator(function* () {\n      const {\n        providers\n      } = moduleRef;\n      const wrappers = [...providers.values()];\n      yield Promise.all(wrappers.map( /*#__PURE__*/function () {\n        var _ref2 = _asyncToGenerator(function* (item) {\n          yield _this3.injector.loadProvider(item, moduleRef);\n          _this3.graphInspector.inspectInstanceWrapper(item, moduleRef);\n        });\n        return function (_x2) {\n          return _ref2.apply(this, arguments);\n        };\n      }()));\n    })();\n  }\n  createPrototypesOfControllers(moduleRef) {\n    const {\n      controllers\n    } = moduleRef;\n    controllers.forEach(wrapper => this.injector.loadPrototype(wrapper, controllers));\n  }\n  createInstancesOfControllers(moduleRef) {\n    var _this4 = this;\n    return _asyncToGenerator(function* () {\n      const {\n        controllers\n      } = moduleRef;\n      const wrappers = [...controllers.values()];\n      yield Promise.all(wrappers.map( /*#__PURE__*/function () {\n        var _ref3 = _asyncToGenerator(function* (item) {\n          yield _this4.injector.loadController(item, moduleRef);\n          _this4.graphInspector.inspectInstanceWrapper(item, moduleRef);\n        });\n        return function (_x3) {\n          return _ref3.apply(this, arguments);\n        };\n      }()));\n    })();\n  }\n  createPrototypesOfInjectables(moduleRef) {\n    const {\n      injectables\n    } = moduleRef;\n    injectables.forEach(wrapper => this.injector.loadPrototype(wrapper, injectables));\n  }\n  createInstancesOfInjectables(moduleRef) {\n    var _this5 = this;\n    return _asyncToGenerator(function* () {\n      const {\n        injectables\n      } = moduleRef;\n      const wrappers = [...injectables.values()];\n      yield Promise.all(wrappers.map( /*#__PURE__*/function () {\n        var _ref4 = _asyncToGenerator(function* (item) {\n          yield _this5.injector.loadInjectable(item, moduleRef);\n          _this5.graphInspector.inspectInstanceWrapper(item, moduleRef);\n        });\n        return function (_x4) {\n          return _ref4.apply(this, arguments);\n        };\n      }()));\n    })();\n  }\n  isModuleWhitelisted(name) {\n    return name !== internal_core_module_1.InternalCoreModule.name;\n  }\n}\nexports.InstanceLoader = InstanceLoader;","map":{"version":3,"names":["_asyncToGenerator","require","default","Object","defineProperty","exports","value","InstanceLoader","common_1","messages_1","internal_core_module_1","constructor","container","injector","graphInspector","logger","Logger","name","timestamp","setLogger","createInstancesOfDependencies","modules","getModules","_this","createPrototypes","createInstances","err","inspectModules","registerPartial","forEach","moduleRef","createPrototypesOfProviders","createPrototypesOfInjectables","createPrototypesOfControllers","_this2","Promise","all","values","map","_ref","createInstancesOfProviders","createInstancesOfInjectables","createInstancesOfControllers","isModuleWhitelisted","log","MODULE_INIT_MESSAGE","_x","apply","arguments","providers","wrapper","loadPrototype","_this3","wrappers","_ref2","item","loadProvider","inspectInstanceWrapper","_x2","controllers","_this4","_ref3","loadController","_x3","injectables","_this5","_ref4","loadInjectable","_x4","InternalCoreModule"],"sources":["C:/Users/salim/Dev/avans-nx-workshop-2024/avans-nx-workshop/node_modules/@nestjs/core/injector/instance-loader.js"],"sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.InstanceLoader = void 0;\nconst common_1 = require(\"@nestjs/common\");\nconst messages_1 = require(\"../helpers/messages\");\nconst internal_core_module_1 = require(\"./internal-core-module/internal-core-module\");\nclass InstanceLoader {\n    constructor(container, injector, graphInspector, logger = new common_1.Logger(InstanceLoader.name, {\n        timestamp: true,\n    })) {\n        this.container = container;\n        this.injector = injector;\n        this.graphInspector = graphInspector;\n        this.logger = logger;\n    }\n    setLogger(logger) {\n        this.logger = logger;\n    }\n    async createInstancesOfDependencies(modules = this.container.getModules()) {\n        this.createPrototypes(modules);\n        try {\n            await this.createInstances(modules);\n        }\n        catch (err) {\n            this.graphInspector.inspectModules(modules);\n            this.graphInspector.registerPartial(err);\n            throw err;\n        }\n        this.graphInspector.inspectModules(modules);\n    }\n    createPrototypes(modules) {\n        modules.forEach(moduleRef => {\n            this.createPrototypesOfProviders(moduleRef);\n            this.createPrototypesOfInjectables(moduleRef);\n            this.createPrototypesOfControllers(moduleRef);\n        });\n    }\n    async createInstances(modules) {\n        await Promise.all([...modules.values()].map(async (moduleRef) => {\n            await this.createInstancesOfProviders(moduleRef);\n            await this.createInstancesOfInjectables(moduleRef);\n            await this.createInstancesOfControllers(moduleRef);\n            const { name } = moduleRef;\n            this.isModuleWhitelisted(name) &&\n                this.logger.log((0, messages_1.MODULE_INIT_MESSAGE) `${name}`);\n        }));\n    }\n    createPrototypesOfProviders(moduleRef) {\n        const { providers } = moduleRef;\n        providers.forEach(wrapper => this.injector.loadPrototype(wrapper, providers));\n    }\n    async createInstancesOfProviders(moduleRef) {\n        const { providers } = moduleRef;\n        const wrappers = [...providers.values()];\n        await Promise.all(wrappers.map(async (item) => {\n            await this.injector.loadProvider(item, moduleRef);\n            this.graphInspector.inspectInstanceWrapper(item, moduleRef);\n        }));\n    }\n    createPrototypesOfControllers(moduleRef) {\n        const { controllers } = moduleRef;\n        controllers.forEach(wrapper => this.injector.loadPrototype(wrapper, controllers));\n    }\n    async createInstancesOfControllers(moduleRef) {\n        const { controllers } = moduleRef;\n        const wrappers = [...controllers.values()];\n        await Promise.all(wrappers.map(async (item) => {\n            await this.injector.loadController(item, moduleRef);\n            this.graphInspector.inspectInstanceWrapper(item, moduleRef);\n        }));\n    }\n    createPrototypesOfInjectables(moduleRef) {\n        const { injectables } = moduleRef;\n        injectables.forEach(wrapper => this.injector.loadPrototype(wrapper, injectables));\n    }\n    async createInstancesOfInjectables(moduleRef) {\n        const { injectables } = moduleRef;\n        const wrappers = [...injectables.values()];\n        await Promise.all(wrappers.map(async (item) => {\n            await this.injector.loadInjectable(item, moduleRef);\n            this.graphInspector.inspectInstanceWrapper(item, moduleRef);\n        }));\n    }\n    isModuleWhitelisted(name) {\n        return name !== internal_core_module_1.InternalCoreModule.name;\n    }\n}\nexports.InstanceLoader = InstanceLoader;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}