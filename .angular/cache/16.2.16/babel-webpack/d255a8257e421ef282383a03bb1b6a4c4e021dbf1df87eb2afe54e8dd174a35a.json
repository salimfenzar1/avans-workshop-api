{"ast":null,"code":"\"use strict\";\n\nvar Logger_1;\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.Logger = void 0;\nconst tslib_1 = require(\"tslib\");\nconst core_1 = require(\"../decorators/core\");\nconst shared_utils_1 = require(\"../utils/shared.utils\");\nconst console_logger_service_1 = require(\"./console-logger.service\");\nconst utils_1 = require(\"./utils\");\nconst DEFAULT_LOGGER = new console_logger_service_1.ConsoleLogger();\nconst dateTimeFormatter = new Intl.DateTimeFormat(undefined, {\n  year: 'numeric',\n  hour: 'numeric',\n  minute: 'numeric',\n  second: 'numeric',\n  day: '2-digit',\n  month: '2-digit'\n});\n/**\n * @publicApi\n */\nlet Logger = Logger_1 = class Logger {\n  constructor(context, options = {}) {\n    this.context = context;\n    this.options = options;\n  }\n  get localInstance() {\n    if (Logger_1.staticInstanceRef === DEFAULT_LOGGER) {\n      return this.registerLocalInstanceRef();\n    } else if (Logger_1.staticInstanceRef instanceof Logger_1) {\n      const prototype = Object.getPrototypeOf(Logger_1.staticInstanceRef);\n      if (prototype.constructor === Logger_1) {\n        return this.registerLocalInstanceRef();\n      }\n    }\n    return Logger_1.staticInstanceRef;\n  }\n  error(message, ...optionalParams) {\n    optionalParams = this.context ? (optionalParams.length ? optionalParams : [undefined]).concat(this.context) : optionalParams;\n    this.localInstance?.error(message, ...optionalParams);\n  }\n  log(message, ...optionalParams) {\n    optionalParams = this.context ? optionalParams.concat(this.context) : optionalParams;\n    this.localInstance?.log(message, ...optionalParams);\n  }\n  warn(message, ...optionalParams) {\n    optionalParams = this.context ? optionalParams.concat(this.context) : optionalParams;\n    this.localInstance?.warn(message, ...optionalParams);\n  }\n  debug(message, ...optionalParams) {\n    optionalParams = this.context ? optionalParams.concat(this.context) : optionalParams;\n    this.localInstance?.debug?.(message, ...optionalParams);\n  }\n  verbose(message, ...optionalParams) {\n    optionalParams = this.context ? optionalParams.concat(this.context) : optionalParams;\n    this.localInstance?.verbose?.(message, ...optionalParams);\n  }\n  fatal(message, ...optionalParams) {\n    optionalParams = this.context ? optionalParams.concat(this.context) : optionalParams;\n    this.localInstance?.fatal?.(message, ...optionalParams);\n  }\n  static error(message, ...optionalParams) {\n    this.staticInstanceRef?.error(message, ...optionalParams);\n  }\n  static log(message, ...optionalParams) {\n    this.staticInstanceRef?.log(message, ...optionalParams);\n  }\n  static warn(message, ...optionalParams) {\n    this.staticInstanceRef?.warn(message, ...optionalParams);\n  }\n  static debug(message, ...optionalParams) {\n    this.staticInstanceRef?.debug?.(message, ...optionalParams);\n  }\n  static verbose(message, ...optionalParams) {\n    this.staticInstanceRef?.verbose?.(message, ...optionalParams);\n  }\n  static fatal(message, ...optionalParams) {\n    this.staticInstanceRef?.fatal?.(message, ...optionalParams);\n  }\n  /**\n   * Print buffered logs and detach buffer.\n   */\n  static flush() {\n    this.isBufferAttached = false;\n    this.logBuffer.forEach(item => item.methodRef(...item.arguments));\n    this.logBuffer = [];\n  }\n  /**\n   * Attach buffer.\n   * Turns on initialization logs buffering.\n   */\n  static attachBuffer() {\n    this.isBufferAttached = true;\n  }\n  /**\n   * Detach buffer.\n   * Turns off initialization logs buffering.\n   */\n  static detachBuffer() {\n    this.isBufferAttached = false;\n  }\n  static getTimestamp() {\n    return dateTimeFormatter.format(Date.now());\n  }\n  static overrideLogger(logger) {\n    if (Array.isArray(logger)) {\n      Logger_1.logLevels = logger;\n      return this.staticInstanceRef?.setLogLevels(logger);\n    }\n    if ((0, shared_utils_1.isObject)(logger)) {\n      if (logger instanceof Logger_1 && logger.constructor !== Logger_1) {\n        const errorMessage = `Using the \"extends Logger\" instruction is not allowed in Nest v9. Please, use \"extends ConsoleLogger\" instead.`;\n        this.staticInstanceRef.error(errorMessage);\n        throw new Error(errorMessage);\n      }\n      this.staticInstanceRef = logger;\n    } else {\n      this.staticInstanceRef = undefined;\n    }\n  }\n  static isLevelEnabled(level) {\n    const logLevels = Logger_1.logLevels;\n    return (0, utils_1.isLogLevelEnabled)(level, logLevels);\n  }\n  registerLocalInstanceRef() {\n    if (this.localInstanceRef) {\n      return this.localInstanceRef;\n    }\n    this.localInstanceRef = new console_logger_service_1.ConsoleLogger(this.context, {\n      timestamp: this.options?.timestamp,\n      logLevels: Logger_1.logLevels\n    });\n    return this.localInstanceRef;\n  }\n};\nexports.Logger = Logger;\nLogger.logBuffer = new Array();\nLogger.staticInstanceRef = DEFAULT_LOGGER;\nLogger.WrapBuffer = (target, propertyKey, descriptor) => {\n  const originalFn = descriptor.value;\n  descriptor.value = function (...args) {\n    if (Logger_1.isBufferAttached) {\n      Logger_1.logBuffer.push({\n        methodRef: originalFn.bind(this),\n        arguments: args\n      });\n      return;\n    }\n    return originalFn.call(this, ...args);\n  };\n};\ntslib_1.__decorate([Logger.WrapBuffer, tslib_1.__metadata(\"design:type\", Function), tslib_1.__metadata(\"design:paramtypes\", [Object, Object]), tslib_1.__metadata(\"design:returntype\", void 0)], Logger.prototype, \"error\", null);\ntslib_1.__decorate([Logger.WrapBuffer, tslib_1.__metadata(\"design:type\", Function), tslib_1.__metadata(\"design:paramtypes\", [Object, Object]), tslib_1.__metadata(\"design:returntype\", void 0)], Logger.prototype, \"log\", null);\ntslib_1.__decorate([Logger.WrapBuffer, tslib_1.__metadata(\"design:type\", Function), tslib_1.__metadata(\"design:paramtypes\", [Object, Object]), tslib_1.__metadata(\"design:returntype\", void 0)], Logger.prototype, \"warn\", null);\ntslib_1.__decorate([Logger.WrapBuffer, tslib_1.__metadata(\"design:type\", Function), tslib_1.__metadata(\"design:paramtypes\", [Object, Object]), tslib_1.__metadata(\"design:returntype\", void 0)], Logger.prototype, \"debug\", null);\ntslib_1.__decorate([Logger.WrapBuffer, tslib_1.__metadata(\"design:type\", Function), tslib_1.__metadata(\"design:paramtypes\", [Object, Object]), tslib_1.__metadata(\"design:returntype\", void 0)], Logger.prototype, \"verbose\", null);\ntslib_1.__decorate([Logger.WrapBuffer, tslib_1.__metadata(\"design:type\", Function), tslib_1.__metadata(\"design:paramtypes\", [Object, Object]), tslib_1.__metadata(\"design:returntype\", void 0)], Logger.prototype, \"fatal\", null);\ntslib_1.__decorate([Logger.WrapBuffer, tslib_1.__metadata(\"design:type\", Function), tslib_1.__metadata(\"design:paramtypes\", [Object, Object]), tslib_1.__metadata(\"design:returntype\", void 0)], Logger, \"error\", null);\ntslib_1.__decorate([Logger.WrapBuffer, tslib_1.__metadata(\"design:type\", Function), tslib_1.__metadata(\"design:paramtypes\", [Object, Object]), tslib_1.__metadata(\"design:returntype\", void 0)], Logger, \"log\", null);\ntslib_1.__decorate([Logger.WrapBuffer, tslib_1.__metadata(\"design:type\", Function), tslib_1.__metadata(\"design:paramtypes\", [Object, Object]), tslib_1.__metadata(\"design:returntype\", void 0)], Logger, \"warn\", null);\ntslib_1.__decorate([Logger.WrapBuffer, tslib_1.__metadata(\"design:type\", Function), tslib_1.__metadata(\"design:paramtypes\", [Object, Object]), tslib_1.__metadata(\"design:returntype\", void 0)], Logger, \"debug\", null);\ntslib_1.__decorate([Logger.WrapBuffer, tslib_1.__metadata(\"design:type\", Function), tslib_1.__metadata(\"design:paramtypes\", [Object, Object]), tslib_1.__metadata(\"design:returntype\", void 0)], Logger, \"verbose\", null);\ntslib_1.__decorate([Logger.WrapBuffer, tslib_1.__metadata(\"design:type\", Function), tslib_1.__metadata(\"design:paramtypes\", [Object, Object]), tslib_1.__metadata(\"design:returntype\", void 0)], Logger, \"fatal\", null);\nexports.Logger = Logger = Logger_1 = tslib_1.__decorate([(0, core_1.Injectable)(), tslib_1.__param(0, (0, core_1.Optional)()), tslib_1.__param(1, (0, core_1.Optional)()), tslib_1.__metadata(\"design:paramtypes\", [String, Object])], Logger);","map":{"version":3,"names":["Logger_1","Object","defineProperty","exports","value","Logger","tslib_1","require","core_1","shared_utils_1","console_logger_service_1","utils_1","DEFAULT_LOGGER","ConsoleLogger","dateTimeFormatter","Intl","DateTimeFormat","undefined","year","hour","minute","second","day","month","constructor","context","options","localInstance","staticInstanceRef","registerLocalInstanceRef","prototype","getPrototypeOf","error","message","optionalParams","length","concat","log","warn","debug","verbose","fatal","flush","isBufferAttached","logBuffer","forEach","item","methodRef","arguments","attachBuffer","detachBuffer","getTimestamp","format","Date","now","overrideLogger","logger","Array","isArray","logLevels","setLogLevels","isObject","errorMessage","Error","isLevelEnabled","level","isLogLevelEnabled","localInstanceRef","timestamp","WrapBuffer","target","propertyKey","descriptor","originalFn","args","push","bind","call","__decorate","__metadata","Function","Injectable","__param","Optional","String"],"sources":["C:/Users/salim/Dev/avans-nx-workshop-2024/avans-nx-workshop/node_modules/@nestjs/common/services/logger.service.js"],"sourcesContent":["\"use strict\";\nvar Logger_1;\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Logger = void 0;\nconst tslib_1 = require(\"tslib\");\nconst core_1 = require(\"../decorators/core\");\nconst shared_utils_1 = require(\"../utils/shared.utils\");\nconst console_logger_service_1 = require(\"./console-logger.service\");\nconst utils_1 = require(\"./utils\");\nconst DEFAULT_LOGGER = new console_logger_service_1.ConsoleLogger();\nconst dateTimeFormatter = new Intl.DateTimeFormat(undefined, {\n    year: 'numeric',\n    hour: 'numeric',\n    minute: 'numeric',\n    second: 'numeric',\n    day: '2-digit',\n    month: '2-digit',\n});\n/**\n * @publicApi\n */\nlet Logger = Logger_1 = class Logger {\n    constructor(context, options = {}) {\n        this.context = context;\n        this.options = options;\n    }\n    get localInstance() {\n        if (Logger_1.staticInstanceRef === DEFAULT_LOGGER) {\n            return this.registerLocalInstanceRef();\n        }\n        else if (Logger_1.staticInstanceRef instanceof Logger_1) {\n            const prototype = Object.getPrototypeOf(Logger_1.staticInstanceRef);\n            if (prototype.constructor === Logger_1) {\n                return this.registerLocalInstanceRef();\n            }\n        }\n        return Logger_1.staticInstanceRef;\n    }\n    error(message, ...optionalParams) {\n        optionalParams = this.context\n            ? (optionalParams.length ? optionalParams : [undefined]).concat(this.context)\n            : optionalParams;\n        this.localInstance?.error(message, ...optionalParams);\n    }\n    log(message, ...optionalParams) {\n        optionalParams = this.context\n            ? optionalParams.concat(this.context)\n            : optionalParams;\n        this.localInstance?.log(message, ...optionalParams);\n    }\n    warn(message, ...optionalParams) {\n        optionalParams = this.context\n            ? optionalParams.concat(this.context)\n            : optionalParams;\n        this.localInstance?.warn(message, ...optionalParams);\n    }\n    debug(message, ...optionalParams) {\n        optionalParams = this.context\n            ? optionalParams.concat(this.context)\n            : optionalParams;\n        this.localInstance?.debug?.(message, ...optionalParams);\n    }\n    verbose(message, ...optionalParams) {\n        optionalParams = this.context\n            ? optionalParams.concat(this.context)\n            : optionalParams;\n        this.localInstance?.verbose?.(message, ...optionalParams);\n    }\n    fatal(message, ...optionalParams) {\n        optionalParams = this.context\n            ? optionalParams.concat(this.context)\n            : optionalParams;\n        this.localInstance?.fatal?.(message, ...optionalParams);\n    }\n    static error(message, ...optionalParams) {\n        this.staticInstanceRef?.error(message, ...optionalParams);\n    }\n    static log(message, ...optionalParams) {\n        this.staticInstanceRef?.log(message, ...optionalParams);\n    }\n    static warn(message, ...optionalParams) {\n        this.staticInstanceRef?.warn(message, ...optionalParams);\n    }\n    static debug(message, ...optionalParams) {\n        this.staticInstanceRef?.debug?.(message, ...optionalParams);\n    }\n    static verbose(message, ...optionalParams) {\n        this.staticInstanceRef?.verbose?.(message, ...optionalParams);\n    }\n    static fatal(message, ...optionalParams) {\n        this.staticInstanceRef?.fatal?.(message, ...optionalParams);\n    }\n    /**\n     * Print buffered logs and detach buffer.\n     */\n    static flush() {\n        this.isBufferAttached = false;\n        this.logBuffer.forEach(item => item.methodRef(...item.arguments));\n        this.logBuffer = [];\n    }\n    /**\n     * Attach buffer.\n     * Turns on initialization logs buffering.\n     */\n    static attachBuffer() {\n        this.isBufferAttached = true;\n    }\n    /**\n     * Detach buffer.\n     * Turns off initialization logs buffering.\n     */\n    static detachBuffer() {\n        this.isBufferAttached = false;\n    }\n    static getTimestamp() {\n        return dateTimeFormatter.format(Date.now());\n    }\n    static overrideLogger(logger) {\n        if (Array.isArray(logger)) {\n            Logger_1.logLevels = logger;\n            return this.staticInstanceRef?.setLogLevels(logger);\n        }\n        if ((0, shared_utils_1.isObject)(logger)) {\n            if (logger instanceof Logger_1 && logger.constructor !== Logger_1) {\n                const errorMessage = `Using the \"extends Logger\" instruction is not allowed in Nest v9. Please, use \"extends ConsoleLogger\" instead.`;\n                this.staticInstanceRef.error(errorMessage);\n                throw new Error(errorMessage);\n            }\n            this.staticInstanceRef = logger;\n        }\n        else {\n            this.staticInstanceRef = undefined;\n        }\n    }\n    static isLevelEnabled(level) {\n        const logLevels = Logger_1.logLevels;\n        return (0, utils_1.isLogLevelEnabled)(level, logLevels);\n    }\n    registerLocalInstanceRef() {\n        if (this.localInstanceRef) {\n            return this.localInstanceRef;\n        }\n        this.localInstanceRef = new console_logger_service_1.ConsoleLogger(this.context, {\n            timestamp: this.options?.timestamp,\n            logLevels: Logger_1.logLevels,\n        });\n        return this.localInstanceRef;\n    }\n};\nexports.Logger = Logger;\nLogger.logBuffer = new Array();\nLogger.staticInstanceRef = DEFAULT_LOGGER;\nLogger.WrapBuffer = (target, propertyKey, descriptor) => {\n    const originalFn = descriptor.value;\n    descriptor.value = function (...args) {\n        if (Logger_1.isBufferAttached) {\n            Logger_1.logBuffer.push({\n                methodRef: originalFn.bind(this),\n                arguments: args,\n            });\n            return;\n        }\n        return originalFn.call(this, ...args);\n    };\n};\ntslib_1.__decorate([\n    Logger.WrapBuffer,\n    tslib_1.__metadata(\"design:type\", Function),\n    tslib_1.__metadata(\"design:paramtypes\", [Object, Object]),\n    tslib_1.__metadata(\"design:returntype\", void 0)\n], Logger.prototype, \"error\", null);\ntslib_1.__decorate([\n    Logger.WrapBuffer,\n    tslib_1.__metadata(\"design:type\", Function),\n    tslib_1.__metadata(\"design:paramtypes\", [Object, Object]),\n    tslib_1.__metadata(\"design:returntype\", void 0)\n], Logger.prototype, \"log\", null);\ntslib_1.__decorate([\n    Logger.WrapBuffer,\n    tslib_1.__metadata(\"design:type\", Function),\n    tslib_1.__metadata(\"design:paramtypes\", [Object, Object]),\n    tslib_1.__metadata(\"design:returntype\", void 0)\n], Logger.prototype, \"warn\", null);\ntslib_1.__decorate([\n    Logger.WrapBuffer,\n    tslib_1.__metadata(\"design:type\", Function),\n    tslib_1.__metadata(\"design:paramtypes\", [Object, Object]),\n    tslib_1.__metadata(\"design:returntype\", void 0)\n], Logger.prototype, \"debug\", null);\ntslib_1.__decorate([\n    Logger.WrapBuffer,\n    tslib_1.__metadata(\"design:type\", Function),\n    tslib_1.__metadata(\"design:paramtypes\", [Object, Object]),\n    tslib_1.__metadata(\"design:returntype\", void 0)\n], Logger.prototype, \"verbose\", null);\ntslib_1.__decorate([\n    Logger.WrapBuffer,\n    tslib_1.__metadata(\"design:type\", Function),\n    tslib_1.__metadata(\"design:paramtypes\", [Object, Object]),\n    tslib_1.__metadata(\"design:returntype\", void 0)\n], Logger.prototype, \"fatal\", null);\ntslib_1.__decorate([\n    Logger.WrapBuffer,\n    tslib_1.__metadata(\"design:type\", Function),\n    tslib_1.__metadata(\"design:paramtypes\", [Object, Object]),\n    tslib_1.__metadata(\"design:returntype\", void 0)\n], Logger, \"error\", null);\ntslib_1.__decorate([\n    Logger.WrapBuffer,\n    tslib_1.__metadata(\"design:type\", Function),\n    tslib_1.__metadata(\"design:paramtypes\", [Object, Object]),\n    tslib_1.__metadata(\"design:returntype\", void 0)\n], Logger, \"log\", null);\ntslib_1.__decorate([\n    Logger.WrapBuffer,\n    tslib_1.__metadata(\"design:type\", Function),\n    tslib_1.__metadata(\"design:paramtypes\", [Object, Object]),\n    tslib_1.__metadata(\"design:returntype\", void 0)\n], Logger, \"warn\", null);\ntslib_1.__decorate([\n    Logger.WrapBuffer,\n    tslib_1.__metadata(\"design:type\", Function),\n    tslib_1.__metadata(\"design:paramtypes\", [Object, Object]),\n    tslib_1.__metadata(\"design:returntype\", void 0)\n], Logger, \"debug\", null);\ntslib_1.__decorate([\n    Logger.WrapBuffer,\n    tslib_1.__metadata(\"design:type\", Function),\n    tslib_1.__metadata(\"design:paramtypes\", [Object, Object]),\n    tslib_1.__metadata(\"design:returntype\", void 0)\n], Logger, \"verbose\", null);\ntslib_1.__decorate([\n    Logger.WrapBuffer,\n    tslib_1.__metadata(\"design:type\", Function),\n    tslib_1.__metadata(\"design:paramtypes\", [Object, Object]),\n    tslib_1.__metadata(\"design:returntype\", void 0)\n], Logger, \"fatal\", null);\nexports.Logger = Logger = Logger_1 = tslib_1.__decorate([\n    (0, core_1.Injectable)(),\n    tslib_1.__param(0, (0, core_1.Optional)()),\n    tslib_1.__param(1, (0, core_1.Optional)()),\n    tslib_1.__metadata(\"design:paramtypes\", [String, Object])\n], Logger);\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}