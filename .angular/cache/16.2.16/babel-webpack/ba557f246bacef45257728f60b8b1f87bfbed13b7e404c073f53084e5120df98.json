{"ast":null,"code":"import { buildMessage, ValidateBy } from '../common/ValidateBy';\nexport const IS_NOT_IN = 'isNotIn';\n/**\n * Checks if given value not in a array of allowed values.\n */\nexport function isNotIn(value, possibleValues) {\n  return !Array.isArray(possibleValues) || !possibleValues.some(possibleValue => possibleValue === value);\n}\n/**\n * Checks if given value not in a array of allowed values.\n */\nexport function IsNotIn(values, validationOptions) {\n  return ValidateBy({\n    name: IS_NOT_IN,\n    constraints: [values],\n    validator: {\n      validate: (value, args) => isNotIn(value, args === null || args === void 0 ? void 0 : args.constraints[0]),\n      defaultMessage: buildMessage(eachPrefix => eachPrefix + '$property should not be one of the following values: $constraint1', validationOptions)\n    }\n  }, validationOptions);\n}","map":{"version":3,"names":["buildMessage","ValidateBy","IS_NOT_IN","isNotIn","value","possibleValues","Array","isArray","some","possibleValue","IsNotIn","values","validationOptions","name","constraints","validator","validate","args","defaultMessage","eachPrefix"],"sources":["C:/Users/salim/Dev/avans-nx-workshop-2024/avans-nx-workshop/node_modules/class-validator/esm2015/decorator/common/IsNotIn.js"],"sourcesContent":["import { buildMessage, ValidateBy } from '../common/ValidateBy';\nexport const IS_NOT_IN = 'isNotIn';\n/**\n * Checks if given value not in a array of allowed values.\n */\nexport function isNotIn(value, possibleValues) {\n    return !Array.isArray(possibleValues) || !possibleValues.some(possibleValue => possibleValue === value);\n}\n/**\n * Checks if given value not in a array of allowed values.\n */\nexport function IsNotIn(values, validationOptions) {\n    return ValidateBy({\n        name: IS_NOT_IN,\n        constraints: [values],\n        validator: {\n            validate: (value, args) => isNotIn(value, args === null || args === void 0 ? void 0 : args.constraints[0]),\n            defaultMessage: buildMessage(eachPrefix => eachPrefix + '$property should not be one of the following values: $constraint1', validationOptions),\n        },\n    }, validationOptions);\n}\n"],"mappings":"AAAA,SAASA,YAAY,EAAEC,UAAU,QAAQ,sBAAsB;AAC/D,OAAO,MAAMC,SAAS,GAAG,SAAS;AAClC;AACA;AACA;AACA,OAAO,SAASC,OAAOA,CAACC,KAAK,EAAEC,cAAc,EAAE;EAC3C,OAAO,CAACC,KAAK,CAACC,OAAO,CAACF,cAAc,CAAC,IAAI,CAACA,cAAc,CAACG,IAAI,CAACC,aAAa,IAAIA,aAAa,KAAKL,KAAK,CAAC;AAC3G;AACA;AACA;AACA;AACA,OAAO,SAASM,OAAOA,CAACC,MAAM,EAAEC,iBAAiB,EAAE;EAC/C,OAAOX,UAAU,CAAC;IACdY,IAAI,EAAEX,SAAS;IACfY,WAAW,EAAE,CAACH,MAAM,CAAC;IACrBI,SAAS,EAAE;MACPC,QAAQ,EAAEA,CAACZ,KAAK,EAAEa,IAAI,KAAKd,OAAO,CAACC,KAAK,EAAEa,IAAI,KAAK,IAAI,IAAIA,IAAI,KAAK,KAAK,CAAC,GAAG,KAAK,CAAC,GAAGA,IAAI,CAACH,WAAW,CAAC,CAAC,CAAC,CAAC;MAC1GI,cAAc,EAAElB,YAAY,CAACmB,UAAU,IAAIA,UAAU,GAAG,mEAAmE,EAAEP,iBAAiB;IAClJ;EACJ,CAAC,EAAEA,iBAAiB,CAAC;AACzB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}