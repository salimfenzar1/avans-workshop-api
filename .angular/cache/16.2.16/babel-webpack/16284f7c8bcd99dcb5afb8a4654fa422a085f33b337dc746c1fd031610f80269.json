{"ast":null,"code":"import { buildMessage, ValidateBy } from '../common/ValidateBy';\nexport const ARRAY_NOT_CONTAINS = 'arrayNotContains';\n/**\n * Checks if array does not contain any of the given values.\n * If null or undefined is given then this function returns false.\n */\nexport function arrayNotContains(array, values) {\n  if (!Array.isArray(array)) return false;\n  return values.every(value => array.indexOf(value) === -1);\n}\n/**\n * Checks if array does not contain any of the given values.\n * If null or undefined is given then this function returns false.\n */\nexport function ArrayNotContains(values, validationOptions) {\n  return ValidateBy({\n    name: ARRAY_NOT_CONTAINS,\n    constraints: [values],\n    validator: {\n      validate: (value, args) => arrayNotContains(value, args === null || args === void 0 ? void 0 : args.constraints[0]),\n      defaultMessage: buildMessage(eachPrefix => eachPrefix + '$property should not contain $constraint1 values', validationOptions)\n    }\n  }, validationOptions);\n}","map":{"version":3,"names":["buildMessage","ValidateBy","ARRAY_NOT_CONTAINS","arrayNotContains","array","values","Array","isArray","every","value","indexOf","ArrayNotContains","validationOptions","name","constraints","validator","validate","args","defaultMessage","eachPrefix"],"sources":["C:/Users/salim/Dev/avans-nx-workshop-2024/avans-nx-workshop/node_modules/class-validator/esm2015/decorator/array/ArrayNotContains.js"],"sourcesContent":["import { buildMessage, ValidateBy } from '../common/ValidateBy';\nexport const ARRAY_NOT_CONTAINS = 'arrayNotContains';\n/**\n * Checks if array does not contain any of the given values.\n * If null or undefined is given then this function returns false.\n */\nexport function arrayNotContains(array, values) {\n    if (!Array.isArray(array))\n        return false;\n    return values.every(value => array.indexOf(value) === -1);\n}\n/**\n * Checks if array does not contain any of the given values.\n * If null or undefined is given then this function returns false.\n */\nexport function ArrayNotContains(values, validationOptions) {\n    return ValidateBy({\n        name: ARRAY_NOT_CONTAINS,\n        constraints: [values],\n        validator: {\n            validate: (value, args) => arrayNotContains(value, args === null || args === void 0 ? void 0 : args.constraints[0]),\n            defaultMessage: buildMessage(eachPrefix => eachPrefix + '$property should not contain $constraint1 values', validationOptions),\n        },\n    }, validationOptions);\n}\n"],"mappings":"AAAA,SAASA,YAAY,EAAEC,UAAU,QAAQ,sBAAsB;AAC/D,OAAO,MAAMC,kBAAkB,GAAG,kBAAkB;AACpD;AACA;AACA;AACA;AACA,OAAO,SAASC,gBAAgBA,CAACC,KAAK,EAAEC,MAAM,EAAE;EAC5C,IAAI,CAACC,KAAK,CAACC,OAAO,CAACH,KAAK,CAAC,EACrB,OAAO,KAAK;EAChB,OAAOC,MAAM,CAACG,KAAK,CAACC,KAAK,IAAIL,KAAK,CAACM,OAAO,CAACD,KAAK,CAAC,KAAK,CAAC,CAAC,CAAC;AAC7D;AACA;AACA;AACA;AACA;AACA,OAAO,SAASE,gBAAgBA,CAACN,MAAM,EAAEO,iBAAiB,EAAE;EACxD,OAAOX,UAAU,CAAC;IACdY,IAAI,EAAEX,kBAAkB;IACxBY,WAAW,EAAE,CAACT,MAAM,CAAC;IACrBU,SAAS,EAAE;MACPC,QAAQ,EAAEA,CAACP,KAAK,EAAEQ,IAAI,KAAKd,gBAAgB,CAACM,KAAK,EAAEQ,IAAI,KAAK,IAAI,IAAIA,IAAI,KAAK,KAAK,CAAC,GAAG,KAAK,CAAC,GAAGA,IAAI,CAACH,WAAW,CAAC,CAAC,CAAC,CAAC;MACnHI,cAAc,EAAElB,YAAY,CAACmB,UAAU,IAAIA,UAAU,GAAG,kDAAkD,EAAEP,iBAAiB;IACjI;EACJ,CAAC,EAAEA,iBAAiB,CAAC;AACzB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}