{"ast":null,"code":"import { ValidationMetadata } from '../../metadata/ValidationMetadata';\nimport { getMetadataStorage } from '../../metadata/MetadataStorage';\nimport { ValidationTypes } from '../../validation/ValidationTypes';\nimport { ConstraintMetadata } from '../../metadata/ConstraintMetadata';\n/**\n * Registers custom validator class.\n */\nexport function ValidatorConstraint(options) {\n  return function (target) {\n    const isAsync = options && options.async;\n    let name = options && options.name ? options.name : '';\n    if (!name) {\n      name = target.name;\n      if (!name)\n        // generate name if it was not given\n        name = name.replace(/\\.?([A-Z]+)/g, (x, y) => '_' + y.toLowerCase()).replace(/^_/, '');\n    }\n    const metadata = new ConstraintMetadata(target, name, isAsync);\n    getMetadataStorage().addConstraintMetadata(metadata);\n  };\n}\nexport function Validate(constraintClass, constraintsOrValidationOptions, maybeValidationOptions) {\n  return function (object, propertyName) {\n    const args = {\n      type: ValidationTypes.CUSTOM_VALIDATION,\n      target: object.constructor,\n      propertyName: propertyName,\n      constraintCls: constraintClass,\n      constraints: Array.isArray(constraintsOrValidationOptions) ? constraintsOrValidationOptions : undefined,\n      validationOptions: !Array.isArray(constraintsOrValidationOptions) ? constraintsOrValidationOptions : maybeValidationOptions\n    };\n    getMetadataStorage().addValidationMetadata(new ValidationMetadata(args));\n  };\n}","map":{"version":3,"names":["ValidationMetadata","getMetadataStorage","ValidationTypes","ConstraintMetadata","ValidatorConstraint","options","target","isAsync","async","name","replace","x","y","toLowerCase","metadata","addConstraintMetadata","Validate","constraintClass","constraintsOrValidationOptions","maybeValidationOptions","object","propertyName","args","type","CUSTOM_VALIDATION","constructor","constraintCls","constraints","Array","isArray","undefined","validationOptions","addValidationMetadata"],"sources":["C:/Users/salim/Dev/avans-nx-workshop-2024/avans-nx-workshop/node_modules/class-validator/esm2015/decorator/common/Validate.js"],"sourcesContent":["import { ValidationMetadata } from '../../metadata/ValidationMetadata';\nimport { getMetadataStorage } from '../../metadata/MetadataStorage';\nimport { ValidationTypes } from '../../validation/ValidationTypes';\nimport { ConstraintMetadata } from '../../metadata/ConstraintMetadata';\n/**\n * Registers custom validator class.\n */\nexport function ValidatorConstraint(options) {\n    return function (target) {\n        const isAsync = options && options.async;\n        let name = options && options.name ? options.name : '';\n        if (!name) {\n            name = target.name;\n            if (!name)\n                // generate name if it was not given\n                name = name.replace(/\\.?([A-Z]+)/g, (x, y) => '_' + y.toLowerCase()).replace(/^_/, '');\n        }\n        const metadata = new ConstraintMetadata(target, name, isAsync);\n        getMetadataStorage().addConstraintMetadata(metadata);\n    };\n}\nexport function Validate(constraintClass, constraintsOrValidationOptions, maybeValidationOptions) {\n    return function (object, propertyName) {\n        const args = {\n            type: ValidationTypes.CUSTOM_VALIDATION,\n            target: object.constructor,\n            propertyName: propertyName,\n            constraintCls: constraintClass,\n            constraints: Array.isArray(constraintsOrValidationOptions) ? constraintsOrValidationOptions : undefined,\n            validationOptions: !Array.isArray(constraintsOrValidationOptions)\n                ? constraintsOrValidationOptions\n                : maybeValidationOptions,\n        };\n        getMetadataStorage().addValidationMetadata(new ValidationMetadata(args));\n    };\n}\n"],"mappings":"AAAA,SAASA,kBAAkB,QAAQ,mCAAmC;AACtE,SAASC,kBAAkB,QAAQ,gCAAgC;AACnE,SAASC,eAAe,QAAQ,kCAAkC;AAClE,SAASC,kBAAkB,QAAQ,mCAAmC;AACtE;AACA;AACA;AACA,OAAO,SAASC,mBAAmBA,CAACC,OAAO,EAAE;EACzC,OAAO,UAAUC,MAAM,EAAE;IACrB,MAAMC,OAAO,GAAGF,OAAO,IAAIA,OAAO,CAACG,KAAK;IACxC,IAAIC,IAAI,GAAGJ,OAAO,IAAIA,OAAO,CAACI,IAAI,GAAGJ,OAAO,CAACI,IAAI,GAAG,EAAE;IACtD,IAAI,CAACA,IAAI,EAAE;MACPA,IAAI,GAAGH,MAAM,CAACG,IAAI;MAClB,IAAI,CAACA,IAAI;QACL;QACAA,IAAI,GAAGA,IAAI,CAACC,OAAO,CAAC,cAAc,EAAE,CAACC,CAAC,EAAEC,CAAC,KAAK,GAAG,GAAGA,CAAC,CAACC,WAAW,CAAC,CAAC,CAAC,CAACH,OAAO,CAAC,IAAI,EAAE,EAAE,CAAC;IAC9F;IACA,MAAMI,QAAQ,GAAG,IAAIX,kBAAkB,CAACG,MAAM,EAAEG,IAAI,EAAEF,OAAO,CAAC;IAC9DN,kBAAkB,CAAC,CAAC,CAACc,qBAAqB,CAACD,QAAQ,CAAC;EACxD,CAAC;AACL;AACA,OAAO,SAASE,QAAQA,CAACC,eAAe,EAAEC,8BAA8B,EAAEC,sBAAsB,EAAE;EAC9F,OAAO,UAAUC,MAAM,EAAEC,YAAY,EAAE;IACnC,MAAMC,IAAI,GAAG;MACTC,IAAI,EAAErB,eAAe,CAACsB,iBAAiB;MACvClB,MAAM,EAAEc,MAAM,CAACK,WAAW;MAC1BJ,YAAY,EAAEA,YAAY;MAC1BK,aAAa,EAAET,eAAe;MAC9BU,WAAW,EAAEC,KAAK,CAACC,OAAO,CAACX,8BAA8B,CAAC,GAAGA,8BAA8B,GAAGY,SAAS;MACvGC,iBAAiB,EAAE,CAACH,KAAK,CAACC,OAAO,CAACX,8BAA8B,CAAC,GAC3DA,8BAA8B,GAC9BC;IACV,CAAC;IACDlB,kBAAkB,CAAC,CAAC,CAAC+B,qBAAqB,CAAC,IAAIhC,kBAAkB,CAACsB,IAAI,CAAC,CAAC;EAC5E,CAAC;AACL","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}