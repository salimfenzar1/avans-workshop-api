{"ast":null,"code":"var _a;\nimport { __decorate, __metadata } from \"tslib\";\nimport { Component } from '@angular/core';\nimport { AuthService } from '@avans-nx-workshop/features';\nimport { Router } from '@angular/router';\nexport let LoginComponent = class LoginComponent {\n  constructor(authService, router) {\n    this.authService = authService;\n    this.router = router;\n    this.credentials = {\n      emailAddress: '',\n      password: ''\n    };\n    this.errorMessage = null;\n  }\n  login() {\n    this.authService.login(this.credentials).subscribe({\n      next: user => {\n        console.log('Login successful', user);\n        localStorage.setItem('token', user.token);\n        this.router.navigate(['/']);\n      },\n      error: err => {\n        this.errorMessage = 'Invalid email or password';\n        console.error('Login error', err);\n      }\n    });\n  }\n};\nLoginComponent = __decorate([Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html'\n}), __metadata(\"design:paramtypes\", [typeof (_a = typeof AuthService !== \"undefined\" && AuthService) === \"function\" ? _a : Object, Router])], LoginComponent);","map":{"version":3,"names":["Component","AuthService","Router","LoginComponent","constructor","authService","router","credentials","emailAddress","password","errorMessage","login","subscribe","next","user","console","log","localStorage","setItem","token","navigate","error","err","__decorate","selector","templateUrl","_a","Object"],"sources":["C:\\Users\\salim\\Dev\\avans-nx-workshop-2024\\avans-nx-workshop\\apps\\my-app\\src\\app\\components\\login\\login.component.ts"],"sourcesContent":["import { Component } from '@angular/core';\r\nimport { AuthService, IUserCredentials } from '@avans-nx-workshop/features';\r\nimport { Router } from '@angular/router';\r\n\r\n@Component({\r\n    selector: 'app-login',\r\n    templateUrl: './login.component.html',\r\n})\r\nexport class LoginComponent {\r\n    credentials: IUserCredentials = { emailAddress: '', password: '' };\r\n    errorMessage: string | null = null;\r\n\r\n    constructor(private authService: AuthService, private router: Router) {}\r\n\r\n    login(): void {\r\n        this.authService.login(this.credentials).subscribe({\r\n            next: (user) => {\r\n                console.log('Login successful', user);\r\n                localStorage.setItem('token', user.token); \r\n                this.router.navigate(['/']);\r\n            },\r\n            error: (err) => {\r\n                this.errorMessage = 'Invalid email or password';\r\n                console.error('Login error', err);\r\n            },\r\n        });\r\n    }\r\n}\r\n"],"mappings":";;AAAA,SAASA,SAAS,QAAQ,eAAe;AACzC,SAASC,WAAW,QAA0B,6BAA6B;AAC3E,SAASC,MAAM,QAAQ,iBAAiB;AAMjC,WAAMC,cAAc,GAApB,MAAMA,cAAc;EAIvBC,YAAoBC,WAAwB,EAAUC,MAAc;IAAhD,KAAAD,WAAW,GAAXA,WAAW;IAAuB,KAAAC,MAAM,GAANA,MAAM;IAH5D,KAAAC,WAAW,GAAqB;MAAEC,YAAY,EAAE,EAAE;MAAEC,QAAQ,EAAE;IAAE,CAAE;IAClE,KAAAC,YAAY,GAAkB,IAAI;EAEqC;EAEvEC,KAAKA,CAAA;IACD,IAAI,CAACN,WAAW,CAACM,KAAK,CAAC,IAAI,CAACJ,WAAW,CAAC,CAACK,SAAS,CAAC;MAC/CC,IAAI,EAAGC,IAAI,IAAI;QACXC,OAAO,CAACC,GAAG,CAAC,kBAAkB,EAAEF,IAAI,CAAC;QACrCG,YAAY,CAACC,OAAO,CAAC,OAAO,EAAEJ,IAAI,CAACK,KAAK,CAAC;QACzC,IAAI,CAACb,MAAM,CAACc,QAAQ,CAAC,CAAC,GAAG,CAAC,CAAC;MAC/B,CAAC;MACDC,KAAK,EAAGC,GAAG,IAAI;QACX,IAAI,CAACZ,YAAY,GAAG,2BAA2B;QAC/CK,OAAO,CAACM,KAAK,CAAC,aAAa,EAAEC,GAAG,CAAC;MACrC;KACH,CAAC;EACN;CACH;AAnBYnB,cAAc,GAAAoB,UAAA,EAJ1BvB,SAAS,CAAC;EACPwB,QAAQ,EAAE,WAAW;EACrBC,WAAW,EAAE;CAChB,CAAC,E,qDAKmCxB,WAAW,oBAAXA,WAAW,mBAAAyB,EAAA,GAAAC,MAAA,EAAkBzB,MAAM,G,EAJ3DC,cAAc,CAmB1B","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}