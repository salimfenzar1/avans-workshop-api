{"ast":null,"code":"import { ValidationMetadata } from '../metadata/ValidationMetadata';\n/**\n * Used to transform validation schemas to validation metadatas.\n */\nexport class ValidationSchemaToMetadataTransformer {\n  transform(schema) {\n    const metadatas = [];\n    Object.keys(schema.properties).forEach(property => {\n      schema.properties[property].forEach(validation => {\n        const validationOptions = {\n          message: validation.message,\n          groups: validation.groups,\n          always: validation.always,\n          each: validation.each\n        };\n        const args = {\n          type: validation.type,\n          name: validation.name,\n          target: schema.name,\n          propertyName: property,\n          constraints: validation.constraints,\n          validationTypeOptions: validation.options,\n          validationOptions: validationOptions\n        };\n        metadatas.push(new ValidationMetadata(args));\n      });\n    });\n    return metadatas;\n  }\n}","map":{"version":3,"names":["ValidationMetadata","ValidationSchemaToMetadataTransformer","transform","schema","metadatas","Object","keys","properties","forEach","property","validation","validationOptions","message","groups","always","each","args","type","name","target","propertyName","constraints","validationTypeOptions","options","push"],"sources":["C:/Users/salim/Dev/avans-nx-workshop-2024/avans-nx-workshop/node_modules/class-validator/esm2015/validation-schema/ValidationSchemaToMetadataTransformer.js"],"sourcesContent":["import { ValidationMetadata } from '../metadata/ValidationMetadata';\n/**\n * Used to transform validation schemas to validation metadatas.\n */\nexport class ValidationSchemaToMetadataTransformer {\n    transform(schema) {\n        const metadatas = [];\n        Object.keys(schema.properties).forEach(property => {\n            schema.properties[property].forEach(validation => {\n                const validationOptions = {\n                    message: validation.message,\n                    groups: validation.groups,\n                    always: validation.always,\n                    each: validation.each,\n                };\n                const args = {\n                    type: validation.type,\n                    name: validation.name,\n                    target: schema.name,\n                    propertyName: property,\n                    constraints: validation.constraints,\n                    validationTypeOptions: validation.options,\n                    validationOptions: validationOptions,\n                };\n                metadatas.push(new ValidationMetadata(args));\n            });\n        });\n        return metadatas;\n    }\n}\n"],"mappings":"AAAA,SAASA,kBAAkB,QAAQ,gCAAgC;AACnE;AACA;AACA;AACA,OAAO,MAAMC,qCAAqC,CAAC;EAC/CC,SAASA,CAACC,MAAM,EAAE;IACd,MAAMC,SAAS,GAAG,EAAE;IACpBC,MAAM,CAACC,IAAI,CAACH,MAAM,CAACI,UAAU,CAAC,CAACC,OAAO,CAACC,QAAQ,IAAI;MAC/CN,MAAM,CAACI,UAAU,CAACE,QAAQ,CAAC,CAACD,OAAO,CAACE,UAAU,IAAI;QAC9C,MAAMC,iBAAiB,GAAG;UACtBC,OAAO,EAAEF,UAAU,CAACE,OAAO;UAC3BC,MAAM,EAAEH,UAAU,CAACG,MAAM;UACzBC,MAAM,EAAEJ,UAAU,CAACI,MAAM;UACzBC,IAAI,EAAEL,UAAU,CAACK;QACrB,CAAC;QACD,MAAMC,IAAI,GAAG;UACTC,IAAI,EAAEP,UAAU,CAACO,IAAI;UACrBC,IAAI,EAAER,UAAU,CAACQ,IAAI;UACrBC,MAAM,EAAEhB,MAAM,CAACe,IAAI;UACnBE,YAAY,EAAEX,QAAQ;UACtBY,WAAW,EAAEX,UAAU,CAACW,WAAW;UACnCC,qBAAqB,EAAEZ,UAAU,CAACa,OAAO;UACzCZ,iBAAiB,EAAEA;QACvB,CAAC;QACDP,SAAS,CAACoB,IAAI,CAAC,IAAIxB,kBAAkB,CAACgB,IAAI,CAAC,CAAC;MAChD,CAAC,CAAC;IACN,CAAC,CAAC;IACF,OAAOZ,SAAS;EACpB;AACJ","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}