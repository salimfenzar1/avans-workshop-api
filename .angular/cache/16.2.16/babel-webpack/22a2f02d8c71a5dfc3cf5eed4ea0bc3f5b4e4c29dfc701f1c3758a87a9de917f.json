{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.UseGuards = UseGuards;\nconst constants_1 = require(\"../../constants\");\nconst extend_metadata_util_1 = require(\"../../utils/extend-metadata.util\");\nconst shared_utils_1 = require(\"../../utils/shared.utils\");\nconst validate_each_util_1 = require(\"../../utils/validate-each.util\");\n/**\n * Decorator that binds guards to the scope of the controller or method,\n * depending on its context.\n *\n * When `@UseGuards` is used at the controller level, the guard will be\n * applied to every handler (method) in the controller.\n *\n * When `@UseGuards` is used at the individual handler level, the guard\n * will apply only to that specific method.\n *\n * @param guards a single guard instance or class, or a list of guard instances\n * or classes.\n *\n * @see [Guards](https://docs.nestjs.com/guards)\n *\n * @usageNotes\n * Guards can also be set up globally for all controllers and routes\n * using `app.useGlobalGuards()`.  [See here for details](https://docs.nestjs.com/guards#binding-guards)\n *\n * @publicApi\n */\nfunction UseGuards(...guards) {\n  return (target, key, descriptor) => {\n    const isGuardValid = guard => guard && ((0, shared_utils_1.isFunction)(guard) || (0, shared_utils_1.isFunction)(guard.canActivate));\n    if (descriptor) {\n      (0, validate_each_util_1.validateEach)(target.constructor, guards, isGuardValid, '@UseGuards', 'guard');\n      (0, extend_metadata_util_1.extendArrayMetadata)(constants_1.GUARDS_METADATA, guards, descriptor.value);\n      return descriptor;\n    }\n    (0, validate_each_util_1.validateEach)(target, guards, isGuardValid, '@UseGuards', 'guard');\n    (0, extend_metadata_util_1.extendArrayMetadata)(constants_1.GUARDS_METADATA, guards, target);\n    return target;\n  };\n}","map":{"version":3,"names":["Object","defineProperty","exports","value","UseGuards","constants_1","require","extend_metadata_util_1","shared_utils_1","validate_each_util_1","guards","target","key","descriptor","isGuardValid","guard","isFunction","canActivate","validateEach","constructor","extendArrayMetadata","GUARDS_METADATA"],"sources":["C:/Users/salim/Dev/avans-nx-workshop-2024/avans-nx-workshop/node_modules/@nestjs/common/decorators/core/use-guards.decorator.js"],"sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.UseGuards = UseGuards;\nconst constants_1 = require(\"../../constants\");\nconst extend_metadata_util_1 = require(\"../../utils/extend-metadata.util\");\nconst shared_utils_1 = require(\"../../utils/shared.utils\");\nconst validate_each_util_1 = require(\"../../utils/validate-each.util\");\n/**\n * Decorator that binds guards to the scope of the controller or method,\n * depending on its context.\n *\n * When `@UseGuards` is used at the controller level, the guard will be\n * applied to every handler (method) in the controller.\n *\n * When `@UseGuards` is used at the individual handler level, the guard\n * will apply only to that specific method.\n *\n * @param guards a single guard instance or class, or a list of guard instances\n * or classes.\n *\n * @see [Guards](https://docs.nestjs.com/guards)\n *\n * @usageNotes\n * Guards can also be set up globally for all controllers and routes\n * using `app.useGlobalGuards()`.  [See here for details](https://docs.nestjs.com/guards#binding-guards)\n *\n * @publicApi\n */\nfunction UseGuards(...guards) {\n    return (target, key, descriptor) => {\n        const isGuardValid = (guard) => guard &&\n            ((0, shared_utils_1.isFunction)(guard) ||\n                (0, shared_utils_1.isFunction)(guard.canActivate));\n        if (descriptor) {\n            (0, validate_each_util_1.validateEach)(target.constructor, guards, isGuardValid, '@UseGuards', 'guard');\n            (0, extend_metadata_util_1.extendArrayMetadata)(constants_1.GUARDS_METADATA, guards, descriptor.value);\n            return descriptor;\n        }\n        (0, validate_each_util_1.validateEach)(target, guards, isGuardValid, '@UseGuards', 'guard');\n        (0, extend_metadata_util_1.extendArrayMetadata)(constants_1.GUARDS_METADATA, guards, target);\n        return target;\n    };\n}\n"],"mappings":"AAAA,YAAY;;AACZA,MAAM,CAACC,cAAc,CAACC,OAAO,EAAE,YAAY,EAAE;EAAEC,KAAK,EAAE;AAAK,CAAC,CAAC;AAC7DD,OAAO,CAACE,SAAS,GAAGA,SAAS;AAC7B,MAAMC,WAAW,GAAGC,OAAO,CAAC,iBAAiB,CAAC;AAC9C,MAAMC,sBAAsB,GAAGD,OAAO,CAAC,kCAAkC,CAAC;AAC1E,MAAME,cAAc,GAAGF,OAAO,CAAC,0BAA0B,CAAC;AAC1D,MAAMG,oBAAoB,GAAGH,OAAO,CAAC,gCAAgC,CAAC;AACtE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAASF,SAASA,CAAC,GAAGM,MAAM,EAAE;EAC1B,OAAO,CAACC,MAAM,EAAEC,GAAG,EAAEC,UAAU,KAAK;IAChC,MAAMC,YAAY,GAAIC,KAAK,IAAKA,KAAK,KAChC,CAAC,CAAC,EAAEP,cAAc,CAACQ,UAAU,EAAED,KAAK,CAAC,IAClC,CAAC,CAAC,EAAEP,cAAc,CAACQ,UAAU,EAAED,KAAK,CAACE,WAAW,CAAC,CAAC;IAC1D,IAAIJ,UAAU,EAAE;MACZ,CAAC,CAAC,EAAEJ,oBAAoB,CAACS,YAAY,EAAEP,MAAM,CAACQ,WAAW,EAAET,MAAM,EAAEI,YAAY,EAAE,YAAY,EAAE,OAAO,CAAC;MACvG,CAAC,CAAC,EAAEP,sBAAsB,CAACa,mBAAmB,EAAEf,WAAW,CAACgB,eAAe,EAAEX,MAAM,EAAEG,UAAU,CAACV,KAAK,CAAC;MACtG,OAAOU,UAAU;IACrB;IACA,CAAC,CAAC,EAAEJ,oBAAoB,CAACS,YAAY,EAAEP,MAAM,EAAED,MAAM,EAAEI,YAAY,EAAE,YAAY,EAAE,OAAO,CAAC;IAC3F,CAAC,CAAC,EAAEP,sBAAsB,CAACa,mBAAmB,EAAEf,WAAW,CAACgB,eAAe,EAAEX,MAAM,EAAEC,MAAM,CAAC;IAC5F,OAAOA,MAAM;EACjB,CAAC;AACL","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}