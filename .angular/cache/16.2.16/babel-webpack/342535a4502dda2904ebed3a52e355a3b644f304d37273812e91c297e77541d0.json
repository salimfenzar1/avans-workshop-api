{"ast":null,"code":"import { defaultMetadataStorage } from '../storage';\n/**\n * Specifies a type of the property.\n * The given TypeFunction can return a constructor. A discriminator can be given in the options.\n *\n * Can be applied to properties only.\n */\nexport function Type(typeFunction, options = {}) {\n  return function (target, propertyName) {\n    const reflectedType = Reflect.getMetadata('design:type', target, propertyName);\n    defaultMetadataStorage.addTypeMetadata({\n      target: target.constructor,\n      propertyName: propertyName,\n      reflectedType,\n      typeFunction,\n      options\n    });\n  };\n}","map":{"version":3,"names":["defaultMetadataStorage","Type","typeFunction","options","target","propertyName","reflectedType","Reflect","getMetadata","addTypeMetadata","constructor"],"sources":["C:/Users/salim/Dev/avans-nx-workshop-2024/avans-nx-workshop/node_modules/class-transformer/esm2015/decorators/type.decorator.js"],"sourcesContent":["import { defaultMetadataStorage } from '../storage';\n/**\n * Specifies a type of the property.\n * The given TypeFunction can return a constructor. A discriminator can be given in the options.\n *\n * Can be applied to properties only.\n */\nexport function Type(typeFunction, options = {}) {\n    return function (target, propertyName) {\n        const reflectedType = Reflect.getMetadata('design:type', target, propertyName);\n        defaultMetadataStorage.addTypeMetadata({\n            target: target.constructor,\n            propertyName: propertyName,\n            reflectedType,\n            typeFunction,\n            options,\n        });\n    };\n}\n"],"mappings":"AAAA,SAASA,sBAAsB,QAAQ,YAAY;AACnD;AACA;AACA;AACA;AACA;AACA;AACA,OAAO,SAASC,IAAIA,CAACC,YAAY,EAAEC,OAAO,GAAG,CAAC,CAAC,EAAE;EAC7C,OAAO,UAAUC,MAAM,EAAEC,YAAY,EAAE;IACnC,MAAMC,aAAa,GAAGC,OAAO,CAACC,WAAW,CAAC,aAAa,EAAEJ,MAAM,EAAEC,YAAY,CAAC;IAC9EL,sBAAsB,CAACS,eAAe,CAAC;MACnCL,MAAM,EAAEA,MAAM,CAACM,WAAW;MAC1BL,YAAY,EAAEA,YAAY;MAC1BC,aAAa;MACbJ,YAAY;MACZC;IACJ,CAAC,CAAC;EACN,CAAC;AACL","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}