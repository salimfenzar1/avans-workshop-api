{"ast":null,"code":"import { buildMessage, ValidateBy } from '../common/ValidateBy';\nimport isLengthValidator from 'validator/lib/isLength';\nexport const MIN_LENGTH = 'minLength';\n/**\n * Checks if the string's length is not less than given number. Note: this function takes into account surrogate pairs.\n * If given value is not a string, then it returns false.\n */\nexport function minLength(value, min) {\n  return typeof value === 'string' && isLengthValidator(value, {\n    min\n  });\n}\n/**\n * Checks if the string's length is not less than given number. Note: this function takes into account surrogate pairs.\n * If given value is not a string, then it returns false.\n */\nexport function MinLength(min, validationOptions) {\n  return ValidateBy({\n    name: MIN_LENGTH,\n    constraints: [min],\n    validator: {\n      validate: (value, args) => minLength(value, args === null || args === void 0 ? void 0 : args.constraints[0]),\n      defaultMessage: buildMessage(eachPrefix => eachPrefix + '$property must be longer than or equal to $constraint1 characters', validationOptions)\n    }\n  }, validationOptions);\n}","map":{"version":3,"names":["buildMessage","ValidateBy","isLengthValidator","MIN_LENGTH","minLength","value","min","MinLength","validationOptions","name","constraints","validator","validate","args","defaultMessage","eachPrefix"],"sources":["C:/Users/salim/Dev/avans-nx-workshop-2024/avans-nx-workshop/node_modules/class-validator/esm2015/decorator/string/MinLength.js"],"sourcesContent":["import { buildMessage, ValidateBy } from '../common/ValidateBy';\nimport isLengthValidator from 'validator/lib/isLength';\nexport const MIN_LENGTH = 'minLength';\n/**\n * Checks if the string's length is not less than given number. Note: this function takes into account surrogate pairs.\n * If given value is not a string, then it returns false.\n */\nexport function minLength(value, min) {\n    return typeof value === 'string' && isLengthValidator(value, { min });\n}\n/**\n * Checks if the string's length is not less than given number. Note: this function takes into account surrogate pairs.\n * If given value is not a string, then it returns false.\n */\nexport function MinLength(min, validationOptions) {\n    return ValidateBy({\n        name: MIN_LENGTH,\n        constraints: [min],\n        validator: {\n            validate: (value, args) => minLength(value, args === null || args === void 0 ? void 0 : args.constraints[0]),\n            defaultMessage: buildMessage(eachPrefix => eachPrefix + '$property must be longer than or equal to $constraint1 characters', validationOptions),\n        },\n    }, validationOptions);\n}\n"],"mappings":"AAAA,SAASA,YAAY,EAAEC,UAAU,QAAQ,sBAAsB;AAC/D,OAAOC,iBAAiB,MAAM,wBAAwB;AACtD,OAAO,MAAMC,UAAU,GAAG,WAAW;AACrC;AACA;AACA;AACA;AACA,OAAO,SAASC,SAASA,CAACC,KAAK,EAAEC,GAAG,EAAE;EAClC,OAAO,OAAOD,KAAK,KAAK,QAAQ,IAAIH,iBAAiB,CAACG,KAAK,EAAE;IAAEC;EAAI,CAAC,CAAC;AACzE;AACA;AACA;AACA;AACA;AACA,OAAO,SAASC,SAASA,CAACD,GAAG,EAAEE,iBAAiB,EAAE;EAC9C,OAAOP,UAAU,CAAC;IACdQ,IAAI,EAAEN,UAAU;IAChBO,WAAW,EAAE,CAACJ,GAAG,CAAC;IAClBK,SAAS,EAAE;MACPC,QAAQ,EAAEA,CAACP,KAAK,EAAEQ,IAAI,KAAKT,SAAS,CAACC,KAAK,EAAEQ,IAAI,KAAK,IAAI,IAAIA,IAAI,KAAK,KAAK,CAAC,GAAG,KAAK,CAAC,GAAGA,IAAI,CAACH,WAAW,CAAC,CAAC,CAAC,CAAC;MAC5GI,cAAc,EAAEd,YAAY,CAACe,UAAU,IAAIA,UAAU,GAAG,mEAAmE,EAAEP,iBAAiB;IAClJ;EACJ,CAAC,EAAEA,iBAAiB,CAAC;AACzB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}