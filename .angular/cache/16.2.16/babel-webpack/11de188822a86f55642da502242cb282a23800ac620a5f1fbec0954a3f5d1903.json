{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.mapToClass = exports.filterMiddleware = exports.mapToExcludeRoute = void 0;\nexports.isMiddlewareClass = isMiddlewareClass;\nexports.assignToken = assignToken;\nexports.isMiddlewareRouteExcluded = isMiddlewareRouteExcluded;\nconst common_1 = require(\"@nestjs/common\");\nconst shared_utils_1 = require(\"@nestjs/common/utils/shared.utils\");\nconst iterare_1 = require(\"iterare\");\nconst pathToRegexp = require(\"path-to-regexp\");\nconst uid_1 = require(\"uid\");\nconst utils_1 = require(\"../router/utils\");\nconst mapToExcludeRoute = routes => {\n  return routes.map(route => {\n    if ((0, shared_utils_1.isString)(route)) {\n      return {\n        path: route,\n        requestMethod: common_1.RequestMethod.ALL,\n        pathRegex: pathToRegexp((0, shared_utils_1.addLeadingSlash)(route))\n      };\n    }\n    return {\n      path: route.path,\n      requestMethod: route.method,\n      pathRegex: pathToRegexp((0, shared_utils_1.addLeadingSlash)(route.path))\n    };\n  });\n};\nexports.mapToExcludeRoute = mapToExcludeRoute;\nconst filterMiddleware = (middleware, routes, httpAdapter) => {\n  const excludedRoutes = (0, exports.mapToExcludeRoute)(routes);\n  return (0, iterare_1.iterate)([]).concat(middleware).filter(shared_utils_1.isFunction).map(item => (0, exports.mapToClass)(item, excludedRoutes, httpAdapter)).toArray();\n};\nexports.filterMiddleware = filterMiddleware;\nconst mapToClass = (middleware, excludedRoutes, httpAdapter) => {\n  if (isMiddlewareClass(middleware)) {\n    if (excludedRoutes.length <= 0) {\n      return middleware;\n    }\n    const MiddlewareHost = class extends middleware {\n      use(...params) {\n        const [req, _, next] = params;\n        const isExcluded = isMiddlewareRouteExcluded(req, excludedRoutes, httpAdapter);\n        if (isExcluded) {\n          return next();\n        }\n        return super.use(...params);\n      }\n    };\n    return assignToken(MiddlewareHost, middleware.name);\n  }\n  return assignToken(class {\n    constructor() {\n      this.use = (...params) => {\n        const [req, _, next] = params;\n        const isExcluded = isMiddlewareRouteExcluded(req, excludedRoutes, httpAdapter);\n        if (isExcluded) {\n          return next();\n        }\n        return middleware(...params);\n      };\n    }\n  });\n};\nexports.mapToClass = mapToClass;\nfunction isMiddlewareClass(middleware) {\n  const middlewareStr = middleware.toString();\n  if (middlewareStr.substring(0, 5) === 'class') {\n    return true;\n  }\n  const middlewareArr = middlewareStr.split(' ');\n  return middlewareArr[0] === 'function' && /[A-Z]/.test(middlewareArr[1]?.[0]) && (0, shared_utils_1.isFunction)(middleware.prototype?.use);\n}\nfunction assignToken(metatype, token = (0, uid_1.uid)(21)) {\n  Object.defineProperty(metatype, 'name', {\n    value: token\n  });\n  return metatype;\n}\nfunction isMiddlewareRouteExcluded(req, excludedRoutes, httpAdapter) {\n  if (excludedRoutes.length <= 0) {\n    return false;\n  }\n  const reqMethod = httpAdapter.getRequestMethod(req);\n  const originalUrl = httpAdapter.getRequestUrl(req);\n  const queryParamsIndex = originalUrl && originalUrl.indexOf('?');\n  const pathname = queryParamsIndex >= 0 ? originalUrl.slice(0, queryParamsIndex) : originalUrl;\n  return (0, utils_1.isRouteExcluded)(excludedRoutes, pathname, common_1.RequestMethod[reqMethod]);\n}","map":{"version":3,"names":["Object","defineProperty","exports","value","mapToClass","filterMiddleware","mapToExcludeRoute","isMiddlewareClass","assignToken","isMiddlewareRouteExcluded","common_1","require","shared_utils_1","iterare_1","pathToRegexp","uid_1","utils_1","routes","map","route","isString","path","requestMethod","RequestMethod","ALL","pathRegex","addLeadingSlash","method","middleware","httpAdapter","excludedRoutes","iterate","concat","filter","isFunction","item","toArray","length","MiddlewareHost","use","params","req","_","next","isExcluded","name","constructor","middlewareStr","toString","substring","middlewareArr","split","test","prototype","metatype","token","uid","reqMethod","getRequestMethod","originalUrl","getRequestUrl","queryParamsIndex","indexOf","pathname","slice","isRouteExcluded"],"sources":["C:/Users/salim/Dev/avans-nx-workshop-2024/avans-nx-workshop/node_modules/@nestjs/core/middleware/utils.js"],"sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.mapToClass = exports.filterMiddleware = exports.mapToExcludeRoute = void 0;\nexports.isMiddlewareClass = isMiddlewareClass;\nexports.assignToken = assignToken;\nexports.isMiddlewareRouteExcluded = isMiddlewareRouteExcluded;\nconst common_1 = require(\"@nestjs/common\");\nconst shared_utils_1 = require(\"@nestjs/common/utils/shared.utils\");\nconst iterare_1 = require(\"iterare\");\nconst pathToRegexp = require(\"path-to-regexp\");\nconst uid_1 = require(\"uid\");\nconst utils_1 = require(\"../router/utils\");\nconst mapToExcludeRoute = (routes) => {\n    return routes.map(route => {\n        if ((0, shared_utils_1.isString)(route)) {\n            return {\n                path: route,\n                requestMethod: common_1.RequestMethod.ALL,\n                pathRegex: pathToRegexp((0, shared_utils_1.addLeadingSlash)(route)),\n            };\n        }\n        return {\n            path: route.path,\n            requestMethod: route.method,\n            pathRegex: pathToRegexp((0, shared_utils_1.addLeadingSlash)(route.path)),\n        };\n    });\n};\nexports.mapToExcludeRoute = mapToExcludeRoute;\nconst filterMiddleware = (middleware, routes, httpAdapter) => {\n    const excludedRoutes = (0, exports.mapToExcludeRoute)(routes);\n    return (0, iterare_1.iterate)([])\n        .concat(middleware)\n        .filter(shared_utils_1.isFunction)\n        .map((item) => (0, exports.mapToClass)(item, excludedRoutes, httpAdapter))\n        .toArray();\n};\nexports.filterMiddleware = filterMiddleware;\nconst mapToClass = (middleware, excludedRoutes, httpAdapter) => {\n    if (isMiddlewareClass(middleware)) {\n        if (excludedRoutes.length <= 0) {\n            return middleware;\n        }\n        const MiddlewareHost = class extends middleware {\n            use(...params) {\n                const [req, _, next] = params;\n                const isExcluded = isMiddlewareRouteExcluded(req, excludedRoutes, httpAdapter);\n                if (isExcluded) {\n                    return next();\n                }\n                return super.use(...params);\n            }\n        };\n        return assignToken(MiddlewareHost, middleware.name);\n    }\n    return assignToken(class {\n        constructor() {\n            this.use = (...params) => {\n                const [req, _, next] = params;\n                const isExcluded = isMiddlewareRouteExcluded(req, excludedRoutes, httpAdapter);\n                if (isExcluded) {\n                    return next();\n                }\n                return middleware(...params);\n            };\n        }\n    });\n};\nexports.mapToClass = mapToClass;\nfunction isMiddlewareClass(middleware) {\n    const middlewareStr = middleware.toString();\n    if (middlewareStr.substring(0, 5) === 'class') {\n        return true;\n    }\n    const middlewareArr = middlewareStr.split(' ');\n    return (middlewareArr[0] === 'function' &&\n        /[A-Z]/.test(middlewareArr[1]?.[0]) &&\n        (0, shared_utils_1.isFunction)(middleware.prototype?.use));\n}\nfunction assignToken(metatype, token = (0, uid_1.uid)(21)) {\n    Object.defineProperty(metatype, 'name', { value: token });\n    return metatype;\n}\nfunction isMiddlewareRouteExcluded(req, excludedRoutes, httpAdapter) {\n    if (excludedRoutes.length <= 0) {\n        return false;\n    }\n    const reqMethod = httpAdapter.getRequestMethod(req);\n    const originalUrl = httpAdapter.getRequestUrl(req);\n    const queryParamsIndex = originalUrl && originalUrl.indexOf('?');\n    const pathname = queryParamsIndex >= 0\n        ? originalUrl.slice(0, queryParamsIndex)\n        : originalUrl;\n    return (0, utils_1.isRouteExcluded)(excludedRoutes, pathname, common_1.RequestMethod[reqMethod]);\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}