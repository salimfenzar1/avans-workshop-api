{"ast":null,"code":"\"use strict\";\n\nvar _asyncToGenerator = require(\"C:/Users/salim/Dev/avans-nx-workshop-2024/avans-nx-workshop/node_modules/@babel/runtime/helpers/asyncToGenerator.js\").default;\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.NestContainer = void 0;\nconst constants_1 = require(\"@nestjs/common/constants\");\nconst discoverable_meta_host_collection_1 = require(\"../discovery/discoverable-meta-host-collection\");\nconst exceptions_1 = require(\"../errors/exceptions\");\nconst initialize_on_preview_allowlist_1 = require(\"../inspector/initialize-on-preview.allowlist\");\nconst serialized_graph_1 = require(\"../inspector/serialized-graph\");\nconst request_constants_1 = require(\"../router/request/request-constants\");\nconst compiler_1 = require(\"./compiler\");\nconst internal_core_module_1 = require(\"./internal-core-module/internal-core-module\");\nconst internal_providers_storage_1 = require(\"./internal-providers-storage\");\nconst module_1 = require(\"./module\");\nconst module_token_factory_1 = require(\"./module-token-factory\");\nconst modules_container_1 = require(\"./modules-container\");\nclass NestContainer {\n  constructor(_applicationConfig = undefined) {\n    this._applicationConfig = _applicationConfig;\n    this.globalModules = new Set();\n    this.moduleTokenFactory = new module_token_factory_1.ModuleTokenFactory();\n    this.moduleCompiler = new compiler_1.ModuleCompiler(this.moduleTokenFactory);\n    this.modules = new modules_container_1.ModulesContainer();\n    this.dynamicModulesMetadata = new Map();\n    this.internalProvidersStorage = new internal_providers_storage_1.InternalProvidersStorage();\n    this._serializedGraph = new serialized_graph_1.SerializedGraph();\n  }\n  get serializedGraph() {\n    return this._serializedGraph;\n  }\n  get applicationConfig() {\n    return this._applicationConfig;\n  }\n  setHttpAdapter(httpAdapter) {\n    this.internalProvidersStorage.httpAdapter = httpAdapter;\n    if (!this.internalProvidersStorage.httpAdapterHost) {\n      return;\n    }\n    const host = this.internalProvidersStorage.httpAdapterHost;\n    host.httpAdapter = httpAdapter;\n  }\n  getHttpAdapterRef() {\n    return this.internalProvidersStorage.httpAdapter;\n  }\n  getHttpAdapterHostRef() {\n    return this.internalProvidersStorage.httpAdapterHost;\n  }\n  addModule(metatype, scope) {\n    var _this = this;\n    return _asyncToGenerator(function* () {\n      // In DependenciesScanner#scanForModules we already check for undefined or invalid modules\n      // We still need to catch the edge-case of `forwardRef(() => undefined)`\n      if (!metatype) {\n        throw new exceptions_1.UndefinedForwardRefException(scope);\n      }\n      const {\n        type,\n        dynamicMetadata,\n        token\n      } = yield _this.moduleCompiler.compile(metatype);\n      if (_this.modules.has(token)) {\n        return {\n          moduleRef: _this.modules.get(token),\n          inserted: true\n        };\n      }\n      return {\n        moduleRef: yield _this.setModule({\n          token,\n          type,\n          dynamicMetadata\n        }, scope),\n        inserted: true\n      };\n    })();\n  }\n  replaceModule(metatypeToReplace, newMetatype, scope) {\n    var _this2 = this;\n    return _asyncToGenerator(function* () {\n      // In DependenciesScanner#scanForModules we already check for undefined or invalid modules\n      // We still need to catch the edge-case of `forwardRef(() => undefined)`\n      if (!metatypeToReplace || !newMetatype) {\n        throw new exceptions_1.UndefinedForwardRefException(scope);\n      }\n      const {\n        token\n      } = yield _this2.moduleCompiler.compile(metatypeToReplace);\n      const {\n        type,\n        dynamicMetadata\n      } = yield _this2.moduleCompiler.compile(newMetatype);\n      return {\n        moduleRef: yield _this2.setModule({\n          token,\n          type,\n          dynamicMetadata\n        }, scope),\n        inserted: false\n      };\n    })();\n  }\n  setModule({\n    token,\n    dynamicMetadata,\n    type\n  }, scope) {\n    var _this3 = this;\n    return _asyncToGenerator(function* () {\n      const moduleRef = new module_1.Module(type, _this3);\n      moduleRef.token = token;\n      moduleRef.initOnPreview = _this3.shouldInitOnPreview(type);\n      _this3.modules.set(token, moduleRef);\n      const updatedScope = [].concat(scope, type);\n      yield _this3.addDynamicMetadata(token, dynamicMetadata, updatedScope);\n      if (_this3.isGlobalModule(type, dynamicMetadata)) {\n        moduleRef.isGlobal = true;\n        _this3.addGlobalModule(moduleRef);\n      }\n      return moduleRef;\n    })();\n  }\n  addDynamicMetadata(token, dynamicModuleMetadata, scope) {\n    var _this4 = this;\n    return _asyncToGenerator(function* () {\n      if (!dynamicModuleMetadata) {\n        return;\n      }\n      _this4.dynamicModulesMetadata.set(token, dynamicModuleMetadata);\n      const {\n        imports\n      } = dynamicModuleMetadata;\n      yield _this4.addDynamicModules(imports, scope);\n    })();\n  }\n  addDynamicModules(modules, scope) {\n    var _this5 = this;\n    return _asyncToGenerator(function* () {\n      if (!modules) {\n        return;\n      }\n      yield Promise.all(modules.map(module => _this5.addModule(module, scope)));\n    })();\n  }\n  isGlobalModule(metatype, dynamicMetadata) {\n    if (dynamicMetadata && dynamicMetadata.global) {\n      return true;\n    }\n    return !!Reflect.getMetadata(constants_1.GLOBAL_MODULE_METADATA, metatype);\n  }\n  addGlobalModule(module) {\n    this.globalModules.add(module);\n  }\n  getModules() {\n    return this.modules;\n  }\n  getModuleCompiler() {\n    return this.moduleCompiler;\n  }\n  getModuleByKey(moduleKey) {\n    return this.modules.get(moduleKey);\n  }\n  getInternalCoreModuleRef() {\n    return this.internalCoreModule;\n  }\n  addImport(relatedModule, token) {\n    var _this6 = this;\n    return _asyncToGenerator(function* () {\n      if (!_this6.modules.has(token)) {\n        return;\n      }\n      const moduleRef = _this6.modules.get(token);\n      const {\n        token: relatedModuleToken\n      } = yield _this6.moduleCompiler.compile(relatedModule);\n      const related = _this6.modules.get(relatedModuleToken);\n      moduleRef.addImport(related);\n    })();\n  }\n  addProvider(provider, token, enhancerSubtype) {\n    const moduleRef = this.modules.get(token);\n    if (!provider) {\n      throw new exceptions_1.CircularDependencyException(moduleRef?.metatype.name);\n    }\n    if (!moduleRef) {\n      throw new exceptions_1.UnknownModuleException();\n    }\n    const providerKey = moduleRef.addProvider(provider, enhancerSubtype);\n    const providerRef = moduleRef.getProviderByKey(providerKey);\n    discoverable_meta_host_collection_1.DiscoverableMetaHostCollection.inspectProvider(this.modules, providerRef);\n    return providerKey;\n  }\n  addInjectable(injectable, token, enhancerSubtype, host) {\n    if (!this.modules.has(token)) {\n      throw new exceptions_1.UnknownModuleException();\n    }\n    const moduleRef = this.modules.get(token);\n    return moduleRef.addInjectable(injectable, enhancerSubtype, host);\n  }\n  addExportedProvider(provider, token) {\n    if (!this.modules.has(token)) {\n      throw new exceptions_1.UnknownModuleException();\n    }\n    const moduleRef = this.modules.get(token);\n    moduleRef.addExportedProvider(provider);\n  }\n  addController(controller, token) {\n    if (!this.modules.has(token)) {\n      throw new exceptions_1.UnknownModuleException();\n    }\n    const moduleRef = this.modules.get(token);\n    moduleRef.addController(controller);\n    const controllerRef = moduleRef.controllers.get(controller);\n    discoverable_meta_host_collection_1.DiscoverableMetaHostCollection.inspectController(this.modules, controllerRef);\n  }\n  clear() {\n    this.modules.clear();\n  }\n  replace(toReplace, options) {\n    this.modules.forEach(moduleRef => moduleRef.replace(toReplace, options));\n  }\n  bindGlobalScope() {\n    this.modules.forEach(moduleRef => this.bindGlobalsToImports(moduleRef));\n  }\n  bindGlobalsToImports(moduleRef) {\n    this.globalModules.forEach(globalModule => this.bindGlobalModuleToModule(moduleRef, globalModule));\n  }\n  bindGlobalModuleToModule(target, globalModule) {\n    if (target === globalModule || target === this.internalCoreModule) {\n      return;\n    }\n    target.addImport(globalModule);\n  }\n  getDynamicMetadataByToken(token, metadataKey) {\n    const metadata = this.dynamicModulesMetadata.get(token);\n    return metadataKey ? metadata?.[metadataKey] ?? [] : metadata;\n  }\n  registerCoreModuleRef(moduleRef) {\n    this.internalCoreModule = moduleRef;\n    this.modules[internal_core_module_1.InternalCoreModule.name] = moduleRef;\n  }\n  getModuleTokenFactory() {\n    return this.moduleTokenFactory;\n  }\n  registerRequestProvider(request, contextId) {\n    const wrapper = this.internalCoreModule.getProviderByKey(request_constants_1.REQUEST);\n    wrapper.setInstanceByContextId(contextId, {\n      instance: request,\n      isResolved: true\n    });\n  }\n  shouldInitOnPreview(type) {\n    return initialize_on_preview_allowlist_1.InitializeOnPreviewAllowlist.has(type);\n  }\n}\nexports.NestContainer = NestContainer;","map":{"version":3,"names":["_asyncToGenerator","require","default","Object","defineProperty","exports","value","NestContainer","constants_1","discoverable_meta_host_collection_1","exceptions_1","initialize_on_preview_allowlist_1","serialized_graph_1","request_constants_1","compiler_1","internal_core_module_1","internal_providers_storage_1","module_1","module_token_factory_1","modules_container_1","constructor","_applicationConfig","undefined","globalModules","Set","moduleTokenFactory","ModuleTokenFactory","moduleCompiler","ModuleCompiler","modules","ModulesContainer","dynamicModulesMetadata","Map","internalProvidersStorage","InternalProvidersStorage","_serializedGraph","SerializedGraph","serializedGraph","applicationConfig","setHttpAdapter","httpAdapter","httpAdapterHost","host","getHttpAdapterRef","getHttpAdapterHostRef","addModule","metatype","scope","_this","UndefinedForwardRefException","type","dynamicMetadata","token","compile","has","moduleRef","get","inserted","setModule","replaceModule","metatypeToReplace","newMetatype","_this2","_this3","Module","initOnPreview","shouldInitOnPreview","set","updatedScope","concat","addDynamicMetadata","isGlobalModule","isGlobal","addGlobalModule","dynamicModuleMetadata","_this4","imports","addDynamicModules","_this5","Promise","all","map","module","global","Reflect","getMetadata","GLOBAL_MODULE_METADATA","add","getModules","getModuleCompiler","getModuleByKey","moduleKey","getInternalCoreModuleRef","internalCoreModule","addImport","relatedModule","_this6","relatedModuleToken","related","addProvider","provider","enhancerSubtype","CircularDependencyException","name","UnknownModuleException","providerKey","providerRef","getProviderByKey","DiscoverableMetaHostCollection","inspectProvider","addInjectable","injectable","addExportedProvider","addController","controller","controllerRef","controllers","inspectController","clear","replace","toReplace","options","forEach","bindGlobalScope","bindGlobalsToImports","globalModule","bindGlobalModuleToModule","target","getDynamicMetadataByToken","metadataKey","metadata","registerCoreModuleRef","InternalCoreModule","getModuleTokenFactory","registerRequestProvider","request","contextId","wrapper","REQUEST","setInstanceByContextId","instance","isResolved","InitializeOnPreviewAllowlist"],"sources":["C:/Users/salim/Dev/avans-nx-workshop-2024/avans-nx-workshop/node_modules/@nestjs/core/injector/container.js"],"sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.NestContainer = void 0;\nconst constants_1 = require(\"@nestjs/common/constants\");\nconst discoverable_meta_host_collection_1 = require(\"../discovery/discoverable-meta-host-collection\");\nconst exceptions_1 = require(\"../errors/exceptions\");\nconst initialize_on_preview_allowlist_1 = require(\"../inspector/initialize-on-preview.allowlist\");\nconst serialized_graph_1 = require(\"../inspector/serialized-graph\");\nconst request_constants_1 = require(\"../router/request/request-constants\");\nconst compiler_1 = require(\"./compiler\");\nconst internal_core_module_1 = require(\"./internal-core-module/internal-core-module\");\nconst internal_providers_storage_1 = require(\"./internal-providers-storage\");\nconst module_1 = require(\"./module\");\nconst module_token_factory_1 = require(\"./module-token-factory\");\nconst modules_container_1 = require(\"./modules-container\");\nclass NestContainer {\n    constructor(_applicationConfig = undefined) {\n        this._applicationConfig = _applicationConfig;\n        this.globalModules = new Set();\n        this.moduleTokenFactory = new module_token_factory_1.ModuleTokenFactory();\n        this.moduleCompiler = new compiler_1.ModuleCompiler(this.moduleTokenFactory);\n        this.modules = new modules_container_1.ModulesContainer();\n        this.dynamicModulesMetadata = new Map();\n        this.internalProvidersStorage = new internal_providers_storage_1.InternalProvidersStorage();\n        this._serializedGraph = new serialized_graph_1.SerializedGraph();\n    }\n    get serializedGraph() {\n        return this._serializedGraph;\n    }\n    get applicationConfig() {\n        return this._applicationConfig;\n    }\n    setHttpAdapter(httpAdapter) {\n        this.internalProvidersStorage.httpAdapter = httpAdapter;\n        if (!this.internalProvidersStorage.httpAdapterHost) {\n            return;\n        }\n        const host = this.internalProvidersStorage.httpAdapterHost;\n        host.httpAdapter = httpAdapter;\n    }\n    getHttpAdapterRef() {\n        return this.internalProvidersStorage.httpAdapter;\n    }\n    getHttpAdapterHostRef() {\n        return this.internalProvidersStorage.httpAdapterHost;\n    }\n    async addModule(metatype, scope) {\n        // In DependenciesScanner#scanForModules we already check for undefined or invalid modules\n        // We still need to catch the edge-case of `forwardRef(() => undefined)`\n        if (!metatype) {\n            throw new exceptions_1.UndefinedForwardRefException(scope);\n        }\n        const { type, dynamicMetadata, token } = await this.moduleCompiler.compile(metatype);\n        if (this.modules.has(token)) {\n            return {\n                moduleRef: this.modules.get(token),\n                inserted: true,\n            };\n        }\n        return {\n            moduleRef: await this.setModule({\n                token,\n                type,\n                dynamicMetadata,\n            }, scope),\n            inserted: true,\n        };\n    }\n    async replaceModule(metatypeToReplace, newMetatype, scope) {\n        // In DependenciesScanner#scanForModules we already check for undefined or invalid modules\n        // We still need to catch the edge-case of `forwardRef(() => undefined)`\n        if (!metatypeToReplace || !newMetatype) {\n            throw new exceptions_1.UndefinedForwardRefException(scope);\n        }\n        const { token } = await this.moduleCompiler.compile(metatypeToReplace);\n        const { type, dynamicMetadata } = await this.moduleCompiler.compile(newMetatype);\n        return {\n            moduleRef: await this.setModule({\n                token,\n                type,\n                dynamicMetadata,\n            }, scope),\n            inserted: false,\n        };\n    }\n    async setModule({ token, dynamicMetadata, type }, scope) {\n        const moduleRef = new module_1.Module(type, this);\n        moduleRef.token = token;\n        moduleRef.initOnPreview = this.shouldInitOnPreview(type);\n        this.modules.set(token, moduleRef);\n        const updatedScope = [].concat(scope, type);\n        await this.addDynamicMetadata(token, dynamicMetadata, updatedScope);\n        if (this.isGlobalModule(type, dynamicMetadata)) {\n            moduleRef.isGlobal = true;\n            this.addGlobalModule(moduleRef);\n        }\n        return moduleRef;\n    }\n    async addDynamicMetadata(token, dynamicModuleMetadata, scope) {\n        if (!dynamicModuleMetadata) {\n            return;\n        }\n        this.dynamicModulesMetadata.set(token, dynamicModuleMetadata);\n        const { imports } = dynamicModuleMetadata;\n        await this.addDynamicModules(imports, scope);\n    }\n    async addDynamicModules(modules, scope) {\n        if (!modules) {\n            return;\n        }\n        await Promise.all(modules.map(module => this.addModule(module, scope)));\n    }\n    isGlobalModule(metatype, dynamicMetadata) {\n        if (dynamicMetadata && dynamicMetadata.global) {\n            return true;\n        }\n        return !!Reflect.getMetadata(constants_1.GLOBAL_MODULE_METADATA, metatype);\n    }\n    addGlobalModule(module) {\n        this.globalModules.add(module);\n    }\n    getModules() {\n        return this.modules;\n    }\n    getModuleCompiler() {\n        return this.moduleCompiler;\n    }\n    getModuleByKey(moduleKey) {\n        return this.modules.get(moduleKey);\n    }\n    getInternalCoreModuleRef() {\n        return this.internalCoreModule;\n    }\n    async addImport(relatedModule, token) {\n        if (!this.modules.has(token)) {\n            return;\n        }\n        const moduleRef = this.modules.get(token);\n        const { token: relatedModuleToken } = await this.moduleCompiler.compile(relatedModule);\n        const related = this.modules.get(relatedModuleToken);\n        moduleRef.addImport(related);\n    }\n    addProvider(provider, token, enhancerSubtype) {\n        const moduleRef = this.modules.get(token);\n        if (!provider) {\n            throw new exceptions_1.CircularDependencyException(moduleRef?.metatype.name);\n        }\n        if (!moduleRef) {\n            throw new exceptions_1.UnknownModuleException();\n        }\n        const providerKey = moduleRef.addProvider(provider, enhancerSubtype);\n        const providerRef = moduleRef.getProviderByKey(providerKey);\n        discoverable_meta_host_collection_1.DiscoverableMetaHostCollection.inspectProvider(this.modules, providerRef);\n        return providerKey;\n    }\n    addInjectable(injectable, token, enhancerSubtype, host) {\n        if (!this.modules.has(token)) {\n            throw new exceptions_1.UnknownModuleException();\n        }\n        const moduleRef = this.modules.get(token);\n        return moduleRef.addInjectable(injectable, enhancerSubtype, host);\n    }\n    addExportedProvider(provider, token) {\n        if (!this.modules.has(token)) {\n            throw new exceptions_1.UnknownModuleException();\n        }\n        const moduleRef = this.modules.get(token);\n        moduleRef.addExportedProvider(provider);\n    }\n    addController(controller, token) {\n        if (!this.modules.has(token)) {\n            throw new exceptions_1.UnknownModuleException();\n        }\n        const moduleRef = this.modules.get(token);\n        moduleRef.addController(controller);\n        const controllerRef = moduleRef.controllers.get(controller);\n        discoverable_meta_host_collection_1.DiscoverableMetaHostCollection.inspectController(this.modules, controllerRef);\n    }\n    clear() {\n        this.modules.clear();\n    }\n    replace(toReplace, options) {\n        this.modules.forEach(moduleRef => moduleRef.replace(toReplace, options));\n    }\n    bindGlobalScope() {\n        this.modules.forEach(moduleRef => this.bindGlobalsToImports(moduleRef));\n    }\n    bindGlobalsToImports(moduleRef) {\n        this.globalModules.forEach(globalModule => this.bindGlobalModuleToModule(moduleRef, globalModule));\n    }\n    bindGlobalModuleToModule(target, globalModule) {\n        if (target === globalModule || target === this.internalCoreModule) {\n            return;\n        }\n        target.addImport(globalModule);\n    }\n    getDynamicMetadataByToken(token, metadataKey) {\n        const metadata = this.dynamicModulesMetadata.get(token);\n        return metadataKey ? (metadata?.[metadataKey] ?? []) : metadata;\n    }\n    registerCoreModuleRef(moduleRef) {\n        this.internalCoreModule = moduleRef;\n        this.modules[internal_core_module_1.InternalCoreModule.name] = moduleRef;\n    }\n    getModuleTokenFactory() {\n        return this.moduleTokenFactory;\n    }\n    registerRequestProvider(request, contextId) {\n        const wrapper = this.internalCoreModule.getProviderByKey(request_constants_1.REQUEST);\n        wrapper.setInstanceByContextId(contextId, {\n            instance: request,\n            isResolved: true,\n        });\n    }\n    shouldInitOnPreview(type) {\n        return initialize_on_preview_allowlist_1.InitializeOnPreviewAllowlist.has(type);\n    }\n}\nexports.NestContainer = NestContainer;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}