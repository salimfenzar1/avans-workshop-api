{"ast":null,"code":"import { ValidationTypes } from '../../validation/ValidationTypes';\nimport { ValidationMetadata } from '../../metadata/ValidationMetadata';\nimport { getMetadataStorage } from '../../metadata/MetadataStorage';\n/**\n * Checks if value is missing and if so, ignores all validators.\n */\nexport function IsOptional(validationOptions) {\n  return function (object, propertyName) {\n    const args = {\n      type: ValidationTypes.CONDITIONAL_VALIDATION,\n      target: object.constructor,\n      propertyName: propertyName,\n      constraints: [(object, value) => {\n        return object[propertyName] !== null && object[propertyName] !== undefined;\n      }],\n      validationOptions: validationOptions\n    };\n    getMetadataStorage().addValidationMetadata(new ValidationMetadata(args));\n  };\n}","map":{"version":3,"names":["ValidationTypes","ValidationMetadata","getMetadataStorage","IsOptional","validationOptions","object","propertyName","args","type","CONDITIONAL_VALIDATION","target","constructor","constraints","value","undefined","addValidationMetadata"],"sources":["C:/Users/salim/Dev/avans-nx-workshop-2024/avans-nx-workshop/node_modules/class-validator/esm2015/decorator/common/IsOptional.js"],"sourcesContent":["import { ValidationTypes } from '../../validation/ValidationTypes';\nimport { ValidationMetadata } from '../../metadata/ValidationMetadata';\nimport { getMetadataStorage } from '../../metadata/MetadataStorage';\n/**\n * Checks if value is missing and if so, ignores all validators.\n */\nexport function IsOptional(validationOptions) {\n    return function (object, propertyName) {\n        const args = {\n            type: ValidationTypes.CONDITIONAL_VALIDATION,\n            target: object.constructor,\n            propertyName: propertyName,\n            constraints: [\n                (object, value) => {\n                    return object[propertyName] !== null && object[propertyName] !== undefined;\n                },\n            ],\n            validationOptions: validationOptions,\n        };\n        getMetadataStorage().addValidationMetadata(new ValidationMetadata(args));\n    };\n}\n"],"mappings":"AAAA,SAASA,eAAe,QAAQ,kCAAkC;AAClE,SAASC,kBAAkB,QAAQ,mCAAmC;AACtE,SAASC,kBAAkB,QAAQ,gCAAgC;AACnE;AACA;AACA;AACA,OAAO,SAASC,UAAUA,CAACC,iBAAiB,EAAE;EAC1C,OAAO,UAAUC,MAAM,EAAEC,YAAY,EAAE;IACnC,MAAMC,IAAI,GAAG;MACTC,IAAI,EAAER,eAAe,CAACS,sBAAsB;MAC5CC,MAAM,EAAEL,MAAM,CAACM,WAAW;MAC1BL,YAAY,EAAEA,YAAY;MAC1BM,WAAW,EAAE,CACT,CAACP,MAAM,EAAEQ,KAAK,KAAK;QACf,OAAOR,MAAM,CAACC,YAAY,CAAC,KAAK,IAAI,IAAID,MAAM,CAACC,YAAY,CAAC,KAAKQ,SAAS;MAC9E,CAAC,CACJ;MACDV,iBAAiB,EAAEA;IACvB,CAAC;IACDF,kBAAkB,CAAC,CAAC,CAACa,qBAAqB,CAAC,IAAId,kBAAkB,CAACM,IAAI,CAAC,CAAC;EAC5E,CAAC;AACL","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}