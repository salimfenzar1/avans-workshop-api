{"ast":null,"code":"import { ValidationTypes } from '../../validation/ValidationTypes';\nimport { ValidationMetadata } from '../../metadata/ValidationMetadata';\nimport { getMetadataStorage } from '../../metadata/MetadataStorage';\n/**\n * Objects / object arrays marked with this decorator will also be validated.\n */\nexport function ValidateNested(validationOptions) {\n  const opts = {\n    ...validationOptions\n  };\n  const eachPrefix = opts.each ? 'each value in ' : '';\n  opts.message = opts.message || eachPrefix + 'nested property $property must be either object or array';\n  return function (object, propertyName) {\n    const args = {\n      type: ValidationTypes.NESTED_VALIDATION,\n      target: object.constructor,\n      propertyName: propertyName,\n      validationOptions: opts\n    };\n    getMetadataStorage().addValidationMetadata(new ValidationMetadata(args));\n  };\n}","map":{"version":3,"names":["ValidationTypes","ValidationMetadata","getMetadataStorage","ValidateNested","validationOptions","opts","eachPrefix","each","message","object","propertyName","args","type","NESTED_VALIDATION","target","constructor","addValidationMetadata"],"sources":["C:/Users/salim/Dev/avans-nx-workshop-2024/avans-nx-workshop/node_modules/class-validator/esm2015/decorator/common/ValidateNested.js"],"sourcesContent":["import { ValidationTypes } from '../../validation/ValidationTypes';\nimport { ValidationMetadata } from '../../metadata/ValidationMetadata';\nimport { getMetadataStorage } from '../../metadata/MetadataStorage';\n/**\n * Objects / object arrays marked with this decorator will also be validated.\n */\nexport function ValidateNested(validationOptions) {\n    const opts = { ...validationOptions };\n    const eachPrefix = opts.each ? 'each value in ' : '';\n    opts.message = opts.message || eachPrefix + 'nested property $property must be either object or array';\n    return function (object, propertyName) {\n        const args = {\n            type: ValidationTypes.NESTED_VALIDATION,\n            target: object.constructor,\n            propertyName: propertyName,\n            validationOptions: opts,\n        };\n        getMetadataStorage().addValidationMetadata(new ValidationMetadata(args));\n    };\n}\n"],"mappings":"AAAA,SAASA,eAAe,QAAQ,kCAAkC;AAClE,SAASC,kBAAkB,QAAQ,mCAAmC;AACtE,SAASC,kBAAkB,QAAQ,gCAAgC;AACnE;AACA;AACA;AACA,OAAO,SAASC,cAAcA,CAACC,iBAAiB,EAAE;EAC9C,MAAMC,IAAI,GAAG;IAAE,GAAGD;EAAkB,CAAC;EACrC,MAAME,UAAU,GAAGD,IAAI,CAACE,IAAI,GAAG,gBAAgB,GAAG,EAAE;EACpDF,IAAI,CAACG,OAAO,GAAGH,IAAI,CAACG,OAAO,IAAIF,UAAU,GAAG,0DAA0D;EACtG,OAAO,UAAUG,MAAM,EAAEC,YAAY,EAAE;IACnC,MAAMC,IAAI,GAAG;MACTC,IAAI,EAAEZ,eAAe,CAACa,iBAAiB;MACvCC,MAAM,EAAEL,MAAM,CAACM,WAAW;MAC1BL,YAAY,EAAEA,YAAY;MAC1BN,iBAAiB,EAAEC;IACvB,CAAC;IACDH,kBAAkB,CAAC,CAAC,CAACc,qBAAqB,CAAC,IAAIf,kBAAkB,CAACU,IAAI,CAAC,CAAC;EAC5E,CAAC;AACL","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}