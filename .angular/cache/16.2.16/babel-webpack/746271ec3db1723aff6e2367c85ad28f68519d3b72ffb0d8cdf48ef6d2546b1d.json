{"ast":null,"code":"import { buildMessage, ValidateBy } from '../common/ValidateBy';\nimport isIPValidator from 'validator/lib/isIP';\nexport const IS_IP = 'isIp';\n/**\n * Checks if the string is an IP (version 4 or 6).\n * If given value is not a string, then it returns false.\n */\nexport function isIP(value, version) {\n  /* eslint-disable-next-line @typescript-eslint/no-unnecessary-type-assertion */\n  const versionStr = version ? `${version}` : undefined;\n  return typeof value === 'string' && isIPValidator(value, versionStr);\n}\n/**\n * Checks if the string is an IP (version 4 or 6).\n * If given value is not a string, then it returns false.\n */\nexport function IsIP(version, validationOptions) {\n  return ValidateBy({\n    name: IS_IP,\n    constraints: [version],\n    validator: {\n      validate: (value, args) => isIP(value, args === null || args === void 0 ? void 0 : args.constraints[0]),\n      defaultMessage: buildMessage(eachPrefix => eachPrefix + '$property must be an ip address', validationOptions)\n    }\n  }, validationOptions);\n}","map":{"version":3,"names":["buildMessage","ValidateBy","isIPValidator","IS_IP","isIP","value","version","versionStr","undefined","IsIP","validationOptions","name","constraints","validator","validate","args","defaultMessage","eachPrefix"],"sources":["C:/Users/salim/Dev/avans-nx-workshop-2024/avans-nx-workshop/node_modules/class-validator/esm2015/decorator/string/IsIP.js"],"sourcesContent":["import { buildMessage, ValidateBy } from '../common/ValidateBy';\nimport isIPValidator from 'validator/lib/isIP';\nexport const IS_IP = 'isIp';\n/**\n * Checks if the string is an IP (version 4 or 6).\n * If given value is not a string, then it returns false.\n */\nexport function isIP(value, version) {\n    /* eslint-disable-next-line @typescript-eslint/no-unnecessary-type-assertion */\n    const versionStr = version ? `${version}` : undefined;\n    return typeof value === 'string' && isIPValidator(value, versionStr);\n}\n/**\n * Checks if the string is an IP (version 4 or 6).\n * If given value is not a string, then it returns false.\n */\nexport function IsIP(version, validationOptions) {\n    return ValidateBy({\n        name: IS_IP,\n        constraints: [version],\n        validator: {\n            validate: (value, args) => isIP(value, args === null || args === void 0 ? void 0 : args.constraints[0]),\n            defaultMessage: buildMessage(eachPrefix => eachPrefix + '$property must be an ip address', validationOptions),\n        },\n    }, validationOptions);\n}\n"],"mappings":"AAAA,SAASA,YAAY,EAAEC,UAAU,QAAQ,sBAAsB;AAC/D,OAAOC,aAAa,MAAM,oBAAoB;AAC9C,OAAO,MAAMC,KAAK,GAAG,MAAM;AAC3B;AACA;AACA;AACA;AACA,OAAO,SAASC,IAAIA,CAACC,KAAK,EAAEC,OAAO,EAAE;EACjC;EACA,MAAMC,UAAU,GAAGD,OAAO,GAAI,GAAEA,OAAQ,EAAC,GAAGE,SAAS;EACrD,OAAO,OAAOH,KAAK,KAAK,QAAQ,IAAIH,aAAa,CAACG,KAAK,EAAEE,UAAU,CAAC;AACxE;AACA;AACA;AACA;AACA;AACA,OAAO,SAASE,IAAIA,CAACH,OAAO,EAAEI,iBAAiB,EAAE;EAC7C,OAAOT,UAAU,CAAC;IACdU,IAAI,EAAER,KAAK;IACXS,WAAW,EAAE,CAACN,OAAO,CAAC;IACtBO,SAAS,EAAE;MACPC,QAAQ,EAAEA,CAACT,KAAK,EAAEU,IAAI,KAAKX,IAAI,CAACC,KAAK,EAAEU,IAAI,KAAK,IAAI,IAAIA,IAAI,KAAK,KAAK,CAAC,GAAG,KAAK,CAAC,GAAGA,IAAI,CAACH,WAAW,CAAC,CAAC,CAAC,CAAC;MACvGI,cAAc,EAAEhB,YAAY,CAACiB,UAAU,IAAIA,UAAU,GAAG,iCAAiC,EAAEP,iBAAiB;IAChH;EACJ,CAAC,EAAEA,iBAAiB,CAAC;AACzB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}