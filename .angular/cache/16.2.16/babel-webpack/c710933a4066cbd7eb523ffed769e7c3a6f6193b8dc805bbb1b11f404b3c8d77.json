{"ast":null,"code":"\"use strict\";\n\nvar _asyncToGenerator = require(\"C:/Users/salim/Dev/avans-nx-workshop-2024/avans-nx-workshop/node_modules/@babel/runtime/helpers/asyncToGenerator.js\").default;\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.MiddlewareResolver = void 0;\nclass MiddlewareResolver {\n  constructor(middlewareContainer, injector) {\n    this.middlewareContainer = middlewareContainer;\n    this.injector = injector;\n  }\n  resolveInstances(moduleRef, moduleName) {\n    var _this = this;\n    return _asyncToGenerator(function* () {\n      const middlewareMap = _this.middlewareContainer.getMiddlewareCollection(moduleName);\n      const resolveInstance = /*#__PURE__*/function () {\n        var _ref = _asyncToGenerator(function* (wrapper) {\n          return _this.resolveMiddlewareInstance(wrapper, middlewareMap, moduleRef);\n        });\n        return function resolveInstance(_x) {\n          return _ref.apply(this, arguments);\n        };\n      }();\n      yield Promise.all([...middlewareMap.values()].map(resolveInstance));\n    })();\n  }\n  resolveMiddlewareInstance(wrapper, middlewareMap, moduleRef) {\n    var _this2 = this;\n    return _asyncToGenerator(function* () {\n      yield _this2.injector.loadMiddleware(wrapper, middlewareMap, moduleRef);\n    })();\n  }\n}\nexports.MiddlewareResolver = MiddlewareResolver;","map":{"version":3,"names":["_asyncToGenerator","require","default","Object","defineProperty","exports","value","MiddlewareResolver","constructor","middlewareContainer","injector","resolveInstances","moduleRef","moduleName","_this","middlewareMap","getMiddlewareCollection","resolveInstance","_ref","wrapper","resolveMiddlewareInstance","_x","apply","arguments","Promise","all","values","map","_this2","loadMiddleware"],"sources":["C:/Users/salim/Dev/avans-nx-workshop-2024/avans-nx-workshop/node_modules/@nestjs/core/middleware/resolver.js"],"sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.MiddlewareResolver = void 0;\nclass MiddlewareResolver {\n    constructor(middlewareContainer, injector) {\n        this.middlewareContainer = middlewareContainer;\n        this.injector = injector;\n    }\n    async resolveInstances(moduleRef, moduleName) {\n        const middlewareMap = this.middlewareContainer.getMiddlewareCollection(moduleName);\n        const resolveInstance = async (wrapper) => this.resolveMiddlewareInstance(wrapper, middlewareMap, moduleRef);\n        await Promise.all([...middlewareMap.values()].map(resolveInstance));\n    }\n    async resolveMiddlewareInstance(wrapper, middlewareMap, moduleRef) {\n        await this.injector.loadMiddleware(wrapper, middlewareMap, moduleRef);\n    }\n}\nexports.MiddlewareResolver = MiddlewareResolver;\n"],"mappings":"AAAA,YAAY;;AAAC,IAAAA,iBAAA,GAAAC,OAAA,wHAAAC,OAAA;AACbC,MAAM,CAACC,cAAc,CAACC,OAAO,EAAE,YAAY,EAAE;EAAEC,KAAK,EAAE;AAAK,CAAC,CAAC;AAC7DD,OAAO,CAACE,kBAAkB,GAAG,KAAK,CAAC;AACnC,MAAMA,kBAAkB,CAAC;EACrBC,WAAWA,CAACC,mBAAmB,EAAEC,QAAQ,EAAE;IACvC,IAAI,CAACD,mBAAmB,GAAGA,mBAAmB;IAC9C,IAAI,CAACC,QAAQ,GAAGA,QAAQ;EAC5B;EACMC,gBAAgBA,CAACC,SAAS,EAAEC,UAAU,EAAE;IAAA,IAAAC,KAAA;IAAA,OAAAd,iBAAA;MAC1C,MAAMe,aAAa,GAAGD,KAAI,CAACL,mBAAmB,CAACO,uBAAuB,CAACH,UAAU,CAAC;MAClF,MAAMI,eAAe;QAAA,IAAAC,IAAA,GAAAlB,iBAAA,CAAG,WAAOmB,OAAO;UAAA,OAAKL,KAAI,CAACM,yBAAyB,CAACD,OAAO,EAAEJ,aAAa,EAAEH,SAAS,CAAC;QAAA;QAAA,gBAAtGK,eAAeA,CAAAI,EAAA;UAAA,OAAAH,IAAA,CAAAI,KAAA,OAAAC,SAAA;QAAA;MAAA,GAAuF;MAC5G,MAAMC,OAAO,CAACC,GAAG,CAAC,CAAC,GAAGV,aAAa,CAACW,MAAM,CAAC,CAAC,CAAC,CAACC,GAAG,CAACV,eAAe,CAAC,CAAC;IAAC;EACxE;EACMG,yBAAyBA,CAACD,OAAO,EAAEJ,aAAa,EAAEH,SAAS,EAAE;IAAA,IAAAgB,MAAA;IAAA,OAAA5B,iBAAA;MAC/D,MAAM4B,MAAI,CAAClB,QAAQ,CAACmB,cAAc,CAACV,OAAO,EAAEJ,aAAa,EAAEH,SAAS,CAAC;IAAC;EAC1E;AACJ;AACAP,OAAO,CAACE,kBAAkB,GAAGA,kBAAkB","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}