{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.SettlementSignal = void 0;\n/**\n * SettlementSignal is used to signal the resolution of a provider/instance.\n * Calling `complete` or `error` will resolve the promise returned by `asPromise`.\n * Can be used to detect circular dependencies.\n */\nclass SettlementSignal {\n  constructor() {\n    this._refs = new Set();\n    this.completed = false;\n    this.settledPromise = new Promise(resolve => {\n      this.settleFn = resolve;\n    });\n  }\n  /**\n   * Resolves the promise returned by `asPromise`.\n   */\n  complete() {\n    this.completed = true;\n    this.settleFn();\n  }\n  /**\n   * Rejects the promise returned by `asPromise` with the given error.\n   * @param err Error to reject the promise returned by `asPromise` with.\n   */\n  error(err) {\n    this.completed = true;\n    this.settleFn(err);\n  }\n  /**\n   * Returns a promise that will be resolved when `complete` or `error` is called.\n   * @returns Promise that will be resolved when `complete` or `error` is called.\n   */\n  asPromise() {\n    return this.settledPromise;\n  }\n  /**\n   * Inserts a wrapper id that the host of this signal depends on.\n   * @param wrapperId Wrapper id to insert.\n   */\n  insertRef(wrapperId) {\n    this._refs.add(wrapperId);\n  }\n  /**\n   * Check if relationship is circular.\n   * @param wrapperId Wrapper id to check.\n   * @returns True if relationship is circular, false otherwise.\n   */\n  isCycle(wrapperId) {\n    return !this.completed && this._refs.has(wrapperId);\n  }\n}\nexports.SettlementSignal = SettlementSignal;","map":{"version":3,"names":["Object","defineProperty","exports","value","SettlementSignal","constructor","_refs","Set","completed","settledPromise","Promise","resolve","settleFn","complete","error","err","asPromise","insertRef","wrapperId","add","isCycle","has"],"sources":["C:/Users/salim/Dev/avans-nx-workshop-2024/avans-nx-workshop/node_modules/@nestjs/core/injector/settlement-signal.js"],"sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.SettlementSignal = void 0;\n/**\n * SettlementSignal is used to signal the resolution of a provider/instance.\n * Calling `complete` or `error` will resolve the promise returned by `asPromise`.\n * Can be used to detect circular dependencies.\n */\nclass SettlementSignal {\n    constructor() {\n        this._refs = new Set();\n        this.completed = false;\n        this.settledPromise = new Promise(resolve => {\n            this.settleFn = resolve;\n        });\n    }\n    /**\n     * Resolves the promise returned by `asPromise`.\n     */\n    complete() {\n        this.completed = true;\n        this.settleFn();\n    }\n    /**\n     * Rejects the promise returned by `asPromise` with the given error.\n     * @param err Error to reject the promise returned by `asPromise` with.\n     */\n    error(err) {\n        this.completed = true;\n        this.settleFn(err);\n    }\n    /**\n     * Returns a promise that will be resolved when `complete` or `error` is called.\n     * @returns Promise that will be resolved when `complete` or `error` is called.\n     */\n    asPromise() {\n        return this.settledPromise;\n    }\n    /**\n     * Inserts a wrapper id that the host of this signal depends on.\n     * @param wrapperId Wrapper id to insert.\n     */\n    insertRef(wrapperId) {\n        this._refs.add(wrapperId);\n    }\n    /**\n     * Check if relationship is circular.\n     * @param wrapperId Wrapper id to check.\n     * @returns True if relationship is circular, false otherwise.\n     */\n    isCycle(wrapperId) {\n        return !this.completed && this._refs.has(wrapperId);\n    }\n}\nexports.SettlementSignal = SettlementSignal;\n"],"mappings":"AAAA,YAAY;;AACZA,MAAM,CAACC,cAAc,CAACC,OAAO,EAAE,YAAY,EAAE;EAAEC,KAAK,EAAE;AAAK,CAAC,CAAC;AAC7DD,OAAO,CAACE,gBAAgB,GAAG,KAAK,CAAC;AACjC;AACA;AACA;AACA;AACA;AACA,MAAMA,gBAAgB,CAAC;EACnBC,WAAWA,CAAA,EAAG;IACV,IAAI,CAACC,KAAK,GAAG,IAAIC,GAAG,CAAC,CAAC;IACtB,IAAI,CAACC,SAAS,GAAG,KAAK;IACtB,IAAI,CAACC,cAAc,GAAG,IAAIC,OAAO,CAACC,OAAO,IAAI;MACzC,IAAI,CAACC,QAAQ,GAAGD,OAAO;IAC3B,CAAC,CAAC;EACN;EACA;AACJ;AACA;EACIE,QAAQA,CAAA,EAAG;IACP,IAAI,CAACL,SAAS,GAAG,IAAI;IACrB,IAAI,CAACI,QAAQ,CAAC,CAAC;EACnB;EACA;AACJ;AACA;AACA;EACIE,KAAKA,CAACC,GAAG,EAAE;IACP,IAAI,CAACP,SAAS,GAAG,IAAI;IACrB,IAAI,CAACI,QAAQ,CAACG,GAAG,CAAC;EACtB;EACA;AACJ;AACA;AACA;EACIC,SAASA,CAAA,EAAG;IACR,OAAO,IAAI,CAACP,cAAc;EAC9B;EACA;AACJ;AACA;AACA;EACIQ,SAASA,CAACC,SAAS,EAAE;IACjB,IAAI,CAACZ,KAAK,CAACa,GAAG,CAACD,SAAS,CAAC;EAC7B;EACA;AACJ;AACA;AACA;AACA;EACIE,OAAOA,CAACF,SAAS,EAAE;IACf,OAAO,CAAC,IAAI,CAACV,SAAS,IAAI,IAAI,CAACF,KAAK,CAACe,GAAG,CAACH,SAAS,CAAC;EACvD;AACJ;AACAhB,OAAO,CAACE,gBAAgB,GAAGA,gBAAgB","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}