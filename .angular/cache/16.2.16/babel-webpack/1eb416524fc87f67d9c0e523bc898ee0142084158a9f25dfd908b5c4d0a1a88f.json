{"ast":null,"code":"import { buildMessage, ValidateBy } from '../common/ValidateBy';\nimport { isObject } from '../typechecker/IsObject';\nexport const IS_NOT_EMPTY_OBJECT = 'isNotEmptyObject';\n/**\n * Checks if the value is valid Object & not empty.\n * Returns false if the value is not an object or an empty valid object.\n */\nexport function isNotEmptyObject(value, options) {\n  if (!isObject(value)) {\n    return false;\n  }\n  if ((options === null || options === void 0 ? void 0 : options.nullable) === false) {\n    return !Object.values(value).every(propertyValue => propertyValue === null || propertyValue === undefined);\n  }\n  for (const key in value) {\n    if (value.hasOwnProperty(key)) {\n      return true;\n    }\n  }\n  return false;\n}\n/**\n * Checks if the value is valid Object & not empty.\n * Returns false if the value is not an object or an empty valid object.\n */\nexport function IsNotEmptyObject(options, validationOptions) {\n  return ValidateBy({\n    name: IS_NOT_EMPTY_OBJECT,\n    constraints: [options],\n    validator: {\n      validate: (value, args) => isNotEmptyObject(value, args === null || args === void 0 ? void 0 : args.constraints[0]),\n      defaultMessage: buildMessage(eachPrefix => eachPrefix + '$property must be a non-empty object', validationOptions)\n    }\n  }, validationOptions);\n}","map":{"version":3,"names":["buildMessage","ValidateBy","isObject","IS_NOT_EMPTY_OBJECT","isNotEmptyObject","value","options","nullable","Object","values","every","propertyValue","undefined","key","hasOwnProperty","IsNotEmptyObject","validationOptions","name","constraints","validator","validate","args","defaultMessage","eachPrefix"],"sources":["C:/Users/salim/Dev/avans-nx-workshop-2024/avans-nx-workshop/node_modules/class-validator/esm2015/decorator/object/IsNotEmptyObject.js"],"sourcesContent":["import { buildMessage, ValidateBy } from '../common/ValidateBy';\nimport { isObject } from '../typechecker/IsObject';\nexport const IS_NOT_EMPTY_OBJECT = 'isNotEmptyObject';\n/**\n * Checks if the value is valid Object & not empty.\n * Returns false if the value is not an object or an empty valid object.\n */\nexport function isNotEmptyObject(value, options) {\n    if (!isObject(value)) {\n        return false;\n    }\n    if ((options === null || options === void 0 ? void 0 : options.nullable) === false) {\n        return !Object.values(value).every(propertyValue => propertyValue === null || propertyValue === undefined);\n    }\n    for (const key in value) {\n        if (value.hasOwnProperty(key)) {\n            return true;\n        }\n    }\n    return false;\n}\n/**\n * Checks if the value is valid Object & not empty.\n * Returns false if the value is not an object or an empty valid object.\n */\nexport function IsNotEmptyObject(options, validationOptions) {\n    return ValidateBy({\n        name: IS_NOT_EMPTY_OBJECT,\n        constraints: [options],\n        validator: {\n            validate: (value, args) => isNotEmptyObject(value, args === null || args === void 0 ? void 0 : args.constraints[0]),\n            defaultMessage: buildMessage(eachPrefix => eachPrefix + '$property must be a non-empty object', validationOptions),\n        },\n    }, validationOptions);\n}\n"],"mappings":"AAAA,SAASA,YAAY,EAAEC,UAAU,QAAQ,sBAAsB;AAC/D,SAASC,QAAQ,QAAQ,yBAAyB;AAClD,OAAO,MAAMC,mBAAmB,GAAG,kBAAkB;AACrD;AACA;AACA;AACA;AACA,OAAO,SAASC,gBAAgBA,CAACC,KAAK,EAAEC,OAAO,EAAE;EAC7C,IAAI,CAACJ,QAAQ,CAACG,KAAK,CAAC,EAAE;IAClB,OAAO,KAAK;EAChB;EACA,IAAI,CAACC,OAAO,KAAK,IAAI,IAAIA,OAAO,KAAK,KAAK,CAAC,GAAG,KAAK,CAAC,GAAGA,OAAO,CAACC,QAAQ,MAAM,KAAK,EAAE;IAChF,OAAO,CAACC,MAAM,CAACC,MAAM,CAACJ,KAAK,CAAC,CAACK,KAAK,CAACC,aAAa,IAAIA,aAAa,KAAK,IAAI,IAAIA,aAAa,KAAKC,SAAS,CAAC;EAC9G;EACA,KAAK,MAAMC,GAAG,IAAIR,KAAK,EAAE;IACrB,IAAIA,KAAK,CAACS,cAAc,CAACD,GAAG,CAAC,EAAE;MAC3B,OAAO,IAAI;IACf;EACJ;EACA,OAAO,KAAK;AAChB;AACA;AACA;AACA;AACA;AACA,OAAO,SAASE,gBAAgBA,CAACT,OAAO,EAAEU,iBAAiB,EAAE;EACzD,OAAOf,UAAU,CAAC;IACdgB,IAAI,EAAEd,mBAAmB;IACzBe,WAAW,EAAE,CAACZ,OAAO,CAAC;IACtBa,SAAS,EAAE;MACPC,QAAQ,EAAEA,CAACf,KAAK,EAAEgB,IAAI,KAAKjB,gBAAgB,CAACC,KAAK,EAAEgB,IAAI,KAAK,IAAI,IAAIA,IAAI,KAAK,KAAK,CAAC,GAAG,KAAK,CAAC,GAAGA,IAAI,CAACH,WAAW,CAAC,CAAC,CAAC,CAAC;MACnHI,cAAc,EAAEtB,YAAY,CAACuB,UAAU,IAAIA,UAAU,GAAG,sCAAsC,EAAEP,iBAAiB;IACrH;EACJ,CAAC,EAAEA,iBAAiB,CAAC;AACzB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}