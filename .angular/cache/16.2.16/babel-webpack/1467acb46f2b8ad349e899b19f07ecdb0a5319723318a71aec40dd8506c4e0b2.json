{"ast":null,"code":"import { buildMessage, ValidateBy } from '../common/ValidateBy';\nimport isCreditCardValidator from 'validator/lib/isCreditCard';\nexport const IS_CREDIT_CARD = 'isCreditCard';\n/**\n * Checks if the string is a credit card.\n * If given value is not a string, then it returns false.\n */\nexport function isCreditCard(value) {\n  return typeof value === 'string' && isCreditCardValidator(value);\n}\n/**\n * Checks if the string is a credit card.\n * If given value is not a string, then it returns false.\n */\nexport function IsCreditCard(validationOptions) {\n  return ValidateBy({\n    name: IS_CREDIT_CARD,\n    validator: {\n      validate: (value, args) => isCreditCard(value),\n      defaultMessage: buildMessage(eachPrefix => eachPrefix + '$property must be a credit card', validationOptions)\n    }\n  }, validationOptions);\n}","map":{"version":3,"names":["buildMessage","ValidateBy","isCreditCardValidator","IS_CREDIT_CARD","isCreditCard","value","IsCreditCard","validationOptions","name","validator","validate","args","defaultMessage","eachPrefix"],"sources":["C:/Users/salim/Dev/avans-nx-workshop-2024/avans-nx-workshop/node_modules/class-validator/esm2015/decorator/string/IsCreditCard.js"],"sourcesContent":["import { buildMessage, ValidateBy } from '../common/ValidateBy';\nimport isCreditCardValidator from 'validator/lib/isCreditCard';\nexport const IS_CREDIT_CARD = 'isCreditCard';\n/**\n * Checks if the string is a credit card.\n * If given value is not a string, then it returns false.\n */\nexport function isCreditCard(value) {\n    return typeof value === 'string' && isCreditCardValidator(value);\n}\n/**\n * Checks if the string is a credit card.\n * If given value is not a string, then it returns false.\n */\nexport function IsCreditCard(validationOptions) {\n    return ValidateBy({\n        name: IS_CREDIT_CARD,\n        validator: {\n            validate: (value, args) => isCreditCard(value),\n            defaultMessage: buildMessage(eachPrefix => eachPrefix + '$property must be a credit card', validationOptions),\n        },\n    }, validationOptions);\n}\n"],"mappings":"AAAA,SAASA,YAAY,EAAEC,UAAU,QAAQ,sBAAsB;AAC/D,OAAOC,qBAAqB,MAAM,4BAA4B;AAC9D,OAAO,MAAMC,cAAc,GAAG,cAAc;AAC5C;AACA;AACA;AACA;AACA,OAAO,SAASC,YAAYA,CAACC,KAAK,EAAE;EAChC,OAAO,OAAOA,KAAK,KAAK,QAAQ,IAAIH,qBAAqB,CAACG,KAAK,CAAC;AACpE;AACA;AACA;AACA;AACA;AACA,OAAO,SAASC,YAAYA,CAACC,iBAAiB,EAAE;EAC5C,OAAON,UAAU,CAAC;IACdO,IAAI,EAAEL,cAAc;IACpBM,SAAS,EAAE;MACPC,QAAQ,EAAEA,CAACL,KAAK,EAAEM,IAAI,KAAKP,YAAY,CAACC,KAAK,CAAC;MAC9CO,cAAc,EAAEZ,YAAY,CAACa,UAAU,IAAIA,UAAU,GAAG,iCAAiC,EAAEN,iBAAiB;IAChH;EACJ,CAAC,EAAEA,iBAAiB,CAAC;AACzB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}