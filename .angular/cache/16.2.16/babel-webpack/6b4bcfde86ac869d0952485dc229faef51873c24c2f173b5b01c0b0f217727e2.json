{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.MiddlewareContainer = void 0;\nconst get_class_scope_1 = require(\"../helpers/get-class-scope\");\nconst is_durable_1 = require(\"../helpers/is-durable\");\nconst instance_wrapper_1 = require(\"../injector/instance-wrapper\");\nclass MiddlewareContainer {\n  constructor(container) {\n    this.container = container;\n    this.middleware = new Map();\n    this.configurationSets = new Map();\n  }\n  getMiddlewareCollection(moduleKey) {\n    if (!this.middleware.has(moduleKey)) {\n      const moduleRef = this.container.getModuleByKey(moduleKey);\n      this.middleware.set(moduleKey, moduleRef.middlewares);\n    }\n    return this.middleware.get(moduleKey);\n  }\n  getConfigurations() {\n    return this.configurationSets;\n  }\n  insertConfig(configList, moduleKey) {\n    const middleware = this.getMiddlewareCollection(moduleKey);\n    const targetConfig = this.getTargetConfig(moduleKey);\n    const configurations = configList || [];\n    const insertMiddleware = metatype => {\n      const token = metatype;\n      middleware.set(token, new instance_wrapper_1.InstanceWrapper({\n        scope: (0, get_class_scope_1.getClassScope)(metatype),\n        durable: (0, is_durable_1.isDurable)(metatype),\n        name: token?.name ?? token,\n        metatype,\n        token\n      }));\n    };\n    configurations.forEach(config => {\n      [].concat(config.middleware).map(insertMiddleware);\n      targetConfig.add(config);\n    });\n  }\n  getTargetConfig(moduleName) {\n    if (!this.configurationSets.has(moduleName)) {\n      this.configurationSets.set(moduleName, new Set());\n    }\n    return this.configurationSets.get(moduleName);\n  }\n}\nexports.MiddlewareContainer = MiddlewareContainer;","map":{"version":3,"names":["Object","defineProperty","exports","value","MiddlewareContainer","get_class_scope_1","require","is_durable_1","instance_wrapper_1","constructor","container","middleware","Map","configurationSets","getMiddlewareCollection","moduleKey","has","moduleRef","getModuleByKey","set","middlewares","get","getConfigurations","insertConfig","configList","targetConfig","getTargetConfig","configurations","insertMiddleware","metatype","token","InstanceWrapper","scope","getClassScope","durable","isDurable","name","forEach","config","concat","map","add","moduleName","Set"],"sources":["C:/Users/salim/Dev/avans-nx-workshop-2024/avans-nx-workshop/node_modules/@nestjs/core/middleware/container.js"],"sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.MiddlewareContainer = void 0;\nconst get_class_scope_1 = require(\"../helpers/get-class-scope\");\nconst is_durable_1 = require(\"../helpers/is-durable\");\nconst instance_wrapper_1 = require(\"../injector/instance-wrapper\");\nclass MiddlewareContainer {\n    constructor(container) {\n        this.container = container;\n        this.middleware = new Map();\n        this.configurationSets = new Map();\n    }\n    getMiddlewareCollection(moduleKey) {\n        if (!this.middleware.has(moduleKey)) {\n            const moduleRef = this.container.getModuleByKey(moduleKey);\n            this.middleware.set(moduleKey, moduleRef.middlewares);\n        }\n        return this.middleware.get(moduleKey);\n    }\n    getConfigurations() {\n        return this.configurationSets;\n    }\n    insertConfig(configList, moduleKey) {\n        const middleware = this.getMiddlewareCollection(moduleKey);\n        const targetConfig = this.getTargetConfig(moduleKey);\n        const configurations = configList || [];\n        const insertMiddleware = (metatype) => {\n            const token = metatype;\n            middleware.set(token, new instance_wrapper_1.InstanceWrapper({\n                scope: (0, get_class_scope_1.getClassScope)(metatype),\n                durable: (0, is_durable_1.isDurable)(metatype),\n                name: token?.name ?? token,\n                metatype,\n                token,\n            }));\n        };\n        configurations.forEach(config => {\n            [].concat(config.middleware).map(insertMiddleware);\n            targetConfig.add(config);\n        });\n    }\n    getTargetConfig(moduleName) {\n        if (!this.configurationSets.has(moduleName)) {\n            this.configurationSets.set(moduleName, new Set());\n        }\n        return this.configurationSets.get(moduleName);\n    }\n}\nexports.MiddlewareContainer = MiddlewareContainer;\n"],"mappings":"AAAA,YAAY;;AACZA,MAAM,CAACC,cAAc,CAACC,OAAO,EAAE,YAAY,EAAE;EAAEC,KAAK,EAAE;AAAK,CAAC,CAAC;AAC7DD,OAAO,CAACE,mBAAmB,GAAG,KAAK,CAAC;AACpC,MAAMC,iBAAiB,GAAGC,OAAO,CAAC,4BAA4B,CAAC;AAC/D,MAAMC,YAAY,GAAGD,OAAO,CAAC,uBAAuB,CAAC;AACrD,MAAME,kBAAkB,GAAGF,OAAO,CAAC,8BAA8B,CAAC;AAClE,MAAMF,mBAAmB,CAAC;EACtBK,WAAWA,CAACC,SAAS,EAAE;IACnB,IAAI,CAACA,SAAS,GAAGA,SAAS;IAC1B,IAAI,CAACC,UAAU,GAAG,IAAIC,GAAG,CAAC,CAAC;IAC3B,IAAI,CAACC,iBAAiB,GAAG,IAAID,GAAG,CAAC,CAAC;EACtC;EACAE,uBAAuBA,CAACC,SAAS,EAAE;IAC/B,IAAI,CAAC,IAAI,CAACJ,UAAU,CAACK,GAAG,CAACD,SAAS,CAAC,EAAE;MACjC,MAAME,SAAS,GAAG,IAAI,CAACP,SAAS,CAACQ,cAAc,CAACH,SAAS,CAAC;MAC1D,IAAI,CAACJ,UAAU,CAACQ,GAAG,CAACJ,SAAS,EAAEE,SAAS,CAACG,WAAW,CAAC;IACzD;IACA,OAAO,IAAI,CAACT,UAAU,CAACU,GAAG,CAACN,SAAS,CAAC;EACzC;EACAO,iBAAiBA,CAAA,EAAG;IAChB,OAAO,IAAI,CAACT,iBAAiB;EACjC;EACAU,YAAYA,CAACC,UAAU,EAAET,SAAS,EAAE;IAChC,MAAMJ,UAAU,GAAG,IAAI,CAACG,uBAAuB,CAACC,SAAS,CAAC;IAC1D,MAAMU,YAAY,GAAG,IAAI,CAACC,eAAe,CAACX,SAAS,CAAC;IACpD,MAAMY,cAAc,GAAGH,UAAU,IAAI,EAAE;IACvC,MAAMI,gBAAgB,GAAIC,QAAQ,IAAK;MACnC,MAAMC,KAAK,GAAGD,QAAQ;MACtBlB,UAAU,CAACQ,GAAG,CAACW,KAAK,EAAE,IAAItB,kBAAkB,CAACuB,eAAe,CAAC;QACzDC,KAAK,EAAE,CAAC,CAAC,EAAE3B,iBAAiB,CAAC4B,aAAa,EAAEJ,QAAQ,CAAC;QACrDK,OAAO,EAAE,CAAC,CAAC,EAAE3B,YAAY,CAAC4B,SAAS,EAAEN,QAAQ,CAAC;QAC9CO,IAAI,EAAEN,KAAK,EAAEM,IAAI,IAAIN,KAAK;QAC1BD,QAAQ;QACRC;MACJ,CAAC,CAAC,CAAC;IACP,CAAC;IACDH,cAAc,CAACU,OAAO,CAACC,MAAM,IAAI;MAC7B,EAAE,CAACC,MAAM,CAACD,MAAM,CAAC3B,UAAU,CAAC,CAAC6B,GAAG,CAACZ,gBAAgB,CAAC;MAClDH,YAAY,CAACgB,GAAG,CAACH,MAAM,CAAC;IAC5B,CAAC,CAAC;EACN;EACAZ,eAAeA,CAACgB,UAAU,EAAE;IACxB,IAAI,CAAC,IAAI,CAAC7B,iBAAiB,CAACG,GAAG,CAAC0B,UAAU,CAAC,EAAE;MACzC,IAAI,CAAC7B,iBAAiB,CAACM,GAAG,CAACuB,UAAU,EAAE,IAAIC,GAAG,CAAC,CAAC,CAAC;IACrD;IACA,OAAO,IAAI,CAAC9B,iBAAiB,CAACQ,GAAG,CAACqB,UAAU,CAAC;EACjD;AACJ;AACAxC,OAAO,CAACE,mBAAmB,GAAGA,mBAAmB","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}