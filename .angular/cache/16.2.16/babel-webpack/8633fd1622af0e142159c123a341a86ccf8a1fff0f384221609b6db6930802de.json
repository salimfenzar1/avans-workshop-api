{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.SseStream = void 0;\nconst shared_utils_1 = require(\"@nestjs/common/utils/shared.utils\");\nconst stream_1 = require(\"stream\");\nfunction toDataString(data) {\n  if ((0, shared_utils_1.isObject)(data)) {\n    return toDataString(JSON.stringify(data));\n  }\n  return data.split(/\\r\\n|\\r|\\n/).map(line => `data: ${line}\\n`).join('');\n}\n/**\n * Adapted from https://raw.githubusercontent.com/EventSource/node-ssestream\n * Transforms \"messages\" to W3C event stream content.\n * See https://html.spec.whatwg.org/multipage/server-sent-events.html\n * A message is an object with one or more of the following properties:\n * - data (String or object, which gets turned into JSON)\n * - type\n * - id\n * - retry\n *\n * If constructed with a HTTP Request, it will optimise the socket for streaming.\n * If this stream is piped to an HTTP Response, it will set appropriate headers.\n */\nclass SseStream extends stream_1.Transform {\n  constructor(req) {\n    super({\n      objectMode: true\n    });\n    this.lastEventId = null;\n    if (req && req.socket) {\n      req.socket.setKeepAlive(true);\n      req.socket.setNoDelay(true);\n      req.socket.setTimeout(0);\n    }\n  }\n  pipe(destination, options) {\n    if (destination.writeHead) {\n      destination.writeHead(200, {\n        ...options?.additionalHeaders,\n        // See https://github.com/dunglas/mercure/blob/master/hub/subscribe.go#L124-L130\n        'Content-Type': 'text/event-stream',\n        Connection: 'keep-alive',\n        // Disable cache, even for old browsers and proxies\n        'Cache-Control': 'private, no-cache, no-store, must-revalidate, max-age=0, no-transform',\n        Pragma: 'no-cache',\n        Expire: '0',\n        // NGINX support https://www.nginx.com/resources/wiki/start/topics/examples/x-accel/#x-accel-buffering\n        'X-Accel-Buffering': 'no'\n      });\n      destination.flushHeaders();\n    }\n    destination.write('\\n');\n    return super.pipe(destination, options);\n  }\n  _transform(message, encoding, callback) {\n    let data = message.type ? `event: ${message.type}\\n` : '';\n    data += message.id ? `id: ${message.id}\\n` : '';\n    data += message.retry ? `retry: ${message.retry}\\n` : '';\n    data += message.data ? toDataString(message.data) : '';\n    data += '\\n';\n    this.push(data);\n    callback();\n  }\n  /**\n   * Calls `.write` but handles the drain if needed\n   */\n  writeMessage(message, cb) {\n    if (!message.id) {\n      this.lastEventId++;\n      message.id = this.lastEventId.toString();\n    }\n    if (!this.write(message, 'utf-8')) {\n      this.once('drain', cb);\n    } else {\n      process.nextTick(cb);\n    }\n  }\n}\nexports.SseStream = SseStream;","map":{"version":3,"names":["Object","defineProperty","exports","value","SseStream","shared_utils_1","require","stream_1","toDataString","data","isObject","JSON","stringify","split","map","line","join","Transform","constructor","req","objectMode","lastEventId","socket","setKeepAlive","setNoDelay","setTimeout","pipe","destination","options","writeHead","additionalHeaders","Connection","Pragma","Expire","flushHeaders","write","_transform","message","encoding","callback","type","id","retry","push","writeMessage","cb","toString","once","process","nextTick"],"sources":["C:/Users/salim/Dev/avans-nx-workshop-2024/avans-nx-workshop/node_modules/@nestjs/core/router/sse-stream.js"],"sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.SseStream = void 0;\nconst shared_utils_1 = require(\"@nestjs/common/utils/shared.utils\");\nconst stream_1 = require(\"stream\");\nfunction toDataString(data) {\n    if ((0, shared_utils_1.isObject)(data)) {\n        return toDataString(JSON.stringify(data));\n    }\n    return data\n        .split(/\\r\\n|\\r|\\n/)\n        .map(line => `data: ${line}\\n`)\n        .join('');\n}\n/**\n * Adapted from https://raw.githubusercontent.com/EventSource/node-ssestream\n * Transforms \"messages\" to W3C event stream content.\n * See https://html.spec.whatwg.org/multipage/server-sent-events.html\n * A message is an object with one or more of the following properties:\n * - data (String or object, which gets turned into JSON)\n * - type\n * - id\n * - retry\n *\n * If constructed with a HTTP Request, it will optimise the socket for streaming.\n * If this stream is piped to an HTTP Response, it will set appropriate headers.\n */\nclass SseStream extends stream_1.Transform {\n    constructor(req) {\n        super({ objectMode: true });\n        this.lastEventId = null;\n        if (req && req.socket) {\n            req.socket.setKeepAlive(true);\n            req.socket.setNoDelay(true);\n            req.socket.setTimeout(0);\n        }\n    }\n    pipe(destination, options) {\n        if (destination.writeHead) {\n            destination.writeHead(200, {\n                ...options?.additionalHeaders,\n                // See https://github.com/dunglas/mercure/blob/master/hub/subscribe.go#L124-L130\n                'Content-Type': 'text/event-stream',\n                Connection: 'keep-alive',\n                // Disable cache, even for old browsers and proxies\n                'Cache-Control': 'private, no-cache, no-store, must-revalidate, max-age=0, no-transform',\n                Pragma: 'no-cache',\n                Expire: '0',\n                // NGINX support https://www.nginx.com/resources/wiki/start/topics/examples/x-accel/#x-accel-buffering\n                'X-Accel-Buffering': 'no',\n            });\n            destination.flushHeaders();\n        }\n        destination.write('\\n');\n        return super.pipe(destination, options);\n    }\n    _transform(message, encoding, callback) {\n        let data = message.type ? `event: ${message.type}\\n` : '';\n        data += message.id ? `id: ${message.id}\\n` : '';\n        data += message.retry ? `retry: ${message.retry}\\n` : '';\n        data += message.data ? toDataString(message.data) : '';\n        data += '\\n';\n        this.push(data);\n        callback();\n    }\n    /**\n     * Calls `.write` but handles the drain if needed\n     */\n    writeMessage(message, cb) {\n        if (!message.id) {\n            this.lastEventId++;\n            message.id = this.lastEventId.toString();\n        }\n        if (!this.write(message, 'utf-8')) {\n            this.once('drain', cb);\n        }\n        else {\n            process.nextTick(cb);\n        }\n    }\n}\nexports.SseStream = SseStream;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}