{"ast":null,"code":"import { __decorate, __metadata } from \"tslib\";\nimport { IsNotEmpty, IsString, IsBoolean, IsOptional, IsDate } from 'class-validator';\nimport { MealSort } from '@avans-nx-workshop/shared/api';\n/**\n * Use the `Pick` utility type to extract only the properties we want for\n * new to-do items\n */\nexport class CreateMealDto {}\n__decorate([IsString(), IsNotEmpty(), __metadata(\"design:type\", String)], CreateMealDto.prototype, \"title\", void 0);\n__decorate([IsString(), IsNotEmpty(), __metadata(\"design:type\", String)], CreateMealDto.prototype, \"description\", void 0);\n__decorate([IsString(), IsNotEmpty(), __metadata(\"design:type\", String)], CreateMealDto.prototype, \"sort\", void 0);\nexport class UpsertMealDto {}\n__decorate([IsString(), IsNotEmpty(), __metadata(\"design:type\", String)], UpsertMealDto.prototype, \"title\", void 0);\n__decorate([IsString(), IsNotEmpty(), __metadata(\"design:type\", String)], UpsertMealDto.prototype, \"description\", void 0);\n__decorate([IsString(), IsNotEmpty(), __metadata(\"design:type\", String)], UpsertMealDto.prototype, \"id\", void 0);\n__decorate([IsBoolean(), IsNotEmpty(), __metadata(\"design:type\", Boolean)], UpsertMealDto.prototype, \"isVega\", void 0);\n__decorate([IsDate(), IsNotEmpty(), __metadata(\"design:type\", Date)], UpsertMealDto.prototype, \"dateServed\", void 0);\n__decorate([IsString(), IsNotEmpty(), __metadata(\"design:type\", String)], UpsertMealDto.prototype, \"sort\", void 0);\nexport class UpdateMealDto {}\n__decorate([IsString(), IsOptional(), __metadata(\"design:type\", String)], UpdateMealDto.prototype, \"title\", void 0);\n__decorate([IsString(), IsOptional(), __metadata(\"design:type\", String)], UpdateMealDto.prototype, \"description\", void 0);","map":{"version":3,"names":["IsNotEmpty","IsString","IsBoolean","IsOptional","IsDate","MealSort","CreateMealDto","__decorate","UpsertMealDto","Date","UpdateMealDto"],"sources":["C:\\Users\\salim\\Dev\\avans-nx-workshop-2024\\avans-nx-workshop\\libs\\backend\\dto\\src\\lib\\meal.dto.ts"],"sourcesContent":["import {\r\n    IsNotEmpty,\r\n    IsString,\r\n    IsBoolean,\r\n    IsOptional,\r\n    IsDate\r\n} from 'class-validator';\r\nimport {\r\n    ICreateMeal,\r\n    IUpdateMeal,\r\n    IUpsertMeal,\r\n    IUserIdentity,\r\n    MealSort\r\n} from '@avans-nx-workshop/shared/api';\r\n\r\n/**\r\n * Use the `Pick` utility type to extract only the properties we want for\r\n * new to-do items\r\n */\r\nexport class CreateMealDto implements ICreateMeal {\r\n    @IsString()\r\n    @IsNotEmpty()\r\n    title!: string;\r\n\r\n    @IsString()\r\n    @IsNotEmpty()\r\n    description!: string;\r\n\r\n    @IsString()\r\n    @IsNotEmpty()\r\n    sort!: MealSort;\r\n}\r\n\r\nexport class UpsertMealDto implements IUpsertMeal {\r\n    @IsString()\r\n    @IsNotEmpty()\r\n    title!: string;\r\n\r\n    @IsString()\r\n    @IsNotEmpty()\r\n    description!: string;\r\n\r\n    @IsString()\r\n    @IsNotEmpty()\r\n    id!: string;\r\n\r\n    @IsBoolean()\r\n    @IsNotEmpty()\r\n    isVega!: boolean;\r\n\r\n    @IsDate()\r\n    @IsNotEmpty()\r\n    dateServed!: Date;\r\n\r\n    @IsString()\r\n    @IsNotEmpty()\r\n    sort!: MealSort;\r\n\r\n    // @IsNotEmpty()\r\n    cook!: IUserIdentity;\r\n}\r\n\r\nexport class UpdateMealDto implements IUpdateMeal {\r\n    @IsString()\r\n    @IsOptional()\r\n    title!: string;\r\n\r\n    @IsString()\r\n    @IsOptional()\r\n    description!: string;\r\n}\r\n"],"mappings":";AAAA,SACIA,UAAU,EACVC,QAAQ,EACRC,SAAS,EACTC,UAAU,EACVC,MAAM,QACH,iBAAiB;AACxB,SAKIC,QAAQ,QACL,+BAA+B;AAEtC;;;;AAIA,OAAM,MAAOC,aAAa;AAGtBC,UAAA,EAFCN,QAAQ,EAAE,EACVD,UAAU,EAAE,E,6EACE;AAIfO,UAAA,EAFCN,QAAQ,EAAE,EACVD,UAAU,EAAE,E,mFACQ;AAIrBO,UAAA,EAFCN,QAAQ,EAAE,EACVD,UAAU,EAAE,E,4EACG;AAGpB,OAAM,MAAOQ,aAAa;AAGtBD,UAAA,EAFCN,QAAQ,EAAE,EACVD,UAAU,EAAE,E,6EACE;AAIfO,UAAA,EAFCN,QAAQ,EAAE,EACVD,UAAU,EAAE,E,mFACQ;AAIrBO,UAAA,EAFCN,QAAQ,EAAE,EACVD,UAAU,EAAE,E,0EACD;AAIZO,UAAA,EAFCL,SAAS,EAAE,EACXF,UAAU,EAAE,E,+EACI;AAIjBO,UAAA,EAFCH,MAAM,EAAE,EACRJ,UAAU,EAAE,E,0BACAS,IAAI,E,gDAAC;AAIlBF,UAAA,EAFCN,QAAQ,EAAE,EACVD,UAAU,EAAE,E,4EACG;AAMpB,OAAM,MAAOU,aAAa;AAGtBH,UAAA,EAFCN,QAAQ,EAAE,EACVE,UAAU,EAAE,E,6EACE;AAIfI,UAAA,EAFCN,QAAQ,EAAE,EACVE,UAAU,EAAE,E,mFACQ","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}