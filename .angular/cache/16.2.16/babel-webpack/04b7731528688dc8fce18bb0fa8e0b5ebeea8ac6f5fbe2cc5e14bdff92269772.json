{"ast":null,"code":"import { buildMessage, ValidateBy } from '../common/ValidateBy';\nimport isHalfWidthValidator from 'validator/lib/isHalfWidth';\nexport const IS_HALF_WIDTH = 'isHalfWidth';\n/**\n * Checks if the string contains any half-width chars.\n * If given value is not a string, then it returns false.\n */\nexport function isHalfWidth(value) {\n  return typeof value === 'string' && isHalfWidthValidator(value);\n}\n/**\n * Checks if the string contains any half-width chars.\n * If given value is not a string, then it returns false.\n */\nexport function IsHalfWidth(validationOptions) {\n  return ValidateBy({\n    name: IS_HALF_WIDTH,\n    validator: {\n      validate: (value, args) => isHalfWidth(value),\n      defaultMessage: buildMessage(eachPrefix => eachPrefix + '$property must contain a half-width characters', validationOptions)\n    }\n  }, validationOptions);\n}","map":{"version":3,"names":["buildMessage","ValidateBy","isHalfWidthValidator","IS_HALF_WIDTH","isHalfWidth","value","IsHalfWidth","validationOptions","name","validator","validate","args","defaultMessage","eachPrefix"],"sources":["C:/Users/salim/Dev/avans-nx-workshop-2024/avans-nx-workshop/node_modules/class-validator/esm2015/decorator/string/IsHalfWidth.js"],"sourcesContent":["import { buildMessage, ValidateBy } from '../common/ValidateBy';\nimport isHalfWidthValidator from 'validator/lib/isHalfWidth';\nexport const IS_HALF_WIDTH = 'isHalfWidth';\n/**\n * Checks if the string contains any half-width chars.\n * If given value is not a string, then it returns false.\n */\nexport function isHalfWidth(value) {\n    return typeof value === 'string' && isHalfWidthValidator(value);\n}\n/**\n * Checks if the string contains any half-width chars.\n * If given value is not a string, then it returns false.\n */\nexport function IsHalfWidth(validationOptions) {\n    return ValidateBy({\n        name: IS_HALF_WIDTH,\n        validator: {\n            validate: (value, args) => isHalfWidth(value),\n            defaultMessage: buildMessage(eachPrefix => eachPrefix + '$property must contain a half-width characters', validationOptions),\n        },\n    }, validationOptions);\n}\n"],"mappings":"AAAA,SAASA,YAAY,EAAEC,UAAU,QAAQ,sBAAsB;AAC/D,OAAOC,oBAAoB,MAAM,2BAA2B;AAC5D,OAAO,MAAMC,aAAa,GAAG,aAAa;AAC1C;AACA;AACA;AACA;AACA,OAAO,SAASC,WAAWA,CAACC,KAAK,EAAE;EAC/B,OAAO,OAAOA,KAAK,KAAK,QAAQ,IAAIH,oBAAoB,CAACG,KAAK,CAAC;AACnE;AACA;AACA;AACA;AACA;AACA,OAAO,SAASC,WAAWA,CAACC,iBAAiB,EAAE;EAC3C,OAAON,UAAU,CAAC;IACdO,IAAI,EAAEL,aAAa;IACnBM,SAAS,EAAE;MACPC,QAAQ,EAAEA,CAACL,KAAK,EAAEM,IAAI,KAAKP,WAAW,CAACC,KAAK,CAAC;MAC7CO,cAAc,EAAEZ,YAAY,CAACa,UAAU,IAAIA,UAAU,GAAG,gDAAgD,EAAEN,iBAAiB;IAC/H;EACJ,CAAC,EAAEA,iBAAiB,CAAC;AACzB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}