{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.HttpAdapterHost = void 0;\nconst rxjs_1 = require(\"rxjs\");\n/**\n * Defines the `HttpAdapterHost` object.\n *\n * `HttpAdapterHost` wraps the underlying\n * platform-specific `HttpAdapter`.  The `HttpAdapter` is a wrapper around the underlying\n * native HTTP server library (e.g., Express).  The `HttpAdapterHost` object\n * provides methods to `get` and `set` the underlying HttpAdapter.\n *\n * @see [Http adapter](https://docs.nestjs.com/faq/http-adapter)\n *\n * @publicApi\n */\nclass HttpAdapterHost {\n  constructor() {\n    this._listen$ = new rxjs_1.Subject();\n    this.isListening = false;\n  }\n  /**\n   * Accessor for the underlying `HttpAdapter`\n   *\n   * @param httpAdapter reference to the `HttpAdapter` to be set\n   */\n  set httpAdapter(httpAdapter) {\n    this._httpAdapter = httpAdapter;\n  }\n  /**\n   * Accessor for the underlying `HttpAdapter`\n   *\n   * @example\n   * `const httpAdapter = adapterHost.httpAdapter;`\n   */\n  get httpAdapter() {\n    return this._httpAdapter;\n  }\n  /**\n   * Observable that allows to subscribe to the `listen` event.\n   * This event is emitted when the HTTP application is listening for incoming requests.\n   */\n  get listen$() {\n    return this._listen$.asObservable();\n  }\n  /**\n   * Sets the listening state of the application.\n   */\n  set listening(listening) {\n    this.isListening = listening;\n    if (listening) {\n      this._listen$.next();\n      this._listen$.complete();\n    }\n  }\n  /**\n   * Returns a boolean indicating whether the application is listening for incoming requests.\n   */\n  get listening() {\n    return this.isListening;\n  }\n}\nexports.HttpAdapterHost = HttpAdapterHost;","map":{"version":3,"names":["Object","defineProperty","exports","value","HttpAdapterHost","rxjs_1","require","constructor","_listen$","Subject","isListening","httpAdapter","_httpAdapter","listen$","asObservable","listening","next","complete"],"sources":["C:/Users/salim/Dev/avans-nx-workshop-2024/avans-nx-workshop/node_modules/@nestjs/core/helpers/http-adapter-host.js"],"sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.HttpAdapterHost = void 0;\nconst rxjs_1 = require(\"rxjs\");\n/**\n * Defines the `HttpAdapterHost` object.\n *\n * `HttpAdapterHost` wraps the underlying\n * platform-specific `HttpAdapter`.  The `HttpAdapter` is a wrapper around the underlying\n * native HTTP server library (e.g., Express).  The `HttpAdapterHost` object\n * provides methods to `get` and `set` the underlying HttpAdapter.\n *\n * @see [Http adapter](https://docs.nestjs.com/faq/http-adapter)\n *\n * @publicApi\n */\nclass HttpAdapterHost {\n    constructor() {\n        this._listen$ = new rxjs_1.Subject();\n        this.isListening = false;\n    }\n    /**\n     * Accessor for the underlying `HttpAdapter`\n     *\n     * @param httpAdapter reference to the `HttpAdapter` to be set\n     */\n    set httpAdapter(httpAdapter) {\n        this._httpAdapter = httpAdapter;\n    }\n    /**\n     * Accessor for the underlying `HttpAdapter`\n     *\n     * @example\n     * `const httpAdapter = adapterHost.httpAdapter;`\n     */\n    get httpAdapter() {\n        return this._httpAdapter;\n    }\n    /**\n     * Observable that allows to subscribe to the `listen` event.\n     * This event is emitted when the HTTP application is listening for incoming requests.\n     */\n    get listen$() {\n        return this._listen$.asObservable();\n    }\n    /**\n     * Sets the listening state of the application.\n     */\n    set listening(listening) {\n        this.isListening = listening;\n        if (listening) {\n            this._listen$.next();\n            this._listen$.complete();\n        }\n    }\n    /**\n     * Returns a boolean indicating whether the application is listening for incoming requests.\n     */\n    get listening() {\n        return this.isListening;\n    }\n}\nexports.HttpAdapterHost = HttpAdapterHost;\n"],"mappings":"AAAA,YAAY;;AACZA,MAAM,CAACC,cAAc,CAACC,OAAO,EAAE,YAAY,EAAE;EAAEC,KAAK,EAAE;AAAK,CAAC,CAAC;AAC7DD,OAAO,CAACE,eAAe,GAAG,KAAK,CAAC;AAChC,MAAMC,MAAM,GAAGC,OAAO,CAAC,MAAM,CAAC;AAC9B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAMF,eAAe,CAAC;EAClBG,WAAWA,CAAA,EAAG;IACV,IAAI,CAACC,QAAQ,GAAG,IAAIH,MAAM,CAACI,OAAO,CAAC,CAAC;IACpC,IAAI,CAACC,WAAW,GAAG,KAAK;EAC5B;EACA;AACJ;AACA;AACA;AACA;EACI,IAAIC,WAAWA,CAACA,WAAW,EAAE;IACzB,IAAI,CAACC,YAAY,GAAGD,WAAW;EACnC;EACA;AACJ;AACA;AACA;AACA;AACA;EACI,IAAIA,WAAWA,CAAA,EAAG;IACd,OAAO,IAAI,CAACC,YAAY;EAC5B;EACA;AACJ;AACA;AACA;EACI,IAAIC,OAAOA,CAAA,EAAG;IACV,OAAO,IAAI,CAACL,QAAQ,CAACM,YAAY,CAAC,CAAC;EACvC;EACA;AACJ;AACA;EACI,IAAIC,SAASA,CAACA,SAAS,EAAE;IACrB,IAAI,CAACL,WAAW,GAAGK,SAAS;IAC5B,IAAIA,SAAS,EAAE;MACX,IAAI,CAACP,QAAQ,CAACQ,IAAI,CAAC,CAAC;MACpB,IAAI,CAACR,QAAQ,CAACS,QAAQ,CAAC,CAAC;IAC5B;EACJ;EACA;AACJ;AACA;EACI,IAAIF,SAASA,CAAA,EAAG;IACZ,OAAO,IAAI,CAACL,WAAW;EAC3B;AACJ;AACAR,OAAO,CAACE,eAAe,GAAGA,eAAe","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}