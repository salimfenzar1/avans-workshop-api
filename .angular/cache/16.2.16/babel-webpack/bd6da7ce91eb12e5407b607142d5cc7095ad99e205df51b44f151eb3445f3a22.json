{"ast":null,"code":"import { buildMessage, ValidateBy } from '../common/ValidateBy';\nexport const IS_INSTANCE = 'isInstance';\n/**\n * Checks if the value is an instance of the specified object.\n */\nexport function isInstance(object, targetTypeConstructor) {\n  return targetTypeConstructor && typeof targetTypeConstructor === 'function' && object instanceof targetTypeConstructor;\n}\n/**\n * Checks if the value is an instance of the specified object.\n */\nexport function IsInstance(targetType, validationOptions) {\n  return ValidateBy({\n    name: IS_INSTANCE,\n    constraints: [targetType],\n    validator: {\n      validate: (value, args) => isInstance(value, args === null || args === void 0 ? void 0 : args.constraints[0]),\n      defaultMessage: buildMessage((eachPrefix, args) => {\n        if (args === null || args === void 0 ? void 0 : args.constraints[0]) {\n          return eachPrefix + `$property must be an instance of ${args === null || args === void 0 ? void 0 : args.constraints[0].name}`;\n        } else {\n          return eachPrefix + `${IS_INSTANCE} decorator expects and object as value, but got falsy value.`;\n        }\n      }, validationOptions)\n    }\n  }, validationOptions);\n}","map":{"version":3,"names":["buildMessage","ValidateBy","IS_INSTANCE","isInstance","object","targetTypeConstructor","IsInstance","targetType","validationOptions","name","constraints","validator","validate","value","args","defaultMessage","eachPrefix"],"sources":["C:/Users/salim/Dev/avans-nx-workshop-2024/avans-nx-workshop/node_modules/class-validator/esm2015/decorator/object/IsInstance.js"],"sourcesContent":["import { buildMessage, ValidateBy } from '../common/ValidateBy';\nexport const IS_INSTANCE = 'isInstance';\n/**\n * Checks if the value is an instance of the specified object.\n */\nexport function isInstance(object, targetTypeConstructor) {\n    return (targetTypeConstructor && typeof targetTypeConstructor === 'function' && object instanceof targetTypeConstructor);\n}\n/**\n * Checks if the value is an instance of the specified object.\n */\nexport function IsInstance(targetType, validationOptions) {\n    return ValidateBy({\n        name: IS_INSTANCE,\n        constraints: [targetType],\n        validator: {\n            validate: (value, args) => isInstance(value, args === null || args === void 0 ? void 0 : args.constraints[0]),\n            defaultMessage: buildMessage((eachPrefix, args) => {\n                if (args === null || args === void 0 ? void 0 : args.constraints[0]) {\n                    return eachPrefix + `$property must be an instance of ${args === null || args === void 0 ? void 0 : args.constraints[0].name}`;\n                }\n                else {\n                    return eachPrefix + `${IS_INSTANCE} decorator expects and object as value, but got falsy value.`;\n                }\n            }, validationOptions),\n        },\n    }, validationOptions);\n}\n"],"mappings":"AAAA,SAASA,YAAY,EAAEC,UAAU,QAAQ,sBAAsB;AAC/D,OAAO,MAAMC,WAAW,GAAG,YAAY;AACvC;AACA;AACA;AACA,OAAO,SAASC,UAAUA,CAACC,MAAM,EAAEC,qBAAqB,EAAE;EACtD,OAAQA,qBAAqB,IAAI,OAAOA,qBAAqB,KAAK,UAAU,IAAID,MAAM,YAAYC,qBAAqB;AAC3H;AACA;AACA;AACA;AACA,OAAO,SAASC,UAAUA,CAACC,UAAU,EAAEC,iBAAiB,EAAE;EACtD,OAAOP,UAAU,CAAC;IACdQ,IAAI,EAAEP,WAAW;IACjBQ,WAAW,EAAE,CAACH,UAAU,CAAC;IACzBI,SAAS,EAAE;MACPC,QAAQ,EAAEA,CAACC,KAAK,EAAEC,IAAI,KAAKX,UAAU,CAACU,KAAK,EAAEC,IAAI,KAAK,IAAI,IAAIA,IAAI,KAAK,KAAK,CAAC,GAAG,KAAK,CAAC,GAAGA,IAAI,CAACJ,WAAW,CAAC,CAAC,CAAC,CAAC;MAC7GK,cAAc,EAAEf,YAAY,CAAC,CAACgB,UAAU,EAAEF,IAAI,KAAK;QAC/C,IAAIA,IAAI,KAAK,IAAI,IAAIA,IAAI,KAAK,KAAK,CAAC,GAAG,KAAK,CAAC,GAAGA,IAAI,CAACJ,WAAW,CAAC,CAAC,CAAC,EAAE;UACjE,OAAOM,UAAU,GAAI,oCAAmCF,IAAI,KAAK,IAAI,IAAIA,IAAI,KAAK,KAAK,CAAC,GAAG,KAAK,CAAC,GAAGA,IAAI,CAACJ,WAAW,CAAC,CAAC,CAAC,CAACD,IAAK,EAAC;QAClI,CAAC,MACI;UACD,OAAOO,UAAU,GAAI,GAAEd,WAAY,8DAA6D;QACpG;MACJ,CAAC,EAAEM,iBAAiB;IACxB;EACJ,CAAC,EAAEA,iBAAiB,CAAC;AACzB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}