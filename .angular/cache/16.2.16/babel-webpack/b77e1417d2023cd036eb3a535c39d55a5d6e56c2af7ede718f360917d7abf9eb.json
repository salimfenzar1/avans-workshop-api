{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Injectable } from '@nestjs/common';\nimport { UserGender, UserRole } from './user.interface';\nexport let UserService = class UserService {\n  constructor() {\n    this.users = [{\n      _id: '1',\n      name: 'robin',\n      emailAddress: 'r.schellius@avans.nl',\n      role: UserRole.Unknown,\n      gender: UserGender.Unknown,\n      password: 'secret',\n      isActive: true,\n      profileImgUrl: 'https://randomuser.me/api/portraits/men/62.jpg'\n    }, {\n      _id: '2',\n      name: 'Davide',\n      emailAddress: 'd.ambesi@avans.nl',\n      role: UserRole.Unknown,\n      gender: UserGender.Unknown,\n      password: 'secret',\n      isActive: true,\n      profileImgUrl: 'https://randomuser.me/api/portraits/men/47.jpg'\n    }];\n  }\n  getUsers() {\n    return this.users;\n  }\n  getUserById(id) {\n    return this.users.find(u => u._id === id);\n  }\n  updateUser(updatedUser) {\n    const index = this.users.findIndex(user => user._id === updatedUser._id);\n    if (index !== -1) {\n      this.users[index] = {\n        ...this.users[index],\n        ...updatedUser\n      };\n      return true;\n    }\n    return false;\n  }\n};\nUserService = __decorate([Injectable()], UserService);","map":{"version":3,"names":["Injectable","UserGender","UserRole","UserService","constructor","users","_id","name","emailAddress","role","Unknown","gender","password","isActive","profileImgUrl","getUsers","getUserById","id","find","u","updateUser","updatedUser","index","findIndex","user","__decorate"],"sources":["C:\\Users\\salim\\Dev\\avans-nx-workshop-2024\\avans-nx-workshop\\libs\\shared\\api\\src\\lib\\models\\user.service.ts"],"sourcesContent":["import { Injectable } from '@nestjs/common';\r\nimport { IUserInfo, UserGender, UserRole } from './user.interface';\r\n\r\n@Injectable()\r\nexport class UserService {\r\n  private users: IUserInfo[] = [\r\n    {\r\n      _id: '1',\r\n      name: 'robin',\r\n      emailAddress: 'r.schellius@avans.nl',\r\n      role: UserRole.Unknown,\r\n      gender: UserGender.Unknown,\r\n      password: 'secret',\r\n      isActive: true,\r\n      profileImgUrl: 'https://randomuser.me/api/portraits/men/62.jpg',\r\n    },\r\n    {\r\n      _id: '2',\r\n      name: 'Davide',\r\n      emailAddress: 'd.ambesi@avans.nl',\r\n      role: UserRole.Unknown,\r\n      gender: UserGender.Unknown,\r\n      password: 'secret',\r\n      isActive: true,\r\n      profileImgUrl: 'https://randomuser.me/api/portraits/men/47.jpg',\r\n    },\r\n  ];\r\n\r\n  getUsers(): IUserInfo[] {\r\n    return this.users;\r\n  }\r\n\r\n  getUserById(id: string): IUserInfo | undefined {\r\n    return this.users.find((u) => u._id === id);\r\n  }\r\n\r\n  updateUser(updatedUser: Partial<IUserInfo>): boolean {\r\n    const index = this.users.findIndex((user) => user._id === updatedUser._id);\r\n    if (index !== -1) {\r\n      this.users[index] = { ...this.users[index], ...updatedUser } as IUserInfo;\r\n      return true;\r\n    }\r\n    return false;\r\n  }\r\n}\r\n"],"mappings":";AAAA,SAASA,UAAU,QAAQ,gBAAgB;AAC3C,SAAoBC,UAAU,EAAEC,QAAQ,QAAQ,kBAAkB;AAG3D,WAAMC,WAAW,GAAjB,MAAMA,WAAW;EAAjBC,YAAA;IACG,KAAAC,KAAK,GAAgB,CAC3B;MACEC,GAAG,EAAE,GAAG;MACRC,IAAI,EAAE,OAAO;MACbC,YAAY,EAAE,sBAAsB;MACpCC,IAAI,EAAEP,QAAQ,CAACQ,OAAO;MACtBC,MAAM,EAAEV,UAAU,CAACS,OAAO;MAC1BE,QAAQ,EAAE,QAAQ;MAClBC,QAAQ,EAAE,IAAI;MACdC,aAAa,EAAE;KAChB,EACD;MACER,GAAG,EAAE,GAAG;MACRC,IAAI,EAAE,QAAQ;MACdC,YAAY,EAAE,mBAAmB;MACjCC,IAAI,EAAEP,QAAQ,CAACQ,OAAO;MACtBC,MAAM,EAAEV,UAAU,CAACS,OAAO;MAC1BE,QAAQ,EAAE,QAAQ;MAClBC,QAAQ,EAAE,IAAI;MACdC,aAAa,EAAE;KAChB,CACF;EAkBH;EAhBEC,QAAQA,CAAA;IACN,OAAO,IAAI,CAACV,KAAK;EACnB;EAEAW,WAAWA,CAACC,EAAU;IACpB,OAAO,IAAI,CAACZ,KAAK,CAACa,IAAI,CAAEC,CAAC,IAAKA,CAAC,CAACb,GAAG,KAAKW,EAAE,CAAC;EAC7C;EAEAG,UAAUA,CAACC,WAA+B;IACxC,MAAMC,KAAK,GAAG,IAAI,CAACjB,KAAK,CAACkB,SAAS,CAAEC,IAAI,IAAKA,IAAI,CAAClB,GAAG,KAAKe,WAAW,CAACf,GAAG,CAAC;IAC1E,IAAIgB,KAAK,KAAK,CAAC,CAAC,EAAE;MAChB,IAAI,CAACjB,KAAK,CAACiB,KAAK,CAAC,GAAG;QAAE,GAAG,IAAI,CAACjB,KAAK,CAACiB,KAAK,CAAC;QAAE,GAAGD;MAAW,CAAe;MACzE,OAAO,IAAI;;IAEb,OAAO,KAAK;EACd;CACD;AAxCYlB,WAAW,GAAAsB,UAAA,EADvBzB,UAAU,EAAE,C,EACAG,WAAW,CAwCvB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}