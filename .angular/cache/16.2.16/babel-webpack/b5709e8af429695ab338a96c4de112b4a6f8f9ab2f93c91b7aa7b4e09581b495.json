{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.InstanceLinksHost = void 0;\nconst shared_utils_1 = require(\"@nestjs/common/utils/shared.utils\");\nconst unknown_element_exception_1 = require(\"../errors/exceptions/unknown-element.exception\");\nclass InstanceLinksHost {\n  constructor(container) {\n    this.container = container;\n    this.instanceLinks = new Map();\n    this.initialize();\n  }\n  get(token, options = {}) {\n    const instanceLinksForGivenToken = this.instanceLinks.get(token);\n    if (!instanceLinksForGivenToken) {\n      throw new unknown_element_exception_1.UnknownElementException(this.getInstanceNameByToken(token));\n    }\n    if (options.each) {\n      return instanceLinksForGivenToken;\n    }\n    const instanceLink = options.moduleId ? instanceLinksForGivenToken.find(item => item.moduleId === options.moduleId) : instanceLinksForGivenToken[instanceLinksForGivenToken.length - 1];\n    if (!instanceLink) {\n      throw new unknown_element_exception_1.UnknownElementException(this.getInstanceNameByToken(token));\n    }\n    return instanceLink;\n  }\n  initialize() {\n    const modules = this.container.getModules();\n    modules.forEach(moduleRef => {\n      const {\n        providers,\n        injectables,\n        controllers\n      } = moduleRef;\n      providers.forEach((wrapper, token) => this.addLink(wrapper, token, moduleRef, 'providers'));\n      injectables.forEach((wrapper, token) => this.addLink(wrapper, token, moduleRef, 'injectables'));\n      controllers.forEach((wrapper, token) => this.addLink(wrapper, token, moduleRef, 'controllers'));\n    });\n  }\n  addLink(wrapper, token, moduleRef, collectionName) {\n    const instanceLink = {\n      moduleId: moduleRef.id,\n      wrapperRef: wrapper,\n      collection: moduleRef[collectionName],\n      token\n    };\n    const existingLinks = this.instanceLinks.get(token);\n    if (!existingLinks) {\n      this.instanceLinks.set(token, [instanceLink]);\n    } else {\n      existingLinks.push(instanceLink);\n    }\n  }\n  getInstanceNameByToken(token) {\n    return (0, shared_utils_1.isFunction)(token) ? token?.name : token;\n  }\n}\nexports.InstanceLinksHost = InstanceLinksHost;","map":{"version":3,"names":["Object","defineProperty","exports","value","InstanceLinksHost","shared_utils_1","require","unknown_element_exception_1","constructor","container","instanceLinks","Map","initialize","get","token","options","instanceLinksForGivenToken","UnknownElementException","getInstanceNameByToken","each","instanceLink","moduleId","find","item","length","modules","getModules","forEach","moduleRef","providers","injectables","controllers","wrapper","addLink","collectionName","id","wrapperRef","collection","existingLinks","set","push","isFunction","name"],"sources":["C:/Users/salim/Dev/avans-nx-workshop-2024/avans-nx-workshop/node_modules/@nestjs/core/injector/instance-links-host.js"],"sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.InstanceLinksHost = void 0;\nconst shared_utils_1 = require(\"@nestjs/common/utils/shared.utils\");\nconst unknown_element_exception_1 = require(\"../errors/exceptions/unknown-element.exception\");\nclass InstanceLinksHost {\n    constructor(container) {\n        this.container = container;\n        this.instanceLinks = new Map();\n        this.initialize();\n    }\n    get(token, options = {}) {\n        const instanceLinksForGivenToken = this.instanceLinks.get(token);\n        if (!instanceLinksForGivenToken) {\n            throw new unknown_element_exception_1.UnknownElementException(this.getInstanceNameByToken(token));\n        }\n        if (options.each) {\n            return instanceLinksForGivenToken;\n        }\n        const instanceLink = options.moduleId\n            ? instanceLinksForGivenToken.find(item => item.moduleId === options.moduleId)\n            : instanceLinksForGivenToken[instanceLinksForGivenToken.length - 1];\n        if (!instanceLink) {\n            throw new unknown_element_exception_1.UnknownElementException(this.getInstanceNameByToken(token));\n        }\n        return instanceLink;\n    }\n    initialize() {\n        const modules = this.container.getModules();\n        modules.forEach(moduleRef => {\n            const { providers, injectables, controllers } = moduleRef;\n            providers.forEach((wrapper, token) => this.addLink(wrapper, token, moduleRef, 'providers'));\n            injectables.forEach((wrapper, token) => this.addLink(wrapper, token, moduleRef, 'injectables'));\n            controllers.forEach((wrapper, token) => this.addLink(wrapper, token, moduleRef, 'controllers'));\n        });\n    }\n    addLink(wrapper, token, moduleRef, collectionName) {\n        const instanceLink = {\n            moduleId: moduleRef.id,\n            wrapperRef: wrapper,\n            collection: moduleRef[collectionName],\n            token,\n        };\n        const existingLinks = this.instanceLinks.get(token);\n        if (!existingLinks) {\n            this.instanceLinks.set(token, [instanceLink]);\n        }\n        else {\n            existingLinks.push(instanceLink);\n        }\n    }\n    getInstanceNameByToken(token) {\n        return (0, shared_utils_1.isFunction)(token) ? token?.name : token;\n    }\n}\nexports.InstanceLinksHost = InstanceLinksHost;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}