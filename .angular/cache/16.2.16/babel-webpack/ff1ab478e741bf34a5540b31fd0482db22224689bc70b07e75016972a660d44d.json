{"ast":null,"code":"import { buildMessage, ValidateBy } from '../common/ValidateBy';\nimport isDataURIValidator from 'validator/lib/isDataURI';\nexport const IS_DATA_URI = 'isDataURI';\n/**\n * Check if the string is a data uri format.\n * If given value is not a string, then it returns false.\n */\nexport function isDataURI(value) {\n  return typeof value === 'string' && isDataURIValidator(value);\n}\n/**\n * Check if the string is a data uri format.\n * If given value is not a string, then it returns false.\n */\nexport function IsDataURI(validationOptions) {\n  return ValidateBy({\n    name: IS_DATA_URI,\n    validator: {\n      validate: (value, args) => isDataURI(value),\n      defaultMessage: buildMessage(eachPrefix => eachPrefix + '$property must be a data uri format', validationOptions)\n    }\n  }, validationOptions);\n}","map":{"version":3,"names":["buildMessage","ValidateBy","isDataURIValidator","IS_DATA_URI","isDataURI","value","IsDataURI","validationOptions","name","validator","validate","args","defaultMessage","eachPrefix"],"sources":["C:/Users/salim/Dev/avans-nx-workshop-2024/avans-nx-workshop/node_modules/class-validator/esm2015/decorator/string/IsDataURI.js"],"sourcesContent":["import { buildMessage, ValidateBy } from '../common/ValidateBy';\nimport isDataURIValidator from 'validator/lib/isDataURI';\nexport const IS_DATA_URI = 'isDataURI';\n/**\n * Check if the string is a data uri format.\n * If given value is not a string, then it returns false.\n */\nexport function isDataURI(value) {\n    return typeof value === 'string' && isDataURIValidator(value);\n}\n/**\n * Check if the string is a data uri format.\n * If given value is not a string, then it returns false.\n */\nexport function IsDataURI(validationOptions) {\n    return ValidateBy({\n        name: IS_DATA_URI,\n        validator: {\n            validate: (value, args) => isDataURI(value),\n            defaultMessage: buildMessage(eachPrefix => eachPrefix + '$property must be a data uri format', validationOptions),\n        },\n    }, validationOptions);\n}\n"],"mappings":"AAAA,SAASA,YAAY,EAAEC,UAAU,QAAQ,sBAAsB;AAC/D,OAAOC,kBAAkB,MAAM,yBAAyB;AACxD,OAAO,MAAMC,WAAW,GAAG,WAAW;AACtC;AACA;AACA;AACA;AACA,OAAO,SAASC,SAASA,CAACC,KAAK,EAAE;EAC7B,OAAO,OAAOA,KAAK,KAAK,QAAQ,IAAIH,kBAAkB,CAACG,KAAK,CAAC;AACjE;AACA;AACA;AACA;AACA;AACA,OAAO,SAASC,SAASA,CAACC,iBAAiB,EAAE;EACzC,OAAON,UAAU,CAAC;IACdO,IAAI,EAAEL,WAAW;IACjBM,SAAS,EAAE;MACPC,QAAQ,EAAEA,CAACL,KAAK,EAAEM,IAAI,KAAKP,SAAS,CAACC,KAAK,CAAC;MAC3CO,cAAc,EAAEZ,YAAY,CAACa,UAAU,IAAIA,UAAU,GAAG,qCAAqC,EAAEN,iBAAiB;IACpH;EACJ,CAAC,EAAEA,iBAAiB,CAAC;AACzB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}