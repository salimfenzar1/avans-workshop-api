{"ast":null,"code":"import { buildMessage, ValidateBy } from '../common/ValidateBy';\nimport isISO31661Alpha2Validator from 'validator/lib/isISO31661Alpha2';\nexport const IS_ISO31661_ALPHA_2 = 'isISO31661Alpha2';\n/**\n * Check if the string is a valid [ISO 3166-1 alpha-2](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2) officially assigned country code.\n */\nexport function isISO31661Alpha2(value) {\n  return typeof value === 'string' && isISO31661Alpha2Validator(value);\n}\n/**\n * Check if the string is a valid [ISO 3166-1 alpha-2](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2) officially assigned country code.\n */\nexport function IsISO31661Alpha2(validationOptions) {\n  return ValidateBy({\n    name: IS_ISO31661_ALPHA_2,\n    validator: {\n      validate: (value, args) => isISO31661Alpha2(value),\n      defaultMessage: buildMessage(eachPrefix => eachPrefix + '$property must be a valid ISO31661 Alpha2 code', validationOptions)\n    }\n  }, validationOptions);\n}","map":{"version":3,"names":["buildMessage","ValidateBy","isISO31661Alpha2Validator","IS_ISO31661_ALPHA_2","isISO31661Alpha2","value","IsISO31661Alpha2","validationOptions","name","validator","validate","args","defaultMessage","eachPrefix"],"sources":["C:/Users/salim/Dev/avans-nx-workshop-2024/avans-nx-workshop/node_modules/class-validator/esm2015/decorator/string/IsISO31661Alpha2.js"],"sourcesContent":["import { buildMessage, ValidateBy } from '../common/ValidateBy';\nimport isISO31661Alpha2Validator from 'validator/lib/isISO31661Alpha2';\nexport const IS_ISO31661_ALPHA_2 = 'isISO31661Alpha2';\n/**\n * Check if the string is a valid [ISO 3166-1 alpha-2](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2) officially assigned country code.\n */\nexport function isISO31661Alpha2(value) {\n    return typeof value === 'string' && isISO31661Alpha2Validator(value);\n}\n/**\n * Check if the string is a valid [ISO 3166-1 alpha-2](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2) officially assigned country code.\n */\nexport function IsISO31661Alpha2(validationOptions) {\n    return ValidateBy({\n        name: IS_ISO31661_ALPHA_2,\n        validator: {\n            validate: (value, args) => isISO31661Alpha2(value),\n            defaultMessage: buildMessage(eachPrefix => eachPrefix + '$property must be a valid ISO31661 Alpha2 code', validationOptions),\n        },\n    }, validationOptions);\n}\n"],"mappings":"AAAA,SAASA,YAAY,EAAEC,UAAU,QAAQ,sBAAsB;AAC/D,OAAOC,yBAAyB,MAAM,gCAAgC;AACtE,OAAO,MAAMC,mBAAmB,GAAG,kBAAkB;AACrD;AACA;AACA;AACA,OAAO,SAASC,gBAAgBA,CAACC,KAAK,EAAE;EACpC,OAAO,OAAOA,KAAK,KAAK,QAAQ,IAAIH,yBAAyB,CAACG,KAAK,CAAC;AACxE;AACA;AACA;AACA;AACA,OAAO,SAASC,gBAAgBA,CAACC,iBAAiB,EAAE;EAChD,OAAON,UAAU,CAAC;IACdO,IAAI,EAAEL,mBAAmB;IACzBM,SAAS,EAAE;MACPC,QAAQ,EAAEA,CAACL,KAAK,EAAEM,IAAI,KAAKP,gBAAgB,CAACC,KAAK,CAAC;MAClDO,cAAc,EAAEZ,YAAY,CAACa,UAAU,IAAIA,UAAU,GAAG,gDAAgD,EAAEN,iBAAiB;IAC/H;EACJ,CAAC,EAAEA,iBAAiB,CAAC;AACzB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}