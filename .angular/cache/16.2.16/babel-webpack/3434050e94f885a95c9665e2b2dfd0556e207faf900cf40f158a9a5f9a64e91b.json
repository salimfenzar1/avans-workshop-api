{"ast":null,"code":"import _asyncToGenerator from \"C:/Users/salim/Dev/avans-nx-workshop-2024/avans-nx-workshop/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nvar AuthGuard_1;\nimport { __decorate, __metadata } from \"tslib\";\nimport { Injectable, Logger, UnauthorizedException } from '@nestjs/common';\nimport { JwtService } from '@nestjs/jwt';\nexport let AuthGuard = AuthGuard_1 = class AuthGuard {\n  constructor(jwtService) {\n    this.jwtService = jwtService;\n    this.logger = new Logger(AuthGuard_1.name);\n  }\n  canActivate(context) {\n    var _this = this;\n    return _asyncToGenerator(function* () {\n      const request = context.switchToHttp().getRequest();\n      const token = _this.extractTokenFromHeader(request);\n      if (!token) {\n        _this.logger.log('No token found');\n        throw new UnauthorizedException();\n      }\n      try {\n        const payload = yield _this.jwtService.verifyAsync(token, {\n          secret: process.env['JWT_SECRET'] || 'secretstring'\n        });\n        _this.logger.log('payload', payload);\n        // ðŸ’¡ We're assigning the payload to the request object here\n        // so that we can access it in our route handlers\n        request['user'] = payload;\n      } catch {\n        throw new UnauthorizedException();\n      }\n      return true;\n    })();\n  }\n  extractTokenFromHeader(request) {\n    const [type, token] = request.headers.authorization?.split(' ') ?? [];\n    return type === 'Bearer' ? token : undefined;\n  }\n};\nAuthGuard = AuthGuard_1 = __decorate([Injectable(), __metadata(\"design:paramtypes\", [JwtService])], AuthGuard);","map":{"version":3,"names":["Injectable","Logger","UnauthorizedException","JwtService","AuthGuard","AuthGuard_1","constructor","jwtService","logger","name","canActivate","context","_this","_asyncToGenerator","request","switchToHttp","getRequest","token","extractTokenFromHeader","log","payload","verifyAsync","secret","process","env","type","headers","authorization","split","undefined","__decorate"],"sources":["C:\\Users\\salim\\Dev\\avans-nx-workshop-2024\\avans-nx-workshop\\libs\\backend\\auth\\src\\lib\\auth\\auth.guards.ts"],"sourcesContent":["import {\r\n    CanActivate,\r\n    ExecutionContext,\r\n    Injectable,\r\n    Logger,\r\n    UnauthorizedException\r\n} from '@nestjs/common';\r\nimport { JwtService } from '@nestjs/jwt';\r\nimport { Request } from 'express';\r\n\r\n@Injectable()\r\nexport class AuthGuard implements CanActivate {\r\n    private readonly logger = new Logger(AuthGuard.name);\r\n\r\n    constructor(private jwtService: JwtService) {}\r\n\r\n    async canActivate(context: ExecutionContext): Promise<boolean> {\r\n        const request = context.switchToHttp().getRequest();\r\n        const token = this.extractTokenFromHeader(request);\r\n        if (!token) {\r\n            this.logger.log('No token found');\r\n            throw new UnauthorizedException();\r\n        }\r\n        try {\r\n            const payload = await this.jwtService.verifyAsync(token, {\r\n                secret: process.env['JWT_SECRET'] || 'secretstring'\r\n            });\r\n            this.logger.log('payload', payload);\r\n            // ðŸ’¡ We're assigning the payload to the request object here\r\n            // so that we can access it in our route handlers\r\n            request['user'] = payload;\r\n        } catch {\r\n            throw new UnauthorizedException();\r\n        }\r\n        return true;\r\n    }\r\n\r\n    private extractTokenFromHeader(request: Request): string | undefined {\r\n        const [type, token] = request.headers.authorization?.split(' ') ?? [];\r\n        return type === 'Bearer' ? token : undefined;\r\n    }\r\n}\r\n"],"mappings":";;;AAAA,SAGIA,UAAU,EACVC,MAAM,EACNC,qBAAqB,QAClB,gBAAgB;AACvB,SAASC,UAAU,QAAQ,aAAa;AAIjC,WAAMC,SAAS,GAAAC,WAAA,GAAf,MAAMD,SAAS;EAGlBE,YAAoBC,UAAsB;IAAtB,KAAAA,UAAU,GAAVA,UAAU;IAFb,KAAAC,MAAM,GAAG,IAAIP,MAAM,CAACI,WAAS,CAACI,IAAI,CAAC;EAEP;EAEvCC,WAAWA,CAACC,OAAyB;IAAA,IAAAC,KAAA;IAAA,OAAAC,iBAAA;MACvC,MAAMC,OAAO,GAAGH,OAAO,CAACI,YAAY,EAAE,CAACC,UAAU,EAAE;MACnD,MAAMC,KAAK,GAAGL,KAAI,CAACM,sBAAsB,CAACJ,OAAO,CAAC;MAClD,IAAI,CAACG,KAAK,EAAE;QACRL,KAAI,CAACJ,MAAM,CAACW,GAAG,CAAC,gBAAgB,CAAC;QACjC,MAAM,IAAIjB,qBAAqB,EAAE;;MAErC,IAAI;QACA,MAAMkB,OAAO,SAASR,KAAI,CAACL,UAAU,CAACc,WAAW,CAACJ,KAAK,EAAE;UACrDK,MAAM,EAAEC,OAAO,CAACC,GAAG,CAAC,YAAY,CAAC,IAAI;SACxC,CAAC;QACFZ,KAAI,CAACJ,MAAM,CAACW,GAAG,CAAC,SAAS,EAAEC,OAAO,CAAC;QACnC;QACA;QACAN,OAAO,CAAC,MAAM,CAAC,GAAGM,OAAO;OAC5B,CAAC,MAAM;QACJ,MAAM,IAAIlB,qBAAqB,EAAE;;MAErC,OAAO,IAAI;IAAC;EAChB;EAEQgB,sBAAsBA,CAACJ,OAAgB;IAC3C,MAAM,CAACW,IAAI,EAAER,KAAK,CAAC,GAAGH,OAAO,CAACY,OAAO,CAACC,aAAa,EAAEC,KAAK,CAAC,GAAG,CAAC,IAAI,EAAE;IACrE,OAAOH,IAAI,KAAK,QAAQ,GAAGR,KAAK,GAAGY,SAAS;EAChD;CACH;AA9BYzB,SAAS,GAAAC,WAAA,GAAAyB,UAAA,EADrB9B,UAAU,EAAE,E,iCAIuBG,UAAU,G,EAHjCC,SAAS,CA8BrB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}