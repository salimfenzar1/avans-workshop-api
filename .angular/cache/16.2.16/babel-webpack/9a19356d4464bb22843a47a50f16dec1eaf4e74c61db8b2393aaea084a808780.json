{"ast":null,"code":"import { buildMessage, ValidateBy } from '../common/ValidateBy';\nexport const ARRAY_MIN_SIZE = 'arrayMinSize';\n/**\n * Checks if the array's length is greater than or equal to the specified number.\n * If null or undefined is given then this function returns false.\n */\nexport function arrayMinSize(array, min) {\n  return Array.isArray(array) && array.length >= min;\n}\n/**\n * Checks if the array's length is greater than or equal to the specified number.\n * If null or undefined is given then this function returns false.\n */\nexport function ArrayMinSize(min, validationOptions) {\n  return ValidateBy({\n    name: ARRAY_MIN_SIZE,\n    constraints: [min],\n    validator: {\n      validate: (value, args) => arrayMinSize(value, args === null || args === void 0 ? void 0 : args.constraints[0]),\n      defaultMessage: buildMessage(eachPrefix => eachPrefix + '$property must contain at least $constraint1 elements', validationOptions)\n    }\n  }, validationOptions);\n}","map":{"version":3,"names":["buildMessage","ValidateBy","ARRAY_MIN_SIZE","arrayMinSize","array","min","Array","isArray","length","ArrayMinSize","validationOptions","name","constraints","validator","validate","value","args","defaultMessage","eachPrefix"],"sources":["C:/Users/salim/Dev/avans-nx-workshop-2024/avans-nx-workshop/node_modules/class-validator/esm2015/decorator/array/ArrayMinSize.js"],"sourcesContent":["import { buildMessage, ValidateBy } from '../common/ValidateBy';\nexport const ARRAY_MIN_SIZE = 'arrayMinSize';\n/**\n * Checks if the array's length is greater than or equal to the specified number.\n * If null or undefined is given then this function returns false.\n */\nexport function arrayMinSize(array, min) {\n    return Array.isArray(array) && array.length >= min;\n}\n/**\n * Checks if the array's length is greater than or equal to the specified number.\n * If null or undefined is given then this function returns false.\n */\nexport function ArrayMinSize(min, validationOptions) {\n    return ValidateBy({\n        name: ARRAY_MIN_SIZE,\n        constraints: [min],\n        validator: {\n            validate: (value, args) => arrayMinSize(value, args === null || args === void 0 ? void 0 : args.constraints[0]),\n            defaultMessage: buildMessage(eachPrefix => eachPrefix + '$property must contain at least $constraint1 elements', validationOptions),\n        },\n    }, validationOptions);\n}\n"],"mappings":"AAAA,SAASA,YAAY,EAAEC,UAAU,QAAQ,sBAAsB;AAC/D,OAAO,MAAMC,cAAc,GAAG,cAAc;AAC5C;AACA;AACA;AACA;AACA,OAAO,SAASC,YAAYA,CAACC,KAAK,EAAEC,GAAG,EAAE;EACrC,OAAOC,KAAK,CAACC,OAAO,CAACH,KAAK,CAAC,IAAIA,KAAK,CAACI,MAAM,IAAIH,GAAG;AACtD;AACA;AACA;AACA;AACA;AACA,OAAO,SAASI,YAAYA,CAACJ,GAAG,EAAEK,iBAAiB,EAAE;EACjD,OAAOT,UAAU,CAAC;IACdU,IAAI,EAAET,cAAc;IACpBU,WAAW,EAAE,CAACP,GAAG,CAAC;IAClBQ,SAAS,EAAE;MACPC,QAAQ,EAAEA,CAACC,KAAK,EAAEC,IAAI,KAAKb,YAAY,CAACY,KAAK,EAAEC,IAAI,KAAK,IAAI,IAAIA,IAAI,KAAK,KAAK,CAAC,GAAG,KAAK,CAAC,GAAGA,IAAI,CAACJ,WAAW,CAAC,CAAC,CAAC,CAAC;MAC/GK,cAAc,EAAEjB,YAAY,CAACkB,UAAU,IAAIA,UAAU,GAAG,uDAAuD,EAAER,iBAAiB;IACtI;EACJ,CAAC,EAAEA,iBAAiB,CAAC;AACzB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}