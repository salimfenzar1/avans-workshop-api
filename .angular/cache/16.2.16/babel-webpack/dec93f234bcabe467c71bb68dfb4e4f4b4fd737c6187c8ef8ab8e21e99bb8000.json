{"ast":null,"code":"\"use strict\";\n\nvar RouterModule_1;\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.RouterModule = exports.targetModulesByContainer = exports.ROUTES = void 0;\nconst tslib_1 = require(\"tslib\");\nconst common_1 = require(\"@nestjs/common\");\nconst constants_1 = require(\"@nestjs/common/constants\");\nconst shared_utils_1 = require(\"@nestjs/common/utils/shared.utils\");\nconst modules_container_1 = require(\"../injector/modules-container\");\nconst utils_1 = require(\"./utils\");\nexports.ROUTES = Symbol('ROUTES');\nexports.targetModulesByContainer = new WeakMap();\n/**\n * @publicApi\n */\nlet RouterModule = RouterModule_1 = class RouterModule {\n  constructor(modulesContainer, routes) {\n    this.modulesContainer = modulesContainer;\n    this.routes = routes;\n    this.routes = this.deepCloneRoutes(routes);\n    this.initialize();\n  }\n  static register(routes) {\n    return {\n      module: RouterModule_1,\n      providers: [{\n        provide: exports.ROUTES,\n        useValue: routes\n      }]\n    };\n  }\n  deepCloneRoutes(routes) {\n    return routes.map(routeOrType => {\n      if (typeof routeOrType === 'function') {\n        return routeOrType;\n      }\n      if (routeOrType.children) {\n        return {\n          ...routeOrType,\n          children: this.deepCloneRoutes(routeOrType.children)\n        };\n      }\n      return {\n        ...routeOrType\n      };\n    });\n  }\n  initialize() {\n    const flattenedRoutes = (0, utils_1.flattenRoutePaths)(this.routes);\n    flattenedRoutes.forEach(route => {\n      const modulePath = (0, shared_utils_1.normalizePath)(route.path);\n      this.registerModulePathMetadata(route.module, modulePath);\n      this.updateTargetModulesCache(route.module);\n    });\n  }\n  registerModulePathMetadata(moduleCtor, modulePath) {\n    Reflect.defineMetadata(constants_1.MODULE_PATH + this.modulesContainer.applicationId, modulePath, moduleCtor);\n  }\n  updateTargetModulesCache(moduleCtor) {\n    let moduleClassSet;\n    if (exports.targetModulesByContainer.has(this.modulesContainer)) {\n      moduleClassSet = exports.targetModulesByContainer.get(this.modulesContainer);\n    } else {\n      moduleClassSet = new WeakSet();\n      exports.targetModulesByContainer.set(this.modulesContainer, moduleClassSet);\n    }\n    const moduleRef = Array.from(this.modulesContainer.values()).find(item => item?.metatype === moduleCtor);\n    if (!moduleRef) {\n      return;\n    }\n    moduleClassSet.add(moduleRef);\n  }\n};\nexports.RouterModule = RouterModule;\nexports.RouterModule = RouterModule = RouterModule_1 = tslib_1.__decorate([(0, common_1.Module)({}), tslib_1.__param(1, (0, common_1.Inject)(exports.ROUTES)), tslib_1.__metadata(\"design:paramtypes\", [modules_container_1.ModulesContainer, Array])], RouterModule);","map":{"version":3,"names":["RouterModule_1","Object","defineProperty","exports","value","RouterModule","targetModulesByContainer","ROUTES","tslib_1","require","common_1","constants_1","shared_utils_1","modules_container_1","utils_1","Symbol","WeakMap","constructor","modulesContainer","routes","deepCloneRoutes","initialize","register","module","providers","provide","useValue","map","routeOrType","children","flattenedRoutes","flattenRoutePaths","forEach","route","modulePath","normalizePath","path","registerModulePathMetadata","updateTargetModulesCache","moduleCtor","Reflect","defineMetadata","MODULE_PATH","applicationId","moduleClassSet","has","get","WeakSet","set","moduleRef","Array","from","values","find","item","metatype","add","__decorate","Module","__param","Inject","__metadata","ModulesContainer"],"sources":["C:/Users/salim/Dev/avans-nx-workshop-2024/avans-nx-workshop/node_modules/@nestjs/core/router/router-module.js"],"sourcesContent":["\"use strict\";\nvar RouterModule_1;\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.RouterModule = exports.targetModulesByContainer = exports.ROUTES = void 0;\nconst tslib_1 = require(\"tslib\");\nconst common_1 = require(\"@nestjs/common\");\nconst constants_1 = require(\"@nestjs/common/constants\");\nconst shared_utils_1 = require(\"@nestjs/common/utils/shared.utils\");\nconst modules_container_1 = require(\"../injector/modules-container\");\nconst utils_1 = require(\"./utils\");\nexports.ROUTES = Symbol('ROUTES');\nexports.targetModulesByContainer = new WeakMap();\n/**\n * @publicApi\n */\nlet RouterModule = RouterModule_1 = class RouterModule {\n    constructor(modulesContainer, routes) {\n        this.modulesContainer = modulesContainer;\n        this.routes = routes;\n        this.routes = this.deepCloneRoutes(routes);\n        this.initialize();\n    }\n    static register(routes) {\n        return {\n            module: RouterModule_1,\n            providers: [\n                {\n                    provide: exports.ROUTES,\n                    useValue: routes,\n                },\n            ],\n        };\n    }\n    deepCloneRoutes(routes) {\n        return routes.map((routeOrType) => {\n            if (typeof routeOrType === 'function') {\n                return routeOrType;\n            }\n            if (routeOrType.children) {\n                return {\n                    ...routeOrType,\n                    children: this.deepCloneRoutes(routeOrType.children),\n                };\n            }\n            return { ...routeOrType };\n        });\n    }\n    initialize() {\n        const flattenedRoutes = (0, utils_1.flattenRoutePaths)(this.routes);\n        flattenedRoutes.forEach(route => {\n            const modulePath = (0, shared_utils_1.normalizePath)(route.path);\n            this.registerModulePathMetadata(route.module, modulePath);\n            this.updateTargetModulesCache(route.module);\n        });\n    }\n    registerModulePathMetadata(moduleCtor, modulePath) {\n        Reflect.defineMetadata(constants_1.MODULE_PATH + this.modulesContainer.applicationId, modulePath, moduleCtor);\n    }\n    updateTargetModulesCache(moduleCtor) {\n        let moduleClassSet;\n        if (exports.targetModulesByContainer.has(this.modulesContainer)) {\n            moduleClassSet = exports.targetModulesByContainer.get(this.modulesContainer);\n        }\n        else {\n            moduleClassSet = new WeakSet();\n            exports.targetModulesByContainer.set(this.modulesContainer, moduleClassSet);\n        }\n        const moduleRef = Array.from(this.modulesContainer.values()).find(item => item?.metatype === moduleCtor);\n        if (!moduleRef) {\n            return;\n        }\n        moduleClassSet.add(moduleRef);\n    }\n};\nexports.RouterModule = RouterModule;\nexports.RouterModule = RouterModule = RouterModule_1 = tslib_1.__decorate([\n    (0, common_1.Module)({}),\n    tslib_1.__param(1, (0, common_1.Inject)(exports.ROUTES)),\n    tslib_1.__metadata(\"design:paramtypes\", [modules_container_1.ModulesContainer, Array])\n], RouterModule);\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}