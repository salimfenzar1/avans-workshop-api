{"ast":null,"code":"\"use strict\";\n\nvar _asyncToGenerator = require(\"C:/Users/salim/Dev/avans-nx-workshop-2024/avans-nx-workshop/node_modules/@babel/runtime/helpers/asyncToGenerator.js\").default;\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.RouterExecutionContext = void 0;\nconst common_1 = require(\"@nestjs/common\");\nconst constants_1 = require(\"@nestjs/common/constants\");\nconst route_paramtypes_enum_1 = require(\"@nestjs/common/enums/route-paramtypes.enum\");\nconst shared_utils_1 = require(\"@nestjs/common/utils/shared.utils\");\nconst guards_1 = require(\"../guards\");\nconst context_utils_1 = require(\"../helpers/context-utils\");\nconst handler_metadata_storage_1 = require(\"../helpers/handler-metadata-storage\");\nconst constants_2 = require(\"../injector/constants\");\nconst router_response_controller_1 = require(\"./router-response-controller\");\nclass RouterExecutionContext {\n  constructor(paramsFactory, pipesContextCreator, pipesConsumer, guardsContextCreator, guardsConsumer, interceptorsContextCreator, interceptorsConsumer, applicationRef) {\n    this.paramsFactory = paramsFactory;\n    this.pipesContextCreator = pipesContextCreator;\n    this.pipesConsumer = pipesConsumer;\n    this.guardsContextCreator = guardsContextCreator;\n    this.guardsConsumer = guardsConsumer;\n    this.interceptorsContextCreator = interceptorsContextCreator;\n    this.interceptorsConsumer = interceptorsConsumer;\n    this.applicationRef = applicationRef;\n    this.handlerMetadataStorage = new handler_metadata_storage_1.HandlerMetadataStorage();\n    this.contextUtils = new context_utils_1.ContextUtils();\n    this.responseController = new router_response_controller_1.RouterResponseController(applicationRef);\n  }\n  create(instance, callback, methodName, moduleKey, requestMethod, contextId = constants_2.STATIC_CONTEXT, inquirerId) {\n    var _this = this;\n    const contextType = 'http';\n    const {\n      argsLength,\n      fnHandleResponse,\n      paramtypes,\n      getParamsMetadata,\n      httpStatusCode,\n      responseHeaders,\n      hasCustomHeaders\n    } = this.getMetadata(instance, callback, methodName, moduleKey, requestMethod, contextType);\n    const paramsOptions = this.contextUtils.mergeParamsMetatypes(getParamsMetadata(moduleKey, contextId, inquirerId), paramtypes);\n    const pipes = this.pipesContextCreator.create(instance, callback, moduleKey, contextId, inquirerId);\n    const guards = this.guardsContextCreator.create(instance, callback, moduleKey, contextId, inquirerId);\n    const interceptors = this.interceptorsContextCreator.create(instance, callback, moduleKey, contextId, inquirerId);\n    const fnCanActivate = this.createGuardsFn(guards, instance, callback, contextType);\n    const fnApplyPipes = this.createPipesFn(pipes, paramsOptions);\n    const handler = (args, req, res, next) => /*#__PURE__*/_asyncToGenerator(function* () {\n      fnApplyPipes && (yield fnApplyPipes(args, req, res, next));\n      return callback.apply(instance, args);\n    });\n    return /*#__PURE__*/function () {\n      var _ref2 = _asyncToGenerator(function* (req, res, next) {\n        const args = _this.contextUtils.createNullArray(argsLength);\n        fnCanActivate && (yield fnCanActivate([req, res, next]));\n        _this.responseController.setStatus(res, httpStatusCode);\n        hasCustomHeaders && _this.responseController.setHeaders(res, responseHeaders);\n        const result = yield _this.interceptorsConsumer.intercept(interceptors, [req, res, next], instance, callback, handler(args, req, res, next), contextType);\n        yield fnHandleResponse(result, res, req);\n      });\n      return function (_x, _x2, _x3) {\n        return _ref2.apply(this, arguments);\n      };\n    }();\n  }\n  getMetadata(instance, callback, methodName, moduleKey, requestMethod, contextType) {\n    const cacheMetadata = this.handlerMetadataStorage.get(instance, methodName);\n    if (cacheMetadata) {\n      return cacheMetadata;\n    }\n    const metadata = this.contextUtils.reflectCallbackMetadata(instance, methodName, constants_1.ROUTE_ARGS_METADATA) || {};\n    const keys = Object.keys(metadata);\n    const argsLength = this.contextUtils.getArgumentsLength(keys, metadata);\n    const paramtypes = this.contextUtils.reflectCallbackParamtypes(instance, methodName);\n    const contextFactory = this.contextUtils.getContextFactory(contextType, instance, callback);\n    const getParamsMetadata = (moduleKey, contextId = constants_2.STATIC_CONTEXT, inquirerId) => this.exchangeKeysForValues(keys, metadata, moduleKey, contextId, inquirerId, contextFactory);\n    const paramsMetadata = getParamsMetadata(moduleKey);\n    const isResponseHandled = this.isResponseHandled(instance, methodName, paramsMetadata);\n    const httpRedirectResponse = this.reflectRedirect(callback);\n    const fnHandleResponse = this.createHandleResponseFn(callback, isResponseHandled, httpRedirectResponse);\n    const httpCode = this.reflectHttpStatusCode(callback);\n    const httpStatusCode = httpCode ? httpCode : this.responseController.getStatusByMethod(requestMethod);\n    const responseHeaders = this.reflectResponseHeaders(callback);\n    const hasCustomHeaders = !(0, shared_utils_1.isEmpty)(responseHeaders);\n    const handlerMetadata = {\n      argsLength,\n      fnHandleResponse,\n      paramtypes,\n      getParamsMetadata,\n      httpStatusCode,\n      hasCustomHeaders,\n      responseHeaders\n    };\n    this.handlerMetadataStorage.set(instance, methodName, handlerMetadata);\n    return handlerMetadata;\n  }\n  reflectRedirect(callback) {\n    return Reflect.getMetadata(constants_1.REDIRECT_METADATA, callback);\n  }\n  reflectHttpStatusCode(callback) {\n    return Reflect.getMetadata(constants_1.HTTP_CODE_METADATA, callback);\n  }\n  reflectRenderTemplate(callback) {\n    return Reflect.getMetadata(constants_1.RENDER_METADATA, callback);\n  }\n  reflectResponseHeaders(callback) {\n    return Reflect.getMetadata(constants_1.HEADERS_METADATA, callback) || [];\n  }\n  reflectSse(callback) {\n    return Reflect.getMetadata(constants_1.SSE_METADATA, callback);\n  }\n  exchangeKeysForValues(keys, metadata, moduleContext, contextId = constants_2.STATIC_CONTEXT, inquirerId, contextFactory) {\n    this.pipesContextCreator.setModuleContext(moduleContext);\n    return keys.map(key => {\n      const {\n        index,\n        data,\n        pipes: pipesCollection\n      } = metadata[key];\n      const pipes = this.pipesContextCreator.createConcreteContext(pipesCollection, contextId, inquirerId);\n      const type = this.contextUtils.mapParamType(key);\n      if (key.includes(constants_1.CUSTOM_ROUTE_ARGS_METADATA)) {\n        const {\n          factory\n        } = metadata[key];\n        const customExtractValue = this.contextUtils.getCustomFactory(factory, data, contextFactory);\n        return {\n          index,\n          extractValue: customExtractValue,\n          type,\n          data,\n          pipes\n        };\n      }\n      const numericType = Number(type);\n      const extractValue = (req, res, next) => this.paramsFactory.exchangeKeyForValue(numericType, data, {\n        req,\n        res,\n        next\n      });\n      return {\n        index,\n        extractValue,\n        type: numericType,\n        data,\n        pipes\n      };\n    });\n  }\n  getParamValue(value, {\n    metatype,\n    type,\n    data\n  }, pipes) {\n    var _this2 = this;\n    return _asyncToGenerator(function* () {\n      if (!(0, shared_utils_1.isEmpty)(pipes)) {\n        return _this2.pipesConsumer.apply(value, {\n          metatype,\n          type,\n          data\n        }, pipes);\n      }\n      return value;\n    })();\n  }\n  isPipeable(type) {\n    return type === route_paramtypes_enum_1.RouteParamtypes.BODY || type === route_paramtypes_enum_1.RouteParamtypes.RAW_BODY || type === route_paramtypes_enum_1.RouteParamtypes.QUERY || type === route_paramtypes_enum_1.RouteParamtypes.PARAM || type === route_paramtypes_enum_1.RouteParamtypes.FILE || type === route_paramtypes_enum_1.RouteParamtypes.FILES || (0, shared_utils_1.isString)(type);\n  }\n  createGuardsFn(guards, instance, callback, contextType) {\n    var _this3 = this;\n    const canActivateFn = /*#__PURE__*/function () {\n      var _ref3 = _asyncToGenerator(function* (args) {\n        const canActivate = yield _this3.guardsConsumer.tryActivate(guards, args, instance, callback, contextType);\n        if (!canActivate) {\n          throw new common_1.ForbiddenException(guards_1.FORBIDDEN_MESSAGE);\n        }\n      });\n      return function canActivateFn(_x4) {\n        return _ref3.apply(this, arguments);\n      };\n    }();\n    return guards.length ? canActivateFn : null;\n  }\n  createPipesFn(pipes, paramsOptions) {\n    var _this4 = this;\n    const pipesFn = /*#__PURE__*/function () {\n      var _ref4 = _asyncToGenerator(function* (args, req, res, next) {\n        const resolveParamValue = /*#__PURE__*/function () {\n          var _ref5 = _asyncToGenerator(function* (param) {\n            const {\n              index,\n              extractValue,\n              type,\n              data,\n              metatype,\n              pipes: paramPipes\n            } = param;\n            const value = extractValue(req, res, next);\n            args[index] = _this4.isPipeable(type) ? yield _this4.getParamValue(value, {\n              metatype,\n              type,\n              data\n            }, pipes.concat(paramPipes)) : value;\n          });\n          return function resolveParamValue(_x9) {\n            return _ref5.apply(this, arguments);\n          };\n        }();\n        yield Promise.all(paramsOptions.map(resolveParamValue));\n      });\n      return function pipesFn(_x5, _x6, _x7, _x8) {\n        return _ref4.apply(this, arguments);\n      };\n    }();\n    return paramsOptions.length ? pipesFn : null;\n  }\n  createHandleResponseFn(callback, isResponseHandled, redirectResponse, httpStatusCode) {\n    var _this5 = this;\n    const renderTemplate = this.reflectRenderTemplate(callback);\n    if (renderTemplate) {\n      return /*#__PURE__*/function () {\n        var _ref6 = _asyncToGenerator(function* (result, res) {\n          return yield _this5.responseController.render(result, res, renderTemplate);\n        });\n        return function (_x10, _x11) {\n          return _ref6.apply(this, arguments);\n        };\n      }();\n    }\n    if (redirectResponse && (0, shared_utils_1.isString)(redirectResponse.url)) {\n      return /*#__PURE__*/function () {\n        var _ref7 = _asyncToGenerator(function* (result, res) {\n          yield _this5.responseController.redirect(result, res, redirectResponse);\n        });\n        return function (_x12, _x13) {\n          return _ref7.apply(this, arguments);\n        };\n      }();\n    }\n    const isSseHandler = !!this.reflectSse(callback);\n    if (isSseHandler) {\n      return (result, res, req) => {\n        this.responseController.sse(result, res.raw || res, req.raw || req, {\n          additionalHeaders: res.getHeaders?.()\n        });\n      };\n    }\n    return /*#__PURE__*/function () {\n      var _ref8 = _asyncToGenerator(function* (result, res) {\n        result = yield _this5.responseController.transformToResult(result);\n        !isResponseHandled && (yield _this5.responseController.apply(result, res, httpStatusCode));\n        return res;\n      });\n      return function (_x14, _x15) {\n        return _ref8.apply(this, arguments);\n      };\n    }();\n  }\n  isResponseHandled(instance, methodName, paramsMetadata) {\n    const hasResponseOrNextDecorator = paramsMetadata.some(({\n      type\n    }) => type === route_paramtypes_enum_1.RouteParamtypes.RESPONSE || type === route_paramtypes_enum_1.RouteParamtypes.NEXT);\n    const isPassthroughEnabled = this.contextUtils.reflectPassthrough(instance, methodName);\n    return hasResponseOrNextDecorator && !isPassthroughEnabled;\n  }\n}\nexports.RouterExecutionContext = RouterExecutionContext;","map":{"version":3,"names":["_asyncToGenerator","require","default","Object","defineProperty","exports","value","RouterExecutionContext","common_1","constants_1","route_paramtypes_enum_1","shared_utils_1","guards_1","context_utils_1","handler_metadata_storage_1","constants_2","router_response_controller_1","constructor","paramsFactory","pipesContextCreator","pipesConsumer","guardsContextCreator","guardsConsumer","interceptorsContextCreator","interceptorsConsumer","applicationRef","handlerMetadataStorage","HandlerMetadataStorage","contextUtils","ContextUtils","responseController","RouterResponseController","create","instance","callback","methodName","moduleKey","requestMethod","contextId","STATIC_CONTEXT","inquirerId","_this","contextType","argsLength","fnHandleResponse","paramtypes","getParamsMetadata","httpStatusCode","responseHeaders","hasCustomHeaders","getMetadata","paramsOptions","mergeParamsMetatypes","pipes","guards","interceptors","fnCanActivate","createGuardsFn","fnApplyPipes","createPipesFn","handler","args","req","res","next","apply","_ref2","createNullArray","setStatus","setHeaders","result","intercept","_x","_x2","_x3","arguments","cacheMetadata","get","metadata","reflectCallbackMetadata","ROUTE_ARGS_METADATA","keys","getArgumentsLength","reflectCallbackParamtypes","contextFactory","getContextFactory","exchangeKeysForValues","paramsMetadata","isResponseHandled","httpRedirectResponse","reflectRedirect","createHandleResponseFn","httpCode","reflectHttpStatusCode","getStatusByMethod","reflectResponseHeaders","isEmpty","handlerMetadata","set","Reflect","REDIRECT_METADATA","HTTP_CODE_METADATA","reflectRenderTemplate","RENDER_METADATA","HEADERS_METADATA","reflectSse","SSE_METADATA","moduleContext","setModuleContext","map","key","index","data","pipesCollection","createConcreteContext","type","mapParamType","includes","CUSTOM_ROUTE_ARGS_METADATA","factory","customExtractValue","getCustomFactory","extractValue","numericType","Number","exchangeKeyForValue","getParamValue","metatype","_this2","isPipeable","RouteParamtypes","BODY","RAW_BODY","QUERY","PARAM","FILE","FILES","isString","_this3","canActivateFn","_ref3","canActivate","tryActivate","ForbiddenException","FORBIDDEN_MESSAGE","_x4","length","_this4","pipesFn","_ref4","resolveParamValue","_ref5","param","paramPipes","concat","_x9","Promise","all","_x5","_x6","_x7","_x8","redirectResponse","_this5","renderTemplate","_ref6","render","_x10","_x11","url","_ref7","redirect","_x12","_x13","isSseHandler","sse","raw","additionalHeaders","getHeaders","_ref8","transformToResult","_x14","_x15","hasResponseOrNextDecorator","some","RESPONSE","NEXT","isPassthroughEnabled","reflectPassthrough"],"sources":["C:/Users/salim/Dev/avans-nx-workshop-2024/avans-nx-workshop/node_modules/@nestjs/core/router/router-execution-context.js"],"sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.RouterExecutionContext = void 0;\nconst common_1 = require(\"@nestjs/common\");\nconst constants_1 = require(\"@nestjs/common/constants\");\nconst route_paramtypes_enum_1 = require(\"@nestjs/common/enums/route-paramtypes.enum\");\nconst shared_utils_1 = require(\"@nestjs/common/utils/shared.utils\");\nconst guards_1 = require(\"../guards\");\nconst context_utils_1 = require(\"../helpers/context-utils\");\nconst handler_metadata_storage_1 = require(\"../helpers/handler-metadata-storage\");\nconst constants_2 = require(\"../injector/constants\");\nconst router_response_controller_1 = require(\"./router-response-controller\");\nclass RouterExecutionContext {\n    constructor(paramsFactory, pipesContextCreator, pipesConsumer, guardsContextCreator, guardsConsumer, interceptorsContextCreator, interceptorsConsumer, applicationRef) {\n        this.paramsFactory = paramsFactory;\n        this.pipesContextCreator = pipesContextCreator;\n        this.pipesConsumer = pipesConsumer;\n        this.guardsContextCreator = guardsContextCreator;\n        this.guardsConsumer = guardsConsumer;\n        this.interceptorsContextCreator = interceptorsContextCreator;\n        this.interceptorsConsumer = interceptorsConsumer;\n        this.applicationRef = applicationRef;\n        this.handlerMetadataStorage = new handler_metadata_storage_1.HandlerMetadataStorage();\n        this.contextUtils = new context_utils_1.ContextUtils();\n        this.responseController = new router_response_controller_1.RouterResponseController(applicationRef);\n    }\n    create(instance, callback, methodName, moduleKey, requestMethod, contextId = constants_2.STATIC_CONTEXT, inquirerId) {\n        const contextType = 'http';\n        const { argsLength, fnHandleResponse, paramtypes, getParamsMetadata, httpStatusCode, responseHeaders, hasCustomHeaders, } = this.getMetadata(instance, callback, methodName, moduleKey, requestMethod, contextType);\n        const paramsOptions = this.contextUtils.mergeParamsMetatypes(getParamsMetadata(moduleKey, contextId, inquirerId), paramtypes);\n        const pipes = this.pipesContextCreator.create(instance, callback, moduleKey, contextId, inquirerId);\n        const guards = this.guardsContextCreator.create(instance, callback, moduleKey, contextId, inquirerId);\n        const interceptors = this.interceptorsContextCreator.create(instance, callback, moduleKey, contextId, inquirerId);\n        const fnCanActivate = this.createGuardsFn(guards, instance, callback, contextType);\n        const fnApplyPipes = this.createPipesFn(pipes, paramsOptions);\n        const handler = (args, req, res, next) => async () => {\n            fnApplyPipes && (await fnApplyPipes(args, req, res, next));\n            return callback.apply(instance, args);\n        };\n        return async (req, res, next) => {\n            const args = this.contextUtils.createNullArray(argsLength);\n            fnCanActivate && (await fnCanActivate([req, res, next]));\n            this.responseController.setStatus(res, httpStatusCode);\n            hasCustomHeaders &&\n                this.responseController.setHeaders(res, responseHeaders);\n            const result = await this.interceptorsConsumer.intercept(interceptors, [req, res, next], instance, callback, handler(args, req, res, next), contextType);\n            await fnHandleResponse(result, res, req);\n        };\n    }\n    getMetadata(instance, callback, methodName, moduleKey, requestMethod, contextType) {\n        const cacheMetadata = this.handlerMetadataStorage.get(instance, methodName);\n        if (cacheMetadata) {\n            return cacheMetadata;\n        }\n        const metadata = this.contextUtils.reflectCallbackMetadata(instance, methodName, constants_1.ROUTE_ARGS_METADATA) || {};\n        const keys = Object.keys(metadata);\n        const argsLength = this.contextUtils.getArgumentsLength(keys, metadata);\n        const paramtypes = this.contextUtils.reflectCallbackParamtypes(instance, methodName);\n        const contextFactory = this.contextUtils.getContextFactory(contextType, instance, callback);\n        const getParamsMetadata = (moduleKey, contextId = constants_2.STATIC_CONTEXT, inquirerId) => this.exchangeKeysForValues(keys, metadata, moduleKey, contextId, inquirerId, contextFactory);\n        const paramsMetadata = getParamsMetadata(moduleKey);\n        const isResponseHandled = this.isResponseHandled(instance, methodName, paramsMetadata);\n        const httpRedirectResponse = this.reflectRedirect(callback);\n        const fnHandleResponse = this.createHandleResponseFn(callback, isResponseHandled, httpRedirectResponse);\n        const httpCode = this.reflectHttpStatusCode(callback);\n        const httpStatusCode = httpCode\n            ? httpCode\n            : this.responseController.getStatusByMethod(requestMethod);\n        const responseHeaders = this.reflectResponseHeaders(callback);\n        const hasCustomHeaders = !(0, shared_utils_1.isEmpty)(responseHeaders);\n        const handlerMetadata = {\n            argsLength,\n            fnHandleResponse,\n            paramtypes,\n            getParamsMetadata,\n            httpStatusCode,\n            hasCustomHeaders,\n            responseHeaders,\n        };\n        this.handlerMetadataStorage.set(instance, methodName, handlerMetadata);\n        return handlerMetadata;\n    }\n    reflectRedirect(callback) {\n        return Reflect.getMetadata(constants_1.REDIRECT_METADATA, callback);\n    }\n    reflectHttpStatusCode(callback) {\n        return Reflect.getMetadata(constants_1.HTTP_CODE_METADATA, callback);\n    }\n    reflectRenderTemplate(callback) {\n        return Reflect.getMetadata(constants_1.RENDER_METADATA, callback);\n    }\n    reflectResponseHeaders(callback) {\n        return Reflect.getMetadata(constants_1.HEADERS_METADATA, callback) || [];\n    }\n    reflectSse(callback) {\n        return Reflect.getMetadata(constants_1.SSE_METADATA, callback);\n    }\n    exchangeKeysForValues(keys, metadata, moduleContext, contextId = constants_2.STATIC_CONTEXT, inquirerId, contextFactory) {\n        this.pipesContextCreator.setModuleContext(moduleContext);\n        return keys.map(key => {\n            const { index, data, pipes: pipesCollection } = metadata[key];\n            const pipes = this.pipesContextCreator.createConcreteContext(pipesCollection, contextId, inquirerId);\n            const type = this.contextUtils.mapParamType(key);\n            if (key.includes(constants_1.CUSTOM_ROUTE_ARGS_METADATA)) {\n                const { factory } = metadata[key];\n                const customExtractValue = this.contextUtils.getCustomFactory(factory, data, contextFactory);\n                return { index, extractValue: customExtractValue, type, data, pipes };\n            }\n            const numericType = Number(type);\n            const extractValue = (req, res, next) => this.paramsFactory.exchangeKeyForValue(numericType, data, {\n                req,\n                res,\n                next,\n            });\n            return { index, extractValue, type: numericType, data, pipes };\n        });\n    }\n    async getParamValue(value, { metatype, type, data, }, pipes) {\n        if (!(0, shared_utils_1.isEmpty)(pipes)) {\n            return this.pipesConsumer.apply(value, { metatype, type, data }, pipes);\n        }\n        return value;\n    }\n    isPipeable(type) {\n        return (type === route_paramtypes_enum_1.RouteParamtypes.BODY ||\n            type === route_paramtypes_enum_1.RouteParamtypes.RAW_BODY ||\n            type === route_paramtypes_enum_1.RouteParamtypes.QUERY ||\n            type === route_paramtypes_enum_1.RouteParamtypes.PARAM ||\n            type === route_paramtypes_enum_1.RouteParamtypes.FILE ||\n            type === route_paramtypes_enum_1.RouteParamtypes.FILES ||\n            (0, shared_utils_1.isString)(type));\n    }\n    createGuardsFn(guards, instance, callback, contextType) {\n        const canActivateFn = async (args) => {\n            const canActivate = await this.guardsConsumer.tryActivate(guards, args, instance, callback, contextType);\n            if (!canActivate) {\n                throw new common_1.ForbiddenException(guards_1.FORBIDDEN_MESSAGE);\n            }\n        };\n        return guards.length ? canActivateFn : null;\n    }\n    createPipesFn(pipes, paramsOptions) {\n        const pipesFn = async (args, req, res, next) => {\n            const resolveParamValue = async (param) => {\n                const { index, extractValue, type, data, metatype, pipes: paramPipes, } = param;\n                const value = extractValue(req, res, next);\n                args[index] = this.isPipeable(type)\n                    ? await this.getParamValue(value, { metatype, type, data }, pipes.concat(paramPipes))\n                    : value;\n            };\n            await Promise.all(paramsOptions.map(resolveParamValue));\n        };\n        return paramsOptions.length ? pipesFn : null;\n    }\n    createHandleResponseFn(callback, isResponseHandled, redirectResponse, httpStatusCode) {\n        const renderTemplate = this.reflectRenderTemplate(callback);\n        if (renderTemplate) {\n            return async (result, res) => {\n                return await this.responseController.render(result, res, renderTemplate);\n            };\n        }\n        if (redirectResponse && (0, shared_utils_1.isString)(redirectResponse.url)) {\n            return async (result, res) => {\n                await this.responseController.redirect(result, res, redirectResponse);\n            };\n        }\n        const isSseHandler = !!this.reflectSse(callback);\n        if (isSseHandler) {\n            return (result, res, req) => {\n                this.responseController.sse(result, res.raw || res, req.raw || req, { additionalHeaders: res.getHeaders?.() });\n            };\n        }\n        return async (result, res) => {\n            result = await this.responseController.transformToResult(result);\n            !isResponseHandled &&\n                (await this.responseController.apply(result, res, httpStatusCode));\n            return res;\n        };\n    }\n    isResponseHandled(instance, methodName, paramsMetadata) {\n        const hasResponseOrNextDecorator = paramsMetadata.some(({ type }) => type === route_paramtypes_enum_1.RouteParamtypes.RESPONSE || type === route_paramtypes_enum_1.RouteParamtypes.NEXT);\n        const isPassthroughEnabled = this.contextUtils.reflectPassthrough(instance, methodName);\n        return hasResponseOrNextDecorator && !isPassthroughEnabled;\n    }\n}\nexports.RouterExecutionContext = RouterExecutionContext;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}