{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.ClassSerializerInterceptor = void 0;\nconst tslib_1 = require(\"tslib\");\nconst operators_1 = require(\"rxjs/operators\");\nconst core_1 = require(\"../decorators/core\");\nconst file_stream_1 = require(\"../file-stream\");\nconst load_package_util_1 = require(\"../utils/load-package.util\");\nconst shared_utils_1 = require(\"../utils/shared.utils\");\nconst class_serializer_constants_1 = require(\"./class-serializer.constants\");\nlet classTransformer = {};\n// NOTE (external)\n// We need to deduplicate them here due to the circular dependency\n// between core and common packages\nconst REFLECTOR = 'Reflector';\n/**\n * @publicApi\n */\nlet ClassSerializerInterceptor = class ClassSerializerInterceptor {\n  constructor(reflector, defaultOptions = {}) {\n    this.reflector = reflector;\n    this.defaultOptions = defaultOptions;\n    classTransformer = defaultOptions?.transformerPackage ?? (0, load_package_util_1.loadPackage)('class-transformer', 'ClassSerializerInterceptor', () => require('class-transformer'));\n    if (!defaultOptions?.transformerPackage) {\n      require('class-transformer');\n    }\n  }\n  intercept(context, next) {\n    const contextOptions = this.getContextOptions(context);\n    const options = {\n      ...this.defaultOptions,\n      ...contextOptions\n    };\n    return next.handle().pipe((0, operators_1.map)(res => this.serialize(res, options)));\n  }\n  /**\n   * Serializes responses that are non-null objects nor streamable files.\n   */\n  serialize(response, options) {\n    if (!(0, shared_utils_1.isObject)(response) || response instanceof file_stream_1.StreamableFile) {\n      return response;\n    }\n    return Array.isArray(response) ? response.map(item => this.transformToPlain(item, options)) : this.transformToPlain(response, options);\n  }\n  transformToPlain(plainOrClass, options) {\n    if (!plainOrClass) {\n      return plainOrClass;\n    }\n    if (!options.type) {\n      return classTransformer.classToPlain(plainOrClass, options);\n    }\n    if (plainOrClass instanceof options.type) {\n      return classTransformer.classToPlain(plainOrClass, options);\n    }\n    const instance = classTransformer.plainToClass(options.type, plainOrClass);\n    return classTransformer.classToPlain(instance, options);\n  }\n  getContextOptions(context) {\n    return this.reflector.getAllAndOverride(class_serializer_constants_1.CLASS_SERIALIZER_OPTIONS, [context.getHandler(), context.getClass()]);\n  }\n};\nexports.ClassSerializerInterceptor = ClassSerializerInterceptor;\nexports.ClassSerializerInterceptor = ClassSerializerInterceptor = tslib_1.__decorate([(0, core_1.Injectable)(), tslib_1.__param(0, (0, core_1.Inject)(REFLECTOR)), tslib_1.__param(1, (0, core_1.Optional)()), tslib_1.__metadata(\"design:paramtypes\", [Object, Object])], ClassSerializerInterceptor);","map":{"version":3,"names":["Object","defineProperty","exports","value","ClassSerializerInterceptor","tslib_1","require","operators_1","core_1","file_stream_1","load_package_util_1","shared_utils_1","class_serializer_constants_1","classTransformer","REFLECTOR","constructor","reflector","defaultOptions","transformerPackage","loadPackage","intercept","context","next","contextOptions","getContextOptions","options","handle","pipe","map","res","serialize","response","isObject","StreamableFile","Array","isArray","item","transformToPlain","plainOrClass","type","classToPlain","instance","plainToClass","getAllAndOverride","CLASS_SERIALIZER_OPTIONS","getHandler","getClass","__decorate","Injectable","__param","Inject","Optional","__metadata"],"sources":["C:/Users/salim/Dev/avans-nx-workshop-2024/avans-nx-workshop/node_modules/@nestjs/common/serializer/class-serializer.interceptor.js"],"sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.ClassSerializerInterceptor = void 0;\nconst tslib_1 = require(\"tslib\");\nconst operators_1 = require(\"rxjs/operators\");\nconst core_1 = require(\"../decorators/core\");\nconst file_stream_1 = require(\"../file-stream\");\nconst load_package_util_1 = require(\"../utils/load-package.util\");\nconst shared_utils_1 = require(\"../utils/shared.utils\");\nconst class_serializer_constants_1 = require(\"./class-serializer.constants\");\nlet classTransformer = {};\n// NOTE (external)\n// We need to deduplicate them here due to the circular dependency\n// between core and common packages\nconst REFLECTOR = 'Reflector';\n/**\n * @publicApi\n */\nlet ClassSerializerInterceptor = class ClassSerializerInterceptor {\n    constructor(reflector, defaultOptions = {}) {\n        this.reflector = reflector;\n        this.defaultOptions = defaultOptions;\n        classTransformer =\n            defaultOptions?.transformerPackage ??\n                (0, load_package_util_1.loadPackage)('class-transformer', 'ClassSerializerInterceptor', () => require('class-transformer'));\n        if (!defaultOptions?.transformerPackage) {\n            require('class-transformer');\n        }\n    }\n    intercept(context, next) {\n        const contextOptions = this.getContextOptions(context);\n        const options = {\n            ...this.defaultOptions,\n            ...contextOptions,\n        };\n        return next\n            .handle()\n            .pipe((0, operators_1.map)((res) => this.serialize(res, options)));\n    }\n    /**\n     * Serializes responses that are non-null objects nor streamable files.\n     */\n    serialize(response, options) {\n        if (!(0, shared_utils_1.isObject)(response) || response instanceof file_stream_1.StreamableFile) {\n            return response;\n        }\n        return Array.isArray(response)\n            ? response.map(item => this.transformToPlain(item, options))\n            : this.transformToPlain(response, options);\n    }\n    transformToPlain(plainOrClass, options) {\n        if (!plainOrClass) {\n            return plainOrClass;\n        }\n        if (!options.type) {\n            return classTransformer.classToPlain(plainOrClass, options);\n        }\n        if (plainOrClass instanceof options.type) {\n            return classTransformer.classToPlain(plainOrClass, options);\n        }\n        const instance = classTransformer.plainToClass(options.type, plainOrClass);\n        return classTransformer.classToPlain(instance, options);\n    }\n    getContextOptions(context) {\n        return this.reflector.getAllAndOverride(class_serializer_constants_1.CLASS_SERIALIZER_OPTIONS, [\n            context.getHandler(),\n            context.getClass(),\n        ]);\n    }\n};\nexports.ClassSerializerInterceptor = ClassSerializerInterceptor;\nexports.ClassSerializerInterceptor = ClassSerializerInterceptor = tslib_1.__decorate([\n    (0, core_1.Injectable)(),\n    tslib_1.__param(0, (0, core_1.Inject)(REFLECTOR)),\n    tslib_1.__param(1, (0, core_1.Optional)()),\n    tslib_1.__metadata(\"design:paramtypes\", [Object, Object])\n], ClassSerializerInterceptor);\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}