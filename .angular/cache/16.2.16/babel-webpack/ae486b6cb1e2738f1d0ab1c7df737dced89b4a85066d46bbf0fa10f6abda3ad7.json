{"ast":null,"code":"/**\n * Container to be used by this library for inversion control. If container was not implicitly set then by default\n * container simply creates a new instance of the given class.\n */\nconst defaultContainer = new class {\n  constructor() {\n    this.instances = [];\n  }\n  get(someClass) {\n    let instance = this.instances.find(instance => instance.type === someClass);\n    if (!instance) {\n      instance = {\n        type: someClass,\n        object: new someClass()\n      };\n      this.instances.push(instance);\n    }\n    return instance.object;\n  }\n}();\nlet userContainer;\nlet userContainerOptions;\n/**\n * Sets container to be used by this library.\n */\nexport function useContainer(iocContainer, options) {\n  userContainer = iocContainer;\n  userContainerOptions = options;\n}\n/**\n * Gets the IOC container used by this library.\n */\nexport function getFromContainer(someClass) {\n  if (userContainer) {\n    try {\n      const instance = userContainer.get(someClass);\n      if (instance) return instance;\n      if (!userContainerOptions || !userContainerOptions.fallback) return instance;\n    } catch (error) {\n      if (!userContainerOptions || !userContainerOptions.fallbackOnErrors) throw error;\n    }\n  }\n  return defaultContainer.get(someClass);\n}","map":{"version":3,"names":["defaultContainer","constructor","instances","get","someClass","instance","find","type","object","push","userContainer","userContainerOptions","useContainer","iocContainer","options","getFromContainer","fallback","error","fallbackOnErrors"],"sources":["C:/Users/salim/Dev/avans-nx-workshop-2024/avans-nx-workshop/node_modules/class-validator/esm2015/container.js"],"sourcesContent":["/**\n * Container to be used by this library for inversion control. If container was not implicitly set then by default\n * container simply creates a new instance of the given class.\n */\nconst defaultContainer = new (class {\n    constructor() {\n        this.instances = [];\n    }\n    get(someClass) {\n        let instance = this.instances.find(instance => instance.type === someClass);\n        if (!instance) {\n            instance = { type: someClass, object: new someClass() };\n            this.instances.push(instance);\n        }\n        return instance.object;\n    }\n})();\nlet userContainer;\nlet userContainerOptions;\n/**\n * Sets container to be used by this library.\n */\nexport function useContainer(iocContainer, options) {\n    userContainer = iocContainer;\n    userContainerOptions = options;\n}\n/**\n * Gets the IOC container used by this library.\n */\nexport function getFromContainer(someClass) {\n    if (userContainer) {\n        try {\n            const instance = userContainer.get(someClass);\n            if (instance)\n                return instance;\n            if (!userContainerOptions || !userContainerOptions.fallback)\n                return instance;\n        }\n        catch (error) {\n            if (!userContainerOptions || !userContainerOptions.fallbackOnErrors)\n                throw error;\n        }\n    }\n    return defaultContainer.get(someClass);\n}\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA,MAAMA,gBAAgB,GAAG,IAAK,MAAM;EAChCC,WAAWA,CAAA,EAAG;IACV,IAAI,CAACC,SAAS,GAAG,EAAE;EACvB;EACAC,GAAGA,CAACC,SAAS,EAAE;IACX,IAAIC,QAAQ,GAAG,IAAI,CAACH,SAAS,CAACI,IAAI,CAACD,QAAQ,IAAIA,QAAQ,CAACE,IAAI,KAAKH,SAAS,CAAC;IAC3E,IAAI,CAACC,QAAQ,EAAE;MACXA,QAAQ,GAAG;QAAEE,IAAI,EAAEH,SAAS;QAAEI,MAAM,EAAE,IAAIJ,SAAS,CAAC;MAAE,CAAC;MACvD,IAAI,CAACF,SAAS,CAACO,IAAI,CAACJ,QAAQ,CAAC;IACjC;IACA,OAAOA,QAAQ,CAACG,MAAM;EAC1B;AACJ,CAAC,CAAE,CAAC;AACJ,IAAIE,aAAa;AACjB,IAAIC,oBAAoB;AACxB;AACA;AACA;AACA,OAAO,SAASC,YAAYA,CAACC,YAAY,EAAEC,OAAO,EAAE;EAChDJ,aAAa,GAAGG,YAAY;EAC5BF,oBAAoB,GAAGG,OAAO;AAClC;AACA;AACA;AACA;AACA,OAAO,SAASC,gBAAgBA,CAACX,SAAS,EAAE;EACxC,IAAIM,aAAa,EAAE;IACf,IAAI;MACA,MAAML,QAAQ,GAAGK,aAAa,CAACP,GAAG,CAACC,SAAS,CAAC;MAC7C,IAAIC,QAAQ,EACR,OAAOA,QAAQ;MACnB,IAAI,CAACM,oBAAoB,IAAI,CAACA,oBAAoB,CAACK,QAAQ,EACvD,OAAOX,QAAQ;IACvB,CAAC,CACD,OAAOY,KAAK,EAAE;MACV,IAAI,CAACN,oBAAoB,IAAI,CAACA,oBAAoB,CAACO,gBAAgB,EAC/D,MAAMD,KAAK;IACnB;EACJ;EACA,OAAOjB,gBAAgB,CAACG,GAAG,CAACC,SAAS,CAAC;AAC1C","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}