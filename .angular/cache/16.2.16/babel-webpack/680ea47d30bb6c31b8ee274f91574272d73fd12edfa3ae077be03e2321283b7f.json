{"ast":null,"code":"/**\n * Validation error description.\n */\nexport class ValidationError {\n  /**\n   *\n   * @param shouldDecorate decorate the message with ANSI formatter escape codes for better readability\n   * @param hasParent true when the error is a child of an another one\n   * @param parentPath path as string to the parent of this property\n   * @param showConstraintMessages show constraint messages instead of constraint names\n   */\n  toString(shouldDecorate = false, hasParent = false, parentPath = ``, showConstraintMessages = false) {\n    const boldStart = shouldDecorate ? `\\x1b[1m` : ``;\n    const boldEnd = shouldDecorate ? `\\x1b[22m` : ``;\n    const constraintsToString = () => {\n      var _a;\n      return (showConstraintMessages ? Object.values : Object.keys)((_a = this.constraints) !== null && _a !== void 0 ? _a : {}).join(`, `);\n    };\n    const propConstraintFailed = propertyName => ` - property ${boldStart}${parentPath}${propertyName}${boldEnd} has failed the following constraints: ${boldStart}${constraintsToString()}${boldEnd} \\n`;\n    if (!hasParent) {\n      return `An instance of ${boldStart}${this.target ? this.target.constructor.name : 'an object'}${boldEnd} has failed the validation:\\n` + (this.constraints ? propConstraintFailed(this.property) : ``) + (this.children ? this.children.map(childError => childError.toString(shouldDecorate, true, this.property, showConstraintMessages)).join(``) : ``);\n    } else {\n      // we format numbers as array indexes for better readability.\n      const formattedProperty = Number.isInteger(+this.property) ? `[${this.property}]` : `${parentPath ? `.` : ``}${this.property}`;\n      if (this.constraints) {\n        return propConstraintFailed(formattedProperty);\n      } else {\n        return this.children ? this.children.map(childError => childError.toString(shouldDecorate, true, `${parentPath}${formattedProperty}`, showConstraintMessages)).join(``) : ``;\n      }\n    }\n  }\n}","map":{"version":3,"names":["ValidationError","toString","shouldDecorate","hasParent","parentPath","showConstraintMessages","boldStart","boldEnd","constraintsToString","_a","Object","values","keys","constraints","join","propConstraintFailed","propertyName","target","constructor","name","property","children","map","childError","formattedProperty","Number","isInteger"],"sources":["C:/Users/salim/Dev/avans-nx-workshop-2024/avans-nx-workshop/node_modules/class-validator/esm2015/validation/ValidationError.js"],"sourcesContent":["/**\n * Validation error description.\n */\nexport class ValidationError {\n    /**\n     *\n     * @param shouldDecorate decorate the message with ANSI formatter escape codes for better readability\n     * @param hasParent true when the error is a child of an another one\n     * @param parentPath path as string to the parent of this property\n     * @param showConstraintMessages show constraint messages instead of constraint names\n     */\n    toString(shouldDecorate = false, hasParent = false, parentPath = ``, showConstraintMessages = false) {\n        const boldStart = shouldDecorate ? `\\x1b[1m` : ``;\n        const boldEnd = shouldDecorate ? `\\x1b[22m` : ``;\n        const constraintsToString = () => { var _a; return (showConstraintMessages ? Object.values : Object.keys)((_a = this.constraints) !== null && _a !== void 0 ? _a : {}).join(`, `); };\n        const propConstraintFailed = (propertyName) => ` - property ${boldStart}${parentPath}${propertyName}${boldEnd} has failed the following constraints: ${boldStart}${constraintsToString()}${boldEnd} \\n`;\n        if (!hasParent) {\n            return (`An instance of ${boldStart}${this.target ? this.target.constructor.name : 'an object'}${boldEnd} has failed the validation:\\n` +\n                (this.constraints ? propConstraintFailed(this.property) : ``) +\n                (this.children\n                    ? this.children\n                        .map(childError => childError.toString(shouldDecorate, true, this.property, showConstraintMessages))\n                        .join(``)\n                    : ``));\n        }\n        else {\n            // we format numbers as array indexes for better readability.\n            const formattedProperty = Number.isInteger(+this.property)\n                ? `[${this.property}]`\n                : `${parentPath ? `.` : ``}${this.property}`;\n            if (this.constraints) {\n                return propConstraintFailed(formattedProperty);\n            }\n            else {\n                return this.children\n                    ? this.children\n                        .map(childError => childError.toString(shouldDecorate, true, `${parentPath}${formattedProperty}`, showConstraintMessages))\n                        .join(``)\n                    : ``;\n            }\n        }\n    }\n}\n"],"mappings":"AAAA;AACA;AACA;AACA,OAAO,MAAMA,eAAe,CAAC;EACzB;AACJ;AACA;AACA;AACA;AACA;AACA;EACIC,QAAQA,CAACC,cAAc,GAAG,KAAK,EAAEC,SAAS,GAAG,KAAK,EAAEC,UAAU,GAAI,EAAC,EAAEC,sBAAsB,GAAG,KAAK,EAAE;IACjG,MAAMC,SAAS,GAAGJ,cAAc,GAAI,SAAQ,GAAI,EAAC;IACjD,MAAMK,OAAO,GAAGL,cAAc,GAAI,UAAS,GAAI,EAAC;IAChD,MAAMM,mBAAmB,GAAGA,CAAA,KAAM;MAAE,IAAIC,EAAE;MAAE,OAAO,CAACJ,sBAAsB,GAAGK,MAAM,CAACC,MAAM,GAAGD,MAAM,CAACE,IAAI,EAAE,CAACH,EAAE,GAAG,IAAI,CAACI,WAAW,MAAM,IAAI,IAAIJ,EAAE,KAAK,KAAK,CAAC,GAAGA,EAAE,GAAG,CAAC,CAAC,CAAC,CAACK,IAAI,CAAE,IAAG,CAAC;IAAE,CAAC;IACpL,MAAMC,oBAAoB,GAAIC,YAAY,IAAM,eAAcV,SAAU,GAAEF,UAAW,GAAEY,YAAa,GAAET,OAAQ,0CAAyCD,SAAU,GAAEE,mBAAmB,CAAC,CAAE,GAAED,OAAQ,KAAI;IACvM,IAAI,CAACJ,SAAS,EAAE;MACZ,OAAS,kBAAiBG,SAAU,GAAE,IAAI,CAACW,MAAM,GAAG,IAAI,CAACA,MAAM,CAACC,WAAW,CAACC,IAAI,GAAG,WAAY,GAAEZ,OAAQ,+BAA8B,IAClI,IAAI,CAACM,WAAW,GAAGE,oBAAoB,CAAC,IAAI,CAACK,QAAQ,CAAC,GAAI,EAAC,CAAC,IAC5D,IAAI,CAACC,QAAQ,GACR,IAAI,CAACA,QAAQ,CACVC,GAAG,CAACC,UAAU,IAAIA,UAAU,CAACtB,QAAQ,CAACC,cAAc,EAAE,IAAI,EAAE,IAAI,CAACkB,QAAQ,EAAEf,sBAAsB,CAAC,CAAC,CACnGS,IAAI,CAAE,EAAC,CAAC,GACV,EAAC,CAAC;IACjB,CAAC,MACI;MACD;MACA,MAAMU,iBAAiB,GAAGC,MAAM,CAACC,SAAS,CAAC,CAAC,IAAI,CAACN,QAAQ,CAAC,GACnD,IAAG,IAAI,CAACA,QAAS,GAAE,GACnB,GAAEhB,UAAU,GAAI,GAAE,GAAI,EAAE,GAAE,IAAI,CAACgB,QAAS,EAAC;MAChD,IAAI,IAAI,CAACP,WAAW,EAAE;QAClB,OAAOE,oBAAoB,CAACS,iBAAiB,CAAC;MAClD,CAAC,MACI;QACD,OAAO,IAAI,CAACH,QAAQ,GACd,IAAI,CAACA,QAAQ,CACVC,GAAG,CAACC,UAAU,IAAIA,UAAU,CAACtB,QAAQ,CAACC,cAAc,EAAE,IAAI,EAAG,GAAEE,UAAW,GAAEoB,iBAAkB,EAAC,EAAEnB,sBAAsB,CAAC,CAAC,CACzHS,IAAI,CAAE,EAAC,CAAC,GACV,EAAC;MACZ;IACJ;EACJ;AACJ","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}