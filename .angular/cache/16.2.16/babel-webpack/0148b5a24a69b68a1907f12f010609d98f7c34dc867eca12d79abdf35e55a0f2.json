{"ast":null,"code":"import { ClassTransformer } from '../ClassTransformer';\n/**\n * Return the class instance only with the exposed properties.\n *\n * Can be applied to functions and getters/setters only.\n */\nexport function TransformPlainToInstance(classType, params) {\n  return function (target, propertyKey, descriptor) {\n    const classTransformer = new ClassTransformer();\n    const originalMethod = descriptor.value;\n    descriptor.value = function (...args) {\n      const result = originalMethod.apply(this, args);\n      const isPromise = !!result && (typeof result === 'object' || typeof result === 'function') && typeof result.then === 'function';\n      return isPromise ? result.then(data => classTransformer.plainToInstance(classType, data, params)) : classTransformer.plainToInstance(classType, result, params);\n    };\n  };\n}","map":{"version":3,"names":["ClassTransformer","TransformPlainToInstance","classType","params","target","propertyKey","descriptor","classTransformer","originalMethod","value","args","result","apply","isPromise","then","data","plainToInstance"],"sources":["C:/Users/salim/Dev/avans-nx-workshop-2024/avans-nx-workshop/node_modules/class-transformer/esm2015/decorators/transform-plain-to-instance.decorator.js"],"sourcesContent":["import { ClassTransformer } from '../ClassTransformer';\n/**\n * Return the class instance only with the exposed properties.\n *\n * Can be applied to functions and getters/setters only.\n */\nexport function TransformPlainToInstance(classType, params) {\n    return function (target, propertyKey, descriptor) {\n        const classTransformer = new ClassTransformer();\n        const originalMethod = descriptor.value;\n        descriptor.value = function (...args) {\n            const result = originalMethod.apply(this, args);\n            const isPromise = !!result && (typeof result === 'object' || typeof result === 'function') && typeof result.then === 'function';\n            return isPromise\n                ? result.then((data) => classTransformer.plainToInstance(classType, data, params))\n                : classTransformer.plainToInstance(classType, result, params);\n        };\n    };\n}\n"],"mappings":"AAAA,SAASA,gBAAgB,QAAQ,qBAAqB;AACtD;AACA;AACA;AACA;AACA;AACA,OAAO,SAASC,wBAAwBA,CAACC,SAAS,EAAEC,MAAM,EAAE;EACxD,OAAO,UAAUC,MAAM,EAAEC,WAAW,EAAEC,UAAU,EAAE;IAC9C,MAAMC,gBAAgB,GAAG,IAAIP,gBAAgB,CAAC,CAAC;IAC/C,MAAMQ,cAAc,GAAGF,UAAU,CAACG,KAAK;IACvCH,UAAU,CAACG,KAAK,GAAG,UAAU,GAAGC,IAAI,EAAE;MAClC,MAAMC,MAAM,GAAGH,cAAc,CAACI,KAAK,CAAC,IAAI,EAAEF,IAAI,CAAC;MAC/C,MAAMG,SAAS,GAAG,CAAC,CAACF,MAAM,KAAK,OAAOA,MAAM,KAAK,QAAQ,IAAI,OAAOA,MAAM,KAAK,UAAU,CAAC,IAAI,OAAOA,MAAM,CAACG,IAAI,KAAK,UAAU;MAC/H,OAAOD,SAAS,GACVF,MAAM,CAACG,IAAI,CAAEC,IAAI,IAAKR,gBAAgB,CAACS,eAAe,CAACd,SAAS,EAAEa,IAAI,EAAEZ,MAAM,CAAC,CAAC,GAChFI,gBAAgB,CAACS,eAAe,CAACd,SAAS,EAAES,MAAM,EAAER,MAAM,CAAC;IACrE,CAAC;EACL,CAAC;AACL","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}