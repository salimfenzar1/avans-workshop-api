{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.getTransientInstances = getTransientInstances;\nexports.getNonTransientInstances = getNonTransientInstances;\nconst iterare_1 = require(\"iterare\");\n/**\n * Returns the instances which are transient\n * @param instances The instances which should be checked whether they are transient\n */\nfunction getTransientInstances(instances) {\n  return (0, iterare_1.iterate)(instances).filter(([_, wrapper]) => wrapper.isDependencyTreeStatic()).map(([_, wrapper]) => wrapper.getStaticTransientInstances()).flatten().filter(item => !!item).map(({\n    instance\n  }) => instance).toArray();\n}\n/**\n * Returns the instances which are not transient\n * @param instances The instances which should be checked whether they are transient\n */\nfunction getNonTransientInstances(instances) {\n  return (0, iterare_1.iterate)(instances).filter(([key, wrapper]) => wrapper.isDependencyTreeStatic() && !wrapper.isTransient).map(([key, {\n    instance\n  }]) => instance).toArray();\n}","map":{"version":3,"names":["Object","defineProperty","exports","value","getTransientInstances","getNonTransientInstances","iterare_1","require","instances","iterate","filter","_","wrapper","isDependencyTreeStatic","map","getStaticTransientInstances","flatten","item","instance","toArray","key","isTransient"],"sources":["C:/Users/salim/Dev/avans-nx-workshop-2024/avans-nx-workshop/node_modules/@nestjs/core/injector/helpers/transient-instances.js"],"sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.getTransientInstances = getTransientInstances;\nexports.getNonTransientInstances = getNonTransientInstances;\nconst iterare_1 = require(\"iterare\");\n/**\n * Returns the instances which are transient\n * @param instances The instances which should be checked whether they are transient\n */\nfunction getTransientInstances(instances) {\n    return (0, iterare_1.iterate)(instances)\n        .filter(([_, wrapper]) => wrapper.isDependencyTreeStatic())\n        .map(([_, wrapper]) => wrapper.getStaticTransientInstances())\n        .flatten()\n        .filter(item => !!item)\n        .map(({ instance }) => instance)\n        .toArray();\n}\n/**\n * Returns the instances which are not transient\n * @param instances The instances which should be checked whether they are transient\n */\nfunction getNonTransientInstances(instances) {\n    return (0, iterare_1.iterate)(instances)\n        .filter(([key, wrapper]) => wrapper.isDependencyTreeStatic() && !wrapper.isTransient)\n        .map(([key, { instance }]) => instance)\n        .toArray();\n}\n"],"mappings":"AAAA,YAAY;;AACZA,MAAM,CAACC,cAAc,CAACC,OAAO,EAAE,YAAY,EAAE;EAAEC,KAAK,EAAE;AAAK,CAAC,CAAC;AAC7DD,OAAO,CAACE,qBAAqB,GAAGA,qBAAqB;AACrDF,OAAO,CAACG,wBAAwB,GAAGA,wBAAwB;AAC3D,MAAMC,SAAS,GAAGC,OAAO,CAAC,SAAS,CAAC;AACpC;AACA;AACA;AACA;AACA,SAASH,qBAAqBA,CAACI,SAAS,EAAE;EACtC,OAAO,CAAC,CAAC,EAAEF,SAAS,CAACG,OAAO,EAAED,SAAS,CAAC,CACnCE,MAAM,CAAC,CAAC,CAACC,CAAC,EAAEC,OAAO,CAAC,KAAKA,OAAO,CAACC,sBAAsB,CAAC,CAAC,CAAC,CAC1DC,GAAG,CAAC,CAAC,CAACH,CAAC,EAAEC,OAAO,CAAC,KAAKA,OAAO,CAACG,2BAA2B,CAAC,CAAC,CAAC,CAC5DC,OAAO,CAAC,CAAC,CACTN,MAAM,CAACO,IAAI,IAAI,CAAC,CAACA,IAAI,CAAC,CACtBH,GAAG,CAAC,CAAC;IAAEI;EAAS,CAAC,KAAKA,QAAQ,CAAC,CAC/BC,OAAO,CAAC,CAAC;AAClB;AACA;AACA;AACA;AACA;AACA,SAASd,wBAAwBA,CAACG,SAAS,EAAE;EACzC,OAAO,CAAC,CAAC,EAAEF,SAAS,CAACG,OAAO,EAAED,SAAS,CAAC,CACnCE,MAAM,CAAC,CAAC,CAACU,GAAG,EAAER,OAAO,CAAC,KAAKA,OAAO,CAACC,sBAAsB,CAAC,CAAC,IAAI,CAACD,OAAO,CAACS,WAAW,CAAC,CACpFP,GAAG,CAAC,CAAC,CAACM,GAAG,EAAE;IAAEF;EAAS,CAAC,CAAC,KAAKA,QAAQ,CAAC,CACtCC,OAAO,CAAC,CAAC;AAClB","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}