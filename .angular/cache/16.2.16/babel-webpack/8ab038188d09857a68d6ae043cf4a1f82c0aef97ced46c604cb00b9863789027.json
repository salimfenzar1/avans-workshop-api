{"ast":null,"code":"import { ClassTransformer } from './ClassTransformer';\nexport { ClassTransformer } from './ClassTransformer';\nexport * from './decorators';\nexport * from './interfaces';\nexport * from './enums';\nconst classTransformer = new ClassTransformer();\nexport function classToPlain(object, options) {\n  return classTransformer.instanceToPlain(object, options);\n}\nexport function instanceToPlain(object, options) {\n  return classTransformer.instanceToPlain(object, options);\n}\nexport function classToPlainFromExist(object, plainObject, options) {\n  return classTransformer.classToPlainFromExist(object, plainObject, options);\n}\nexport function plainToClass(cls, plain, options) {\n  return classTransformer.plainToInstance(cls, plain, options);\n}\nexport function plainToInstance(cls, plain, options) {\n  return classTransformer.plainToInstance(cls, plain, options);\n}\nexport function plainToClassFromExist(clsObject, plain, options) {\n  return classTransformer.plainToClassFromExist(clsObject, plain, options);\n}\nexport function instanceToInstance(object, options) {\n  return classTransformer.instanceToInstance(object, options);\n}\nexport function classToClassFromExist(object, fromObject, options) {\n  return classTransformer.classToClassFromExist(object, fromObject, options);\n}\nexport function serialize(object, options) {\n  return classTransformer.serialize(object, options);\n}\n/**\n * Deserializes given JSON string to a object of the given class.\n *\n * @deprecated This function is being removed. Please use the following instead:\n * ```\n * instanceToClass(cls, JSON.parse(json), options)\n * ```\n */\nexport function deserialize(cls, json, options) {\n  return classTransformer.deserialize(cls, json, options);\n}\n/**\n * Deserializes given JSON string to an array of objects of the given class.\n *\n * @deprecated This function is being removed. Please use the following instead:\n * ```\n * JSON.parse(json).map(value => instanceToClass(cls, value, options))\n * ```\n *\n */\nexport function deserializeArray(cls, json, options) {\n  return classTransformer.deserializeArray(cls, json, options);\n}","map":{"version":3,"names":["ClassTransformer","classTransformer","classToPlain","object","options","instanceToPlain","classToPlainFromExist","plainObject","plainToClass","cls","plain","plainToInstance","plainToClassFromExist","clsObject","instanceToInstance","classToClassFromExist","fromObject","serialize","deserialize","json","deserializeArray"],"sources":["C:/Users/salim/Dev/avans-nx-workshop-2024/avans-nx-workshop/node_modules/class-transformer/esm2015/index.js"],"sourcesContent":["import { ClassTransformer } from './ClassTransformer';\nexport { ClassTransformer } from './ClassTransformer';\nexport * from './decorators';\nexport * from './interfaces';\nexport * from './enums';\nconst classTransformer = new ClassTransformer();\nexport function classToPlain(object, options) {\n    return classTransformer.instanceToPlain(object, options);\n}\nexport function instanceToPlain(object, options) {\n    return classTransformer.instanceToPlain(object, options);\n}\nexport function classToPlainFromExist(object, plainObject, options) {\n    return classTransformer.classToPlainFromExist(object, plainObject, options);\n}\nexport function plainToClass(cls, plain, options) {\n    return classTransformer.plainToInstance(cls, plain, options);\n}\nexport function plainToInstance(cls, plain, options) {\n    return classTransformer.plainToInstance(cls, plain, options);\n}\nexport function plainToClassFromExist(clsObject, plain, options) {\n    return classTransformer.plainToClassFromExist(clsObject, plain, options);\n}\nexport function instanceToInstance(object, options) {\n    return classTransformer.instanceToInstance(object, options);\n}\nexport function classToClassFromExist(object, fromObject, options) {\n    return classTransformer.classToClassFromExist(object, fromObject, options);\n}\nexport function serialize(object, options) {\n    return classTransformer.serialize(object, options);\n}\n/**\n * Deserializes given JSON string to a object of the given class.\n *\n * @deprecated This function is being removed. Please use the following instead:\n * ```\n * instanceToClass(cls, JSON.parse(json), options)\n * ```\n */\nexport function deserialize(cls, json, options) {\n    return classTransformer.deserialize(cls, json, options);\n}\n/**\n * Deserializes given JSON string to an array of objects of the given class.\n *\n * @deprecated This function is being removed. Please use the following instead:\n * ```\n * JSON.parse(json).map(value => instanceToClass(cls, value, options))\n * ```\n *\n */\nexport function deserializeArray(cls, json, options) {\n    return classTransformer.deserializeArray(cls, json, options);\n}\n"],"mappings":"AAAA,SAASA,gBAAgB,QAAQ,oBAAoB;AACrD,SAASA,gBAAgB,QAAQ,oBAAoB;AACrD,cAAc,cAAc;AAC5B,cAAc,cAAc;AAC5B,cAAc,SAAS;AACvB,MAAMC,gBAAgB,GAAG,IAAID,gBAAgB,CAAC,CAAC;AAC/C,OAAO,SAASE,YAAYA,CAACC,MAAM,EAAEC,OAAO,EAAE;EAC1C,OAAOH,gBAAgB,CAACI,eAAe,CAACF,MAAM,EAAEC,OAAO,CAAC;AAC5D;AACA,OAAO,SAASC,eAAeA,CAACF,MAAM,EAAEC,OAAO,EAAE;EAC7C,OAAOH,gBAAgB,CAACI,eAAe,CAACF,MAAM,EAAEC,OAAO,CAAC;AAC5D;AACA,OAAO,SAASE,qBAAqBA,CAACH,MAAM,EAAEI,WAAW,EAAEH,OAAO,EAAE;EAChE,OAAOH,gBAAgB,CAACK,qBAAqB,CAACH,MAAM,EAAEI,WAAW,EAAEH,OAAO,CAAC;AAC/E;AACA,OAAO,SAASI,YAAYA,CAACC,GAAG,EAAEC,KAAK,EAAEN,OAAO,EAAE;EAC9C,OAAOH,gBAAgB,CAACU,eAAe,CAACF,GAAG,EAAEC,KAAK,EAAEN,OAAO,CAAC;AAChE;AACA,OAAO,SAASO,eAAeA,CAACF,GAAG,EAAEC,KAAK,EAAEN,OAAO,EAAE;EACjD,OAAOH,gBAAgB,CAACU,eAAe,CAACF,GAAG,EAAEC,KAAK,EAAEN,OAAO,CAAC;AAChE;AACA,OAAO,SAASQ,qBAAqBA,CAACC,SAAS,EAAEH,KAAK,EAAEN,OAAO,EAAE;EAC7D,OAAOH,gBAAgB,CAACW,qBAAqB,CAACC,SAAS,EAAEH,KAAK,EAAEN,OAAO,CAAC;AAC5E;AACA,OAAO,SAASU,kBAAkBA,CAACX,MAAM,EAAEC,OAAO,EAAE;EAChD,OAAOH,gBAAgB,CAACa,kBAAkB,CAACX,MAAM,EAAEC,OAAO,CAAC;AAC/D;AACA,OAAO,SAASW,qBAAqBA,CAACZ,MAAM,EAAEa,UAAU,EAAEZ,OAAO,EAAE;EAC/D,OAAOH,gBAAgB,CAACc,qBAAqB,CAACZ,MAAM,EAAEa,UAAU,EAAEZ,OAAO,CAAC;AAC9E;AACA,OAAO,SAASa,SAASA,CAACd,MAAM,EAAEC,OAAO,EAAE;EACvC,OAAOH,gBAAgB,CAACgB,SAAS,CAACd,MAAM,EAAEC,OAAO,CAAC;AACtD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO,SAASc,WAAWA,CAACT,GAAG,EAAEU,IAAI,EAAEf,OAAO,EAAE;EAC5C,OAAOH,gBAAgB,CAACiB,WAAW,CAACT,GAAG,EAAEU,IAAI,EAAEf,OAAO,CAAC;AAC3D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO,SAASgB,gBAAgBA,CAACX,GAAG,EAAEU,IAAI,EAAEf,OAAO,EAAE;EACjD,OAAOH,gBAAgB,CAACmB,gBAAgB,CAACX,GAAG,EAAEU,IAAI,EAAEf,OAAO,CAAC;AAChE","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}