{"ast":null,"code":"import { buildMessage, ValidateBy } from '../common/ValidateBy';\nimport isJwtValidator from 'validator/lib/isJWT';\nexport const IS_JWT = 'isJwt';\n/**\n * Checks if the string is valid JWT token.\n * If given value is not a string, then it returns false.\n */\nexport function isJWT(value) {\n  return typeof value === 'string' && isJwtValidator(value);\n}\n/**\n * Checks if the string is valid JWT token.\n * If given value is not a string, then it returns false.\n */\nexport function IsJWT(validationOptions) {\n  return ValidateBy({\n    name: IS_JWT,\n    validator: {\n      validate: (value, args) => isJWT(value),\n      defaultMessage: buildMessage(eachPrefix => eachPrefix + '$property must be a jwt string', validationOptions)\n    }\n  }, validationOptions);\n}","map":{"version":3,"names":["buildMessage","ValidateBy","isJwtValidator","IS_JWT","isJWT","value","IsJWT","validationOptions","name","validator","validate","args","defaultMessage","eachPrefix"],"sources":["C:/Users/salim/Dev/avans-nx-workshop-2024/avans-nx-workshop/node_modules/class-validator/esm2015/decorator/string/IsJWT.js"],"sourcesContent":["import { buildMessage, ValidateBy } from '../common/ValidateBy';\nimport isJwtValidator from 'validator/lib/isJWT';\nexport const IS_JWT = 'isJwt';\n/**\n * Checks if the string is valid JWT token.\n * If given value is not a string, then it returns false.\n */\nexport function isJWT(value) {\n    return typeof value === 'string' && isJwtValidator(value);\n}\n/**\n * Checks if the string is valid JWT token.\n * If given value is not a string, then it returns false.\n */\nexport function IsJWT(validationOptions) {\n    return ValidateBy({\n        name: IS_JWT,\n        validator: {\n            validate: (value, args) => isJWT(value),\n            defaultMessage: buildMessage(eachPrefix => eachPrefix + '$property must be a jwt string', validationOptions),\n        },\n    }, validationOptions);\n}\n"],"mappings":"AAAA,SAASA,YAAY,EAAEC,UAAU,QAAQ,sBAAsB;AAC/D,OAAOC,cAAc,MAAM,qBAAqB;AAChD,OAAO,MAAMC,MAAM,GAAG,OAAO;AAC7B;AACA;AACA;AACA;AACA,OAAO,SAASC,KAAKA,CAACC,KAAK,EAAE;EACzB,OAAO,OAAOA,KAAK,KAAK,QAAQ,IAAIH,cAAc,CAACG,KAAK,CAAC;AAC7D;AACA;AACA;AACA;AACA;AACA,OAAO,SAASC,KAAKA,CAACC,iBAAiB,EAAE;EACrC,OAAON,UAAU,CAAC;IACdO,IAAI,EAAEL,MAAM;IACZM,SAAS,EAAE;MACPC,QAAQ,EAAEA,CAACL,KAAK,EAAEM,IAAI,KAAKP,KAAK,CAACC,KAAK,CAAC;MACvCO,cAAc,EAAEZ,YAAY,CAACa,UAAU,IAAIA,UAAU,GAAG,gCAAgC,EAAEN,iBAAiB;IAC/G;EACJ,CAAC,EAAEA,iBAAiB,CAAC;AACzB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}