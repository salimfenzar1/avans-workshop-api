{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.SerializedGraph = void 0;\nconst application_config_1 = require(\"../application-config\");\nconst external_context_creator_1 = require(\"../helpers/external-context-creator\");\nconst http_adapter_host_1 = require(\"../helpers/http-adapter-host\");\nconst inquirer_constants_1 = require(\"../injector/inquirer/inquirer-constants\");\nconst lazy_module_loader_1 = require(\"../injector/lazy-module-loader/lazy-module-loader\");\nconst module_ref_1 = require(\"../injector/module-ref\");\nconst modules_container_1 = require(\"../injector/modules-container\");\nconst request_constants_1 = require(\"../router/request/request-constants\");\nconst reflector_service_1 = require(\"../services/reflector.service\");\nconst deterministic_uuid_registry_1 = require(\"./deterministic-uuid-registry\");\nclass SerializedGraph {\n  constructor() {\n    this.nodes = new Map();\n    this.edges = new Map();\n    this.entrypoints = new Map();\n    this.extras = {\n      orphanedEnhancers: [],\n      attachedEnhancers: []\n    };\n    this._status = 'complete';\n  }\n  set status(status) {\n    this._status = status;\n  }\n  set metadata(metadata) {\n    this._metadata = metadata;\n  }\n  insertNode(nodeDefinition) {\n    if (nodeDefinition.metadata.type === 'provider' && SerializedGraph.INTERNAL_PROVIDERS.includes(nodeDefinition.metadata.token)) {\n      nodeDefinition.metadata = {\n        ...nodeDefinition.metadata,\n        internal: true\n      };\n    }\n    if (this.nodes.has(nodeDefinition.id)) {\n      return this.nodes.get(nodeDefinition.id);\n    }\n    this.nodes.set(nodeDefinition.id, nodeDefinition);\n    return nodeDefinition;\n  }\n  insertEdge(edgeDefinition) {\n    if (edgeDefinition.metadata.type === 'class-to-class' && (SerializedGraph.INTERNAL_PROVIDERS.includes(edgeDefinition.metadata.sourceClassToken) || SerializedGraph.INTERNAL_PROVIDERS.includes(edgeDefinition.metadata.targetClassToken))) {\n      edgeDefinition.metadata = {\n        ...edgeDefinition.metadata,\n        internal: true\n      };\n    }\n    const id = edgeDefinition.id ?? this.generateUuidByEdgeDefinition(edgeDefinition);\n    const edge = {\n      ...edgeDefinition,\n      id\n    };\n    this.edges.set(id, edge);\n    return edge;\n  }\n  insertEntrypoint(definition, parentId) {\n    if (this.entrypoints.has(parentId)) {\n      const existingCollection = this.entrypoints.get(parentId);\n      existingCollection.push(definition);\n    } else {\n      this.entrypoints.set(parentId, [definition]);\n    }\n  }\n  insertOrphanedEnhancer(entry) {\n    this.extras.orphanedEnhancers.push(entry);\n  }\n  insertAttachedEnhancer(nodeId) {\n    this.extras.attachedEnhancers.push({\n      nodeId\n    });\n  }\n  getNodeById(id) {\n    return this.nodes.get(id);\n  }\n  toJSON() {\n    const json = {\n      nodes: Object.fromEntries(this.nodes),\n      edges: Object.fromEntries(this.edges),\n      entrypoints: Object.fromEntries(this.entrypoints),\n      extras: this.extras\n    };\n    if (this._status) {\n      json['status'] = this._status;\n    }\n    if (this._metadata) {\n      json['metadata'] = this._metadata;\n    }\n    return json;\n  }\n  toString() {\n    const replacer = (key, value) => {\n      if (typeof value === 'symbol') {\n        return value.toString();\n      }\n      return typeof value === 'function' ? value.name ?? 'Function' : value;\n    };\n    return JSON.stringify(this.toJSON(), replacer, 2);\n  }\n  generateUuidByEdgeDefinition(edgeDefinition) {\n    return deterministic_uuid_registry_1.DeterministicUuidRegistry.get(JSON.stringify(edgeDefinition));\n  }\n}\nexports.SerializedGraph = SerializedGraph;\nSerializedGraph.INTERNAL_PROVIDERS = [application_config_1.ApplicationConfig, module_ref_1.ModuleRef, http_adapter_host_1.HttpAdapterHost, lazy_module_loader_1.LazyModuleLoader, external_context_creator_1.ExternalContextCreator, modules_container_1.ModulesContainer, reflector_service_1.Reflector, SerializedGraph, http_adapter_host_1.HttpAdapterHost.name, reflector_service_1.Reflector.name, request_constants_1.REQUEST, inquirer_constants_1.INQUIRER];","map":{"version":3,"names":["Object","defineProperty","exports","value","SerializedGraph","application_config_1","require","external_context_creator_1","http_adapter_host_1","inquirer_constants_1","lazy_module_loader_1","module_ref_1","modules_container_1","request_constants_1","reflector_service_1","deterministic_uuid_registry_1","constructor","nodes","Map","edges","entrypoints","extras","orphanedEnhancers","attachedEnhancers","_status","status","metadata","_metadata","insertNode","nodeDefinition","type","INTERNAL_PROVIDERS","includes","token","internal","has","id","get","set","insertEdge","edgeDefinition","sourceClassToken","targetClassToken","generateUuidByEdgeDefinition","edge","insertEntrypoint","definition","parentId","existingCollection","push","insertOrphanedEnhancer","entry","insertAttachedEnhancer","nodeId","getNodeById","toJSON","json","fromEntries","toString","replacer","key","name","JSON","stringify","DeterministicUuidRegistry","ApplicationConfig","ModuleRef","HttpAdapterHost","LazyModuleLoader","ExternalContextCreator","ModulesContainer","Reflector","REQUEST","INQUIRER"],"sources":["C:/Users/salim/Dev/avans-nx-workshop-2024/avans-nx-workshop/node_modules/@nestjs/core/inspector/serialized-graph.js"],"sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.SerializedGraph = void 0;\nconst application_config_1 = require(\"../application-config\");\nconst external_context_creator_1 = require(\"../helpers/external-context-creator\");\nconst http_adapter_host_1 = require(\"../helpers/http-adapter-host\");\nconst inquirer_constants_1 = require(\"../injector/inquirer/inquirer-constants\");\nconst lazy_module_loader_1 = require(\"../injector/lazy-module-loader/lazy-module-loader\");\nconst module_ref_1 = require(\"../injector/module-ref\");\nconst modules_container_1 = require(\"../injector/modules-container\");\nconst request_constants_1 = require(\"../router/request/request-constants\");\nconst reflector_service_1 = require(\"../services/reflector.service\");\nconst deterministic_uuid_registry_1 = require(\"./deterministic-uuid-registry\");\nclass SerializedGraph {\n    constructor() {\n        this.nodes = new Map();\n        this.edges = new Map();\n        this.entrypoints = new Map();\n        this.extras = {\n            orphanedEnhancers: [],\n            attachedEnhancers: [],\n        };\n        this._status = 'complete';\n    }\n    set status(status) {\n        this._status = status;\n    }\n    set metadata(metadata) {\n        this._metadata = metadata;\n    }\n    insertNode(nodeDefinition) {\n        if (nodeDefinition.metadata.type === 'provider' &&\n            SerializedGraph.INTERNAL_PROVIDERS.includes(nodeDefinition.metadata.token)) {\n            nodeDefinition.metadata = {\n                ...nodeDefinition.metadata,\n                internal: true,\n            };\n        }\n        if (this.nodes.has(nodeDefinition.id)) {\n            return this.nodes.get(nodeDefinition.id);\n        }\n        this.nodes.set(nodeDefinition.id, nodeDefinition);\n        return nodeDefinition;\n    }\n    insertEdge(edgeDefinition) {\n        if (edgeDefinition.metadata.type === 'class-to-class' &&\n            (SerializedGraph.INTERNAL_PROVIDERS.includes(edgeDefinition.metadata.sourceClassToken) ||\n                SerializedGraph.INTERNAL_PROVIDERS.includes(edgeDefinition.metadata.targetClassToken))) {\n            edgeDefinition.metadata = {\n                ...edgeDefinition.metadata,\n                internal: true,\n            };\n        }\n        const id = edgeDefinition.id ?? this.generateUuidByEdgeDefinition(edgeDefinition);\n        const edge = {\n            ...edgeDefinition,\n            id,\n        };\n        this.edges.set(id, edge);\n        return edge;\n    }\n    insertEntrypoint(definition, parentId) {\n        if (this.entrypoints.has(parentId)) {\n            const existingCollection = this.entrypoints.get(parentId);\n            existingCollection.push(definition);\n        }\n        else {\n            this.entrypoints.set(parentId, [definition]);\n        }\n    }\n    insertOrphanedEnhancer(entry) {\n        this.extras.orphanedEnhancers.push(entry);\n    }\n    insertAttachedEnhancer(nodeId) {\n        this.extras.attachedEnhancers.push({\n            nodeId,\n        });\n    }\n    getNodeById(id) {\n        return this.nodes.get(id);\n    }\n    toJSON() {\n        const json = {\n            nodes: Object.fromEntries(this.nodes),\n            edges: Object.fromEntries(this.edges),\n            entrypoints: Object.fromEntries(this.entrypoints),\n            extras: this.extras,\n        };\n        if (this._status) {\n            json['status'] = this._status;\n        }\n        if (this._metadata) {\n            json['metadata'] = this._metadata;\n        }\n        return json;\n    }\n    toString() {\n        const replacer = (key, value) => {\n            if (typeof value === 'symbol') {\n                return value.toString();\n            }\n            return typeof value === 'function' ? (value.name ?? 'Function') : value;\n        };\n        return JSON.stringify(this.toJSON(), replacer, 2);\n    }\n    generateUuidByEdgeDefinition(edgeDefinition) {\n        return deterministic_uuid_registry_1.DeterministicUuidRegistry.get(JSON.stringify(edgeDefinition));\n    }\n}\nexports.SerializedGraph = SerializedGraph;\nSerializedGraph.INTERNAL_PROVIDERS = [\n    application_config_1.ApplicationConfig,\n    module_ref_1.ModuleRef,\n    http_adapter_host_1.HttpAdapterHost,\n    lazy_module_loader_1.LazyModuleLoader,\n    external_context_creator_1.ExternalContextCreator,\n    modules_container_1.ModulesContainer,\n    reflector_service_1.Reflector,\n    SerializedGraph,\n    http_adapter_host_1.HttpAdapterHost.name,\n    reflector_service_1.Reflector.name,\n    request_constants_1.REQUEST,\n    inquirer_constants_1.INQUIRER,\n];\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}