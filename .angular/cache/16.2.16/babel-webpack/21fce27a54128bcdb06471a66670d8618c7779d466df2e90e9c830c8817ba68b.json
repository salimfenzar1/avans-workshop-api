{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.Controller = Controller;\nconst constants_1 = require(\"../../constants\");\nconst shared_utils_1 = require(\"../../utils/shared.utils\");\n/**\n * Decorator that marks a class as a Nest controller that can receive inbound\n * requests and produce responses.\n *\n * An HTTP Controller responds to inbound HTTP Requests and produces HTTP Responses.\n * It defines a class that provides the context for one or more related route\n * handlers that correspond to HTTP request methods and associated routes\n * for example `GET /api/profile`, `POST /users/resume`\n *\n * A Microservice Controller responds to requests as well as events, running over\n * a variety of transports [(read more here)](https://docs.nestjs.com/microservices/basics).\n * It defines a class that provides a context for one or more message or event\n * handlers.\n *\n * @param prefixOrOptions a `route path prefix` or a `ControllerOptions` object.\n * A `route path prefix` is pre-pended to the path specified in any request decorator\n * in the class. `ControllerOptions` is an options configuration object specifying:\n * - `scope` - symbol that determines the lifetime of a Controller instance.\n * [See Scope](https://docs.nestjs.com/fundamentals/injection-scopes#usage) for\n * more details.\n * - `prefix` - string that defines a `route path prefix`.  The prefix\n * is pre-pended to the path specified in any request decorator in the class.\n * - `version` - string, array of strings, or Symbol that defines the version\n * of all routes in the class. [See Versioning](https://docs.nestjs.com/techniques/versioning)\n * for more details.\n *\n * @see [Routing](https://docs.nestjs.com/controllers#routing)\n * @see [Controllers](https://docs.nestjs.com/controllers)\n * @see [Microservices](https://docs.nestjs.com/microservices/basics#request-response)\n * @see [Scope](https://docs.nestjs.com/fundamentals/injection-scopes#usage)\n * @see [Versioning](https://docs.nestjs.com/techniques/versioning)\n *\n * @publicApi\n */\nfunction Controller(prefixOrOptions) {\n  const defaultPath = '/';\n  const [path, host, scopeOptions, versionOptions] = (0, shared_utils_1.isUndefined)(prefixOrOptions) ? [defaultPath, undefined, undefined, undefined] : (0, shared_utils_1.isString)(prefixOrOptions) || Array.isArray(prefixOrOptions) ? [prefixOrOptions, undefined, undefined, undefined] : [prefixOrOptions.path || defaultPath, prefixOrOptions.host, {\n    scope: prefixOrOptions.scope,\n    durable: prefixOrOptions.durable\n  }, Array.isArray(prefixOrOptions.version) ? Array.from(new Set(prefixOrOptions.version)) : prefixOrOptions.version];\n  return target => {\n    Reflect.defineMetadata(constants_1.CONTROLLER_WATERMARK, true, target);\n    Reflect.defineMetadata(constants_1.PATH_METADATA, path, target);\n    Reflect.defineMetadata(constants_1.HOST_METADATA, host, target);\n    Reflect.defineMetadata(constants_1.SCOPE_OPTIONS_METADATA, scopeOptions, target);\n    Reflect.defineMetadata(constants_1.VERSION_METADATA, versionOptions, target);\n  };\n}","map":{"version":3,"names":["Object","defineProperty","exports","value","Controller","constants_1","require","shared_utils_1","prefixOrOptions","defaultPath","path","host","scopeOptions","versionOptions","isUndefined","undefined","isString","Array","isArray","scope","durable","version","from","Set","target","Reflect","defineMetadata","CONTROLLER_WATERMARK","PATH_METADATA","HOST_METADATA","SCOPE_OPTIONS_METADATA","VERSION_METADATA"],"sources":["C:/Users/salim/Dev/avans-nx-workshop-2024/avans-nx-workshop/node_modules/@nestjs/common/decorators/core/controller.decorator.js"],"sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Controller = Controller;\nconst constants_1 = require(\"../../constants\");\nconst shared_utils_1 = require(\"../../utils/shared.utils\");\n/**\n * Decorator that marks a class as a Nest controller that can receive inbound\n * requests and produce responses.\n *\n * An HTTP Controller responds to inbound HTTP Requests and produces HTTP Responses.\n * It defines a class that provides the context for one or more related route\n * handlers that correspond to HTTP request methods and associated routes\n * for example `GET /api/profile`, `POST /users/resume`\n *\n * A Microservice Controller responds to requests as well as events, running over\n * a variety of transports [(read more here)](https://docs.nestjs.com/microservices/basics).\n * It defines a class that provides a context for one or more message or event\n * handlers.\n *\n * @param prefixOrOptions a `route path prefix` or a `ControllerOptions` object.\n * A `route path prefix` is pre-pended to the path specified in any request decorator\n * in the class. `ControllerOptions` is an options configuration object specifying:\n * - `scope` - symbol that determines the lifetime of a Controller instance.\n * [See Scope](https://docs.nestjs.com/fundamentals/injection-scopes#usage) for\n * more details.\n * - `prefix` - string that defines a `route path prefix`.  The prefix\n * is pre-pended to the path specified in any request decorator in the class.\n * - `version` - string, array of strings, or Symbol that defines the version\n * of all routes in the class. [See Versioning](https://docs.nestjs.com/techniques/versioning)\n * for more details.\n *\n * @see [Routing](https://docs.nestjs.com/controllers#routing)\n * @see [Controllers](https://docs.nestjs.com/controllers)\n * @see [Microservices](https://docs.nestjs.com/microservices/basics#request-response)\n * @see [Scope](https://docs.nestjs.com/fundamentals/injection-scopes#usage)\n * @see [Versioning](https://docs.nestjs.com/techniques/versioning)\n *\n * @publicApi\n */\nfunction Controller(prefixOrOptions) {\n    const defaultPath = '/';\n    const [path, host, scopeOptions, versionOptions] = (0, shared_utils_1.isUndefined)(prefixOrOptions)\n        ? [defaultPath, undefined, undefined, undefined]\n        : (0, shared_utils_1.isString)(prefixOrOptions) || Array.isArray(prefixOrOptions)\n            ? [prefixOrOptions, undefined, undefined, undefined]\n            : [\n                prefixOrOptions.path || defaultPath,\n                prefixOrOptions.host,\n                { scope: prefixOrOptions.scope, durable: prefixOrOptions.durable },\n                Array.isArray(prefixOrOptions.version)\n                    ? Array.from(new Set(prefixOrOptions.version))\n                    : prefixOrOptions.version,\n            ];\n    return (target) => {\n        Reflect.defineMetadata(constants_1.CONTROLLER_WATERMARK, true, target);\n        Reflect.defineMetadata(constants_1.PATH_METADATA, path, target);\n        Reflect.defineMetadata(constants_1.HOST_METADATA, host, target);\n        Reflect.defineMetadata(constants_1.SCOPE_OPTIONS_METADATA, scopeOptions, target);\n        Reflect.defineMetadata(constants_1.VERSION_METADATA, versionOptions, target);\n    };\n}\n"],"mappings":"AAAA,YAAY;;AACZA,MAAM,CAACC,cAAc,CAACC,OAAO,EAAE,YAAY,EAAE;EAAEC,KAAK,EAAE;AAAK,CAAC,CAAC;AAC7DD,OAAO,CAACE,UAAU,GAAGA,UAAU;AAC/B,MAAMC,WAAW,GAAGC,OAAO,CAAC,iBAAiB,CAAC;AAC9C,MAAMC,cAAc,GAAGD,OAAO,CAAC,0BAA0B,CAAC;AAC1D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAASF,UAAUA,CAACI,eAAe,EAAE;EACjC,MAAMC,WAAW,GAAG,GAAG;EACvB,MAAM,CAACC,IAAI,EAAEC,IAAI,EAAEC,YAAY,EAAEC,cAAc,CAAC,GAAG,CAAC,CAAC,EAAEN,cAAc,CAACO,WAAW,EAAEN,eAAe,CAAC,GAC7F,CAACC,WAAW,EAAEM,SAAS,EAAEA,SAAS,EAAEA,SAAS,CAAC,GAC9C,CAAC,CAAC,EAAER,cAAc,CAACS,QAAQ,EAAER,eAAe,CAAC,IAAIS,KAAK,CAACC,OAAO,CAACV,eAAe,CAAC,GAC3E,CAACA,eAAe,EAAEO,SAAS,EAAEA,SAAS,EAAEA,SAAS,CAAC,GAClD,CACEP,eAAe,CAACE,IAAI,IAAID,WAAW,EACnCD,eAAe,CAACG,IAAI,EACpB;IAAEQ,KAAK,EAAEX,eAAe,CAACW,KAAK;IAAEC,OAAO,EAAEZ,eAAe,CAACY;EAAQ,CAAC,EAClEH,KAAK,CAACC,OAAO,CAACV,eAAe,CAACa,OAAO,CAAC,GAChCJ,KAAK,CAACK,IAAI,CAAC,IAAIC,GAAG,CAACf,eAAe,CAACa,OAAO,CAAC,CAAC,GAC5Cb,eAAe,CAACa,OAAO,CAChC;EACT,OAAQG,MAAM,IAAK;IACfC,OAAO,CAACC,cAAc,CAACrB,WAAW,CAACsB,oBAAoB,EAAE,IAAI,EAAEH,MAAM,CAAC;IACtEC,OAAO,CAACC,cAAc,CAACrB,WAAW,CAACuB,aAAa,EAAElB,IAAI,EAAEc,MAAM,CAAC;IAC/DC,OAAO,CAACC,cAAc,CAACrB,WAAW,CAACwB,aAAa,EAAElB,IAAI,EAAEa,MAAM,CAAC;IAC/DC,OAAO,CAACC,cAAc,CAACrB,WAAW,CAACyB,sBAAsB,EAAElB,YAAY,EAAEY,MAAM,CAAC;IAChFC,OAAO,CAACC,cAAc,CAACrB,WAAW,CAAC0B,gBAAgB,EAAElB,cAAc,EAAEW,MAAM,CAAC;EAChF,CAAC;AACL","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}