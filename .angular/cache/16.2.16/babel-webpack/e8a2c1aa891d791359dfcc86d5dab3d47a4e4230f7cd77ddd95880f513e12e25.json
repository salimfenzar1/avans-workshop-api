{"ast":null,"code":"\"use strict\";\n\nvar _asyncToGenerator = require(\"C:/Users/salim/Dev/avans-nx-workshop-2024/avans-nx-workshop/node_modules/@babel/runtime/helpers/asyncToGenerator.js\").default;\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.AbstractInstanceResolver = void 0;\nconst common_1 = require(\"@nestjs/common\");\nconst exceptions_1 = require(\"../errors/exceptions\");\nclass AbstractInstanceResolver {\n  find(typeOrToken, options) {\n    const instanceLinkOrArray = this.instanceLinksHost.get(typeOrToken, options);\n    const pluckInstance = ({\n      wrapperRef\n    }) => {\n      if (wrapperRef.scope === common_1.Scope.REQUEST || wrapperRef.scope === common_1.Scope.TRANSIENT) {\n        throw new exceptions_1.InvalidClassScopeException(typeOrToken);\n      }\n      return wrapperRef.instance;\n    };\n    if (Array.isArray(instanceLinkOrArray)) {\n      return instanceLinkOrArray.map(pluckInstance);\n    }\n    return pluckInstance(instanceLinkOrArray);\n  }\n  resolvePerContext(typeOrToken, contextModule, contextId, options) {\n    var _this = this;\n    return _asyncToGenerator(function* () {\n      const instanceLinkOrArray = options?.strict ? _this.instanceLinksHost.get(typeOrToken, {\n        moduleId: contextModule.id,\n        each: options.each\n      }) : _this.instanceLinksHost.get(typeOrToken, {\n        each: options.each\n      });\n      const pluckInstance = /*#__PURE__*/function () {\n        var _ref = _asyncToGenerator(function* (instanceLink) {\n          const {\n            wrapperRef,\n            collection\n          } = instanceLink;\n          if (wrapperRef.isDependencyTreeStatic() && !wrapperRef.isTransient) {\n            return _this.get(typeOrToken, {\n              strict: options.strict\n            });\n          }\n          const ctorHost = wrapperRef.instance || {\n            constructor: typeOrToken\n          };\n          const instance = yield _this.injector.loadPerContext(ctorHost, wrapperRef.host, collection, contextId, wrapperRef);\n          if (!instance) {\n            throw new exceptions_1.UnknownElementException();\n          }\n          return instance;\n        });\n        return function pluckInstance(_x) {\n          return _ref.apply(this, arguments);\n        };\n      }();\n      if (Array.isArray(instanceLinkOrArray)) {\n        return Promise.all(instanceLinkOrArray.map(instanceLink => pluckInstance(instanceLink)));\n      }\n      return pluckInstance(instanceLinkOrArray);\n    })();\n  }\n}\nexports.AbstractInstanceResolver = AbstractInstanceResolver;","map":{"version":3,"names":["_asyncToGenerator","require","default","Object","defineProperty","exports","value","AbstractInstanceResolver","common_1","exceptions_1","find","typeOrToken","options","instanceLinkOrArray","instanceLinksHost","get","pluckInstance","wrapperRef","scope","Scope","REQUEST","TRANSIENT","InvalidClassScopeException","instance","Array","isArray","map","resolvePerContext","contextModule","contextId","_this","strict","moduleId","id","each","_ref","instanceLink","collection","isDependencyTreeStatic","isTransient","ctorHost","constructor","injector","loadPerContext","host","UnknownElementException","_x","apply","arguments","Promise","all"],"sources":["C:/Users/salim/Dev/avans-nx-workshop-2024/avans-nx-workshop/node_modules/@nestjs/core/injector/abstract-instance-resolver.js"],"sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.AbstractInstanceResolver = void 0;\nconst common_1 = require(\"@nestjs/common\");\nconst exceptions_1 = require(\"../errors/exceptions\");\nclass AbstractInstanceResolver {\n    find(typeOrToken, options) {\n        const instanceLinkOrArray = this.instanceLinksHost.get(typeOrToken, options);\n        const pluckInstance = ({ wrapperRef }) => {\n            if (wrapperRef.scope === common_1.Scope.REQUEST ||\n                wrapperRef.scope === common_1.Scope.TRANSIENT) {\n                throw new exceptions_1.InvalidClassScopeException(typeOrToken);\n            }\n            return wrapperRef.instance;\n        };\n        if (Array.isArray(instanceLinkOrArray)) {\n            return instanceLinkOrArray.map(pluckInstance);\n        }\n        return pluckInstance(instanceLinkOrArray);\n    }\n    async resolvePerContext(typeOrToken, contextModule, contextId, options) {\n        const instanceLinkOrArray = options?.strict\n            ? this.instanceLinksHost.get(typeOrToken, {\n                moduleId: contextModule.id,\n                each: options.each,\n            })\n            : this.instanceLinksHost.get(typeOrToken, {\n                each: options.each,\n            });\n        const pluckInstance = async (instanceLink) => {\n            const { wrapperRef, collection } = instanceLink;\n            if (wrapperRef.isDependencyTreeStatic() && !wrapperRef.isTransient) {\n                return this.get(typeOrToken, { strict: options.strict });\n            }\n            const ctorHost = wrapperRef.instance || { constructor: typeOrToken };\n            const instance = await this.injector.loadPerContext(ctorHost, wrapperRef.host, collection, contextId, wrapperRef);\n            if (!instance) {\n                throw new exceptions_1.UnknownElementException();\n            }\n            return instance;\n        };\n        if (Array.isArray(instanceLinkOrArray)) {\n            return Promise.all(instanceLinkOrArray.map(instanceLink => pluckInstance(instanceLink)));\n        }\n        return pluckInstance(instanceLinkOrArray);\n    }\n}\nexports.AbstractInstanceResolver = AbstractInstanceResolver;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}