{"ast":null,"code":"import { buildMessage, ValidateBy } from '../common/ValidateBy';\nimport isLengthValidator from 'validator/lib/isLength';\nexport const IS_LENGTH = 'isLength';\n/**\n * Checks if the string's length falls in a range. Note: this function takes into account surrogate pairs.\n * If given value is not a string, then it returns false.\n */\nexport function length(value, min, max) {\n  return typeof value === 'string' && isLengthValidator(value, {\n    min,\n    max\n  });\n}\n/**\n * Checks if the string's length falls in a range. Note: this function takes into account surrogate pairs.\n * If given value is not a string, then it returns false.\n */\nexport function Length(min, max, validationOptions) {\n  return ValidateBy({\n    name: IS_LENGTH,\n    constraints: [min, max],\n    validator: {\n      validate: (value, args) => length(value, args === null || args === void 0 ? void 0 : args.constraints[0], args === null || args === void 0 ? void 0 : args.constraints[1]),\n      defaultMessage: buildMessage((eachPrefix, args) => {\n        const isMinLength = (args === null || args === void 0 ? void 0 : args.constraints[0]) !== null && (args === null || args === void 0 ? void 0 : args.constraints[0]) !== undefined;\n        const isMaxLength = (args === null || args === void 0 ? void 0 : args.constraints[1]) !== null && (args === null || args === void 0 ? void 0 : args.constraints[1]) !== undefined;\n        if (isMinLength && (!args.value || args.value.length < (args === null || args === void 0 ? void 0 : args.constraints[0]))) {\n          return eachPrefix + '$property must be longer than or equal to $constraint1 characters';\n        } else if (isMaxLength && args.value.length > (args === null || args === void 0 ? void 0 : args.constraints[1])) {\n          return eachPrefix + '$property must be shorter than or equal to $constraint2 characters';\n        }\n        return eachPrefix + '$property must be longer than or equal to $constraint1 and shorter than or equal to $constraint2 characters';\n      }, validationOptions)\n    }\n  }, validationOptions);\n}","map":{"version":3,"names":["buildMessage","ValidateBy","isLengthValidator","IS_LENGTH","length","value","min","max","Length","validationOptions","name","constraints","validator","validate","args","defaultMessage","eachPrefix","isMinLength","undefined","isMaxLength"],"sources":["C:/Users/salim/Dev/avans-nx-workshop-2024/avans-nx-workshop/node_modules/class-validator/esm2015/decorator/string/Length.js"],"sourcesContent":["import { buildMessage, ValidateBy } from '../common/ValidateBy';\nimport isLengthValidator from 'validator/lib/isLength';\nexport const IS_LENGTH = 'isLength';\n/**\n * Checks if the string's length falls in a range. Note: this function takes into account surrogate pairs.\n * If given value is not a string, then it returns false.\n */\nexport function length(value, min, max) {\n    return typeof value === 'string' && isLengthValidator(value, { min, max });\n}\n/**\n * Checks if the string's length falls in a range. Note: this function takes into account surrogate pairs.\n * If given value is not a string, then it returns false.\n */\nexport function Length(min, max, validationOptions) {\n    return ValidateBy({\n        name: IS_LENGTH,\n        constraints: [min, max],\n        validator: {\n            validate: (value, args) => length(value, args === null || args === void 0 ? void 0 : args.constraints[0], args === null || args === void 0 ? void 0 : args.constraints[1]),\n            defaultMessage: buildMessage((eachPrefix, args) => {\n                const isMinLength = (args === null || args === void 0 ? void 0 : args.constraints[0]) !== null && (args === null || args === void 0 ? void 0 : args.constraints[0]) !== undefined;\n                const isMaxLength = (args === null || args === void 0 ? void 0 : args.constraints[1]) !== null && (args === null || args === void 0 ? void 0 : args.constraints[1]) !== undefined;\n                if (isMinLength && (!args.value || args.value.length < (args === null || args === void 0 ? void 0 : args.constraints[0]))) {\n                    return eachPrefix + '$property must be longer than or equal to $constraint1 characters';\n                }\n                else if (isMaxLength && args.value.length > (args === null || args === void 0 ? void 0 : args.constraints[1])) {\n                    return eachPrefix + '$property must be shorter than or equal to $constraint2 characters';\n                }\n                return (eachPrefix +\n                    '$property must be longer than or equal to $constraint1 and shorter than or equal to $constraint2 characters');\n            }, validationOptions),\n        },\n    }, validationOptions);\n}\n"],"mappings":"AAAA,SAASA,YAAY,EAAEC,UAAU,QAAQ,sBAAsB;AAC/D,OAAOC,iBAAiB,MAAM,wBAAwB;AACtD,OAAO,MAAMC,SAAS,GAAG,UAAU;AACnC;AACA;AACA;AACA;AACA,OAAO,SAASC,MAAMA,CAACC,KAAK,EAAEC,GAAG,EAAEC,GAAG,EAAE;EACpC,OAAO,OAAOF,KAAK,KAAK,QAAQ,IAAIH,iBAAiB,CAACG,KAAK,EAAE;IAAEC,GAAG;IAAEC;EAAI,CAAC,CAAC;AAC9E;AACA;AACA;AACA;AACA;AACA,OAAO,SAASC,MAAMA,CAACF,GAAG,EAAEC,GAAG,EAAEE,iBAAiB,EAAE;EAChD,OAAOR,UAAU,CAAC;IACdS,IAAI,EAAEP,SAAS;IACfQ,WAAW,EAAE,CAACL,GAAG,EAAEC,GAAG,CAAC;IACvBK,SAAS,EAAE;MACPC,QAAQ,EAAEA,CAACR,KAAK,EAAES,IAAI,KAAKV,MAAM,CAACC,KAAK,EAAES,IAAI,KAAK,IAAI,IAAIA,IAAI,KAAK,KAAK,CAAC,GAAG,KAAK,CAAC,GAAGA,IAAI,CAACH,WAAW,CAAC,CAAC,CAAC,EAAEG,IAAI,KAAK,IAAI,IAAIA,IAAI,KAAK,KAAK,CAAC,GAAG,KAAK,CAAC,GAAGA,IAAI,CAACH,WAAW,CAAC,CAAC,CAAC,CAAC;MAC1KI,cAAc,EAAEf,YAAY,CAAC,CAACgB,UAAU,EAAEF,IAAI,KAAK;QAC/C,MAAMG,WAAW,GAAG,CAACH,IAAI,KAAK,IAAI,IAAIA,IAAI,KAAK,KAAK,CAAC,GAAG,KAAK,CAAC,GAAGA,IAAI,CAACH,WAAW,CAAC,CAAC,CAAC,MAAM,IAAI,IAAI,CAACG,IAAI,KAAK,IAAI,IAAIA,IAAI,KAAK,KAAK,CAAC,GAAG,KAAK,CAAC,GAAGA,IAAI,CAACH,WAAW,CAAC,CAAC,CAAC,MAAMO,SAAS;QACjL,MAAMC,WAAW,GAAG,CAACL,IAAI,KAAK,IAAI,IAAIA,IAAI,KAAK,KAAK,CAAC,GAAG,KAAK,CAAC,GAAGA,IAAI,CAACH,WAAW,CAAC,CAAC,CAAC,MAAM,IAAI,IAAI,CAACG,IAAI,KAAK,IAAI,IAAIA,IAAI,KAAK,KAAK,CAAC,GAAG,KAAK,CAAC,GAAGA,IAAI,CAACH,WAAW,CAAC,CAAC,CAAC,MAAMO,SAAS;QACjL,IAAID,WAAW,KAAK,CAACH,IAAI,CAACT,KAAK,IAAIS,IAAI,CAACT,KAAK,CAACD,MAAM,IAAIU,IAAI,KAAK,IAAI,IAAIA,IAAI,KAAK,KAAK,CAAC,GAAG,KAAK,CAAC,GAAGA,IAAI,CAACH,WAAW,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE;UACvH,OAAOK,UAAU,GAAG,mEAAmE;QAC3F,CAAC,MACI,IAAIG,WAAW,IAAIL,IAAI,CAACT,KAAK,CAACD,MAAM,IAAIU,IAAI,KAAK,IAAI,IAAIA,IAAI,KAAK,KAAK,CAAC,GAAG,KAAK,CAAC,GAAGA,IAAI,CAACH,WAAW,CAAC,CAAC,CAAC,CAAC,EAAE;UAC3G,OAAOK,UAAU,GAAG,oEAAoE;QAC5F;QACA,OAAQA,UAAU,GACd,6GAA6G;MACrH,CAAC,EAAEP,iBAAiB;IACxB;EACJ,CAAC,EAAEA,iBAAiB,CAAC;AACzB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}