{"ast":null,"code":"\"use strict\";\n\nvar _asyncToGenerator = require(\"C:/Users/salim/Dev/avans-nx-workshop-2024/avans-nx-workshop/node_modules/@babel/runtime/helpers/asyncToGenerator.js\").default;\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.ExternalContextCreator = void 0;\nconst common_1 = require(\"@nestjs/common\");\nconst constants_1 = require(\"@nestjs/common/constants\");\nconst shared_utils_1 = require(\"@nestjs/common/utils/shared.utils\");\nconst rxjs_1 = require(\"rxjs\");\nconst external_exception_filter_context_1 = require(\"../exceptions/external-exception-filter-context\");\nconst constants_2 = require(\"../guards/constants\");\nconst guards_1 = require(\"../guards\");\nconst constants_3 = require(\"../injector/constants\");\nconst interceptors_1 = require(\"../interceptors\");\nconst pipes_1 = require(\"../pipes\");\nconst context_utils_1 = require(\"./context-utils\");\nconst external_proxy_1 = require(\"./external-proxy\");\nconst handler_metadata_storage_1 = require(\"./handler-metadata-storage\");\nclass ExternalContextCreator {\n  constructor(guardsContextCreator, guardsConsumer, interceptorsContextCreator, interceptorsConsumer, modulesContainer, pipesContextCreator, pipesConsumer, filtersContextCreator) {\n    this.guardsContextCreator = guardsContextCreator;\n    this.guardsConsumer = guardsConsumer;\n    this.interceptorsContextCreator = interceptorsContextCreator;\n    this.interceptorsConsumer = interceptorsConsumer;\n    this.modulesContainer = modulesContainer;\n    this.pipesContextCreator = pipesContextCreator;\n    this.pipesConsumer = pipesConsumer;\n    this.filtersContextCreator = filtersContextCreator;\n    this.contextUtils = new context_utils_1.ContextUtils();\n    this.externalErrorProxy = new external_proxy_1.ExternalErrorProxy();\n    this.handlerMetadataStorage = new handler_metadata_storage_1.HandlerMetadataStorage();\n  }\n  static fromContainer(container) {\n    const guardsContextCreator = new guards_1.GuardsContextCreator(container, container.applicationConfig);\n    const guardsConsumer = new guards_1.GuardsConsumer();\n    const interceptorsContextCreator = new interceptors_1.InterceptorsContextCreator(container, container.applicationConfig);\n    const interceptorsConsumer = new interceptors_1.InterceptorsConsumer();\n    const pipesContextCreator = new pipes_1.PipesContextCreator(container, container.applicationConfig);\n    const pipesConsumer = new pipes_1.PipesConsumer();\n    const filtersContextCreator = new external_exception_filter_context_1.ExternalExceptionFilterContext(container, container.applicationConfig);\n    const externalContextCreator = new ExternalContextCreator(guardsContextCreator, guardsConsumer, interceptorsContextCreator, interceptorsConsumer, container.getModules(), pipesContextCreator, pipesConsumer, filtersContextCreator);\n    externalContextCreator.container = container;\n    return externalContextCreator;\n  }\n  create(instance, callback, methodName, metadataKey, paramsFactory, contextId = constants_3.STATIC_CONTEXT, inquirerId, options = {\n    interceptors: true,\n    guards: true,\n    filters: true\n  }, contextType = 'http') {\n    var _this = this;\n    const module = this.getContextModuleKey(instance.constructor);\n    const {\n      argsLength,\n      paramtypes,\n      getParamsMetadata\n    } = this.getMetadata(instance, methodName, metadataKey, paramsFactory, contextType);\n    const pipes = this.pipesContextCreator.create(instance, callback, module, contextId, inquirerId);\n    const guards = this.guardsContextCreator.create(instance, callback, module, contextId, inquirerId);\n    const exceptionFilter = this.filtersContextCreator.create(instance, callback, module, contextId, inquirerId);\n    const interceptors = options.interceptors ? this.interceptorsContextCreator.create(instance, callback, module, contextId, inquirerId) : [];\n    const paramsMetadata = getParamsMetadata(module, contextId, inquirerId);\n    const paramsOptions = paramsMetadata ? this.contextUtils.mergeParamsMetatypes(paramsMetadata, paramtypes) : [];\n    const fnCanActivate = options.guards ? this.createGuardsFn(guards, instance, callback, contextType) : null;\n    const fnApplyPipes = this.createPipesFn(pipes, paramsOptions);\n    const handler = (initialArgs, ...args) => /*#__PURE__*/_asyncToGenerator(function* () {\n      if (fnApplyPipes) {\n        yield fnApplyPipes(initialArgs, ...args);\n        return callback.apply(instance, initialArgs);\n      }\n      return callback.apply(instance, args);\n    });\n    const target = /*#__PURE__*/function () {\n      var _ref2 = _asyncToGenerator(function* (...args) {\n        const initialArgs = _this.contextUtils.createNullArray(argsLength);\n        fnCanActivate && (yield fnCanActivate(args));\n        const result = yield _this.interceptorsConsumer.intercept(interceptors, args, instance, callback, handler(initialArgs, ...args), contextType);\n        return _this.transformToResult(result);\n      });\n      return function target() {\n        return _ref2.apply(this, arguments);\n      };\n    }();\n    return options.filters ? this.externalErrorProxy.createProxy(target, exceptionFilter, contextType) : target;\n  }\n  getMetadata(instance, methodName, metadataKey, paramsFactory, contextType) {\n    const cacheMetadata = this.handlerMetadataStorage.get(instance, methodName);\n    if (cacheMetadata) {\n      return cacheMetadata;\n    }\n    const metadata = this.contextUtils.reflectCallbackMetadata(instance, methodName, metadataKey || '') || {};\n    const keys = Object.keys(metadata);\n    const argsLength = this.contextUtils.getArgumentsLength(keys, metadata);\n    const paramtypes = this.contextUtils.reflectCallbackParamtypes(instance, methodName);\n    const contextFactory = this.contextUtils.getContextFactory(contextType, instance, instance[methodName]);\n    const getParamsMetadata = (moduleKey, contextId = constants_3.STATIC_CONTEXT, inquirerId) => paramsFactory ? this.exchangeKeysForValues(keys, metadata, moduleKey, paramsFactory, contextId, inquirerId, contextFactory) : null;\n    const handlerMetadata = {\n      argsLength,\n      paramtypes,\n      getParamsMetadata\n    };\n    this.handlerMetadataStorage.set(instance, methodName, handlerMetadata);\n    return handlerMetadata;\n  }\n  getContextModuleKey(moduleCtor) {\n    const emptyModuleKey = '';\n    if (!moduleCtor) {\n      return emptyModuleKey;\n    }\n    const moduleContainerEntries = this.modulesContainer.entries();\n    for (const [key, moduleRef] of moduleContainerEntries) {\n      if (moduleRef.hasProvider(moduleCtor)) {\n        return key;\n      }\n    }\n    return emptyModuleKey;\n  }\n  exchangeKeysForValues(keys, metadata, moduleContext, paramsFactory, contextId = constants_3.STATIC_CONTEXT, inquirerId, contextFactory = this.contextUtils.getContextFactory('http')) {\n    this.pipesContextCreator.setModuleContext(moduleContext);\n    return keys.map(key => {\n      const {\n        index,\n        data,\n        pipes: pipesCollection\n      } = metadata[key];\n      const pipes = this.pipesContextCreator.createConcreteContext(pipesCollection, contextId, inquirerId);\n      const type = this.contextUtils.mapParamType(key);\n      if (key.includes(constants_1.CUSTOM_ROUTE_ARGS_METADATA)) {\n        const {\n          factory\n        } = metadata[key];\n        const customExtractValue = this.contextUtils.getCustomFactory(factory, data, contextFactory);\n        return {\n          index,\n          extractValue: customExtractValue,\n          type,\n          data,\n          pipes\n        };\n      }\n      const numericType = Number(type);\n      const extractValue = (...args) => paramsFactory.exchangeKeyForValue(numericType, data, args);\n      return {\n        index,\n        extractValue,\n        type: numericType,\n        data,\n        pipes\n      };\n    });\n  }\n  createPipesFn(pipes, paramsOptions) {\n    var _this2 = this;\n    const pipesFn = /*#__PURE__*/function () {\n      var _ref3 = _asyncToGenerator(function* (args, ...params) {\n        const resolveParamValue = /*#__PURE__*/function () {\n          var _ref4 = _asyncToGenerator(function* (param) {\n            const {\n              index,\n              extractValue,\n              type,\n              data,\n              metatype,\n              pipes: paramPipes\n            } = param;\n            const value = extractValue(...params);\n            args[index] = yield _this2.getParamValue(value, {\n              metatype,\n              type,\n              data\n            }, pipes.concat(paramPipes));\n          });\n          return function resolveParamValue(_x2) {\n            return _ref4.apply(this, arguments);\n          };\n        }();\n        yield Promise.all(paramsOptions.map(resolveParamValue));\n      });\n      return function pipesFn(_x) {\n        return _ref3.apply(this, arguments);\n      };\n    }();\n    return paramsOptions.length ? pipesFn : null;\n  }\n  getParamValue(value, {\n    metatype,\n    type,\n    data\n  }, pipes) {\n    var _this3 = this;\n    return _asyncToGenerator(function* () {\n      return (0, shared_utils_1.isEmpty)(pipes) ? value : _this3.pipesConsumer.apply(value, {\n        metatype,\n        type,\n        data\n      }, pipes);\n    })();\n  }\n  transformToResult(resultOrDeferred) {\n    return _asyncToGenerator(function* () {\n      if ((0, rxjs_1.isObservable)(resultOrDeferred)) {\n        return (0, rxjs_1.lastValueFrom)(resultOrDeferred);\n      }\n      return resultOrDeferred;\n    })();\n  }\n  createGuardsFn(guards, instance, callback, contextType) {\n    var _this4 = this;\n    const canActivateFn = /*#__PURE__*/function () {\n      var _ref5 = _asyncToGenerator(function* (args) {\n        const canActivate = yield _this4.guardsConsumer.tryActivate(guards, args, instance, callback, contextType);\n        if (!canActivate) {\n          throw new common_1.ForbiddenException(constants_2.FORBIDDEN_MESSAGE);\n        }\n      });\n      return function canActivateFn(_x3) {\n        return _ref5.apply(this, arguments);\n      };\n    }();\n    return guards.length ? canActivateFn : null;\n  }\n  registerRequestProvider(request, contextId) {\n    this.container.registerRequestProvider(request, contextId);\n  }\n}\nexports.ExternalContextCreator = ExternalContextCreator;","map":{"version":3,"names":["_asyncToGenerator","require","default","Object","defineProperty","exports","value","ExternalContextCreator","common_1","constants_1","shared_utils_1","rxjs_1","external_exception_filter_context_1","constants_2","guards_1","constants_3","interceptors_1","pipes_1","context_utils_1","external_proxy_1","handler_metadata_storage_1","constructor","guardsContextCreator","guardsConsumer","interceptorsContextCreator","interceptorsConsumer","modulesContainer","pipesContextCreator","pipesConsumer","filtersContextCreator","contextUtils","ContextUtils","externalErrorProxy","ExternalErrorProxy","handlerMetadataStorage","HandlerMetadataStorage","fromContainer","container","GuardsContextCreator","applicationConfig","GuardsConsumer","InterceptorsContextCreator","InterceptorsConsumer","PipesContextCreator","PipesConsumer","ExternalExceptionFilterContext","externalContextCreator","getModules","create","instance","callback","methodName","metadataKey","paramsFactory","contextId","STATIC_CONTEXT","inquirerId","options","interceptors","guards","filters","contextType","_this","module","getContextModuleKey","argsLength","paramtypes","getParamsMetadata","getMetadata","pipes","exceptionFilter","paramsMetadata","paramsOptions","mergeParamsMetatypes","fnCanActivate","createGuardsFn","fnApplyPipes","createPipesFn","handler","initialArgs","args","apply","target","_ref2","createNullArray","result","intercept","transformToResult","arguments","createProxy","cacheMetadata","get","metadata","reflectCallbackMetadata","keys","getArgumentsLength","reflectCallbackParamtypes","contextFactory","getContextFactory","moduleKey","exchangeKeysForValues","handlerMetadata","set","moduleCtor","emptyModuleKey","moduleContainerEntries","entries","key","moduleRef","hasProvider","moduleContext","setModuleContext","map","index","data","pipesCollection","createConcreteContext","type","mapParamType","includes","CUSTOM_ROUTE_ARGS_METADATA","factory","customExtractValue","getCustomFactory","extractValue","numericType","Number","exchangeKeyForValue","_this2","pipesFn","_ref3","params","resolveParamValue","_ref4","param","metatype","paramPipes","getParamValue","concat","_x2","Promise","all","_x","length","_this3","isEmpty","resultOrDeferred","isObservable","lastValueFrom","_this4","canActivateFn","_ref5","canActivate","tryActivate","ForbiddenException","FORBIDDEN_MESSAGE","_x3","registerRequestProvider","request"],"sources":["C:/Users/salim/Dev/avans-nx-workshop-2024/avans-nx-workshop/node_modules/@nestjs/core/helpers/external-context-creator.js"],"sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.ExternalContextCreator = void 0;\nconst common_1 = require(\"@nestjs/common\");\nconst constants_1 = require(\"@nestjs/common/constants\");\nconst shared_utils_1 = require(\"@nestjs/common/utils/shared.utils\");\nconst rxjs_1 = require(\"rxjs\");\nconst external_exception_filter_context_1 = require(\"../exceptions/external-exception-filter-context\");\nconst constants_2 = require(\"../guards/constants\");\nconst guards_1 = require(\"../guards\");\nconst constants_3 = require(\"../injector/constants\");\nconst interceptors_1 = require(\"../interceptors\");\nconst pipes_1 = require(\"../pipes\");\nconst context_utils_1 = require(\"./context-utils\");\nconst external_proxy_1 = require(\"./external-proxy\");\nconst handler_metadata_storage_1 = require(\"./handler-metadata-storage\");\nclass ExternalContextCreator {\n    constructor(guardsContextCreator, guardsConsumer, interceptorsContextCreator, interceptorsConsumer, modulesContainer, pipesContextCreator, pipesConsumer, filtersContextCreator) {\n        this.guardsContextCreator = guardsContextCreator;\n        this.guardsConsumer = guardsConsumer;\n        this.interceptorsContextCreator = interceptorsContextCreator;\n        this.interceptorsConsumer = interceptorsConsumer;\n        this.modulesContainer = modulesContainer;\n        this.pipesContextCreator = pipesContextCreator;\n        this.pipesConsumer = pipesConsumer;\n        this.filtersContextCreator = filtersContextCreator;\n        this.contextUtils = new context_utils_1.ContextUtils();\n        this.externalErrorProxy = new external_proxy_1.ExternalErrorProxy();\n        this.handlerMetadataStorage = new handler_metadata_storage_1.HandlerMetadataStorage();\n    }\n    static fromContainer(container) {\n        const guardsContextCreator = new guards_1.GuardsContextCreator(container, container.applicationConfig);\n        const guardsConsumer = new guards_1.GuardsConsumer();\n        const interceptorsContextCreator = new interceptors_1.InterceptorsContextCreator(container, container.applicationConfig);\n        const interceptorsConsumer = new interceptors_1.InterceptorsConsumer();\n        const pipesContextCreator = new pipes_1.PipesContextCreator(container, container.applicationConfig);\n        const pipesConsumer = new pipes_1.PipesConsumer();\n        const filtersContextCreator = new external_exception_filter_context_1.ExternalExceptionFilterContext(container, container.applicationConfig);\n        const externalContextCreator = new ExternalContextCreator(guardsContextCreator, guardsConsumer, interceptorsContextCreator, interceptorsConsumer, container.getModules(), pipesContextCreator, pipesConsumer, filtersContextCreator);\n        externalContextCreator.container = container;\n        return externalContextCreator;\n    }\n    create(instance, callback, methodName, metadataKey, paramsFactory, contextId = constants_3.STATIC_CONTEXT, inquirerId, options = {\n        interceptors: true,\n        guards: true,\n        filters: true,\n    }, contextType = 'http') {\n        const module = this.getContextModuleKey(instance.constructor);\n        const { argsLength, paramtypes, getParamsMetadata } = this.getMetadata(instance, methodName, metadataKey, paramsFactory, contextType);\n        const pipes = this.pipesContextCreator.create(instance, callback, module, contextId, inquirerId);\n        const guards = this.guardsContextCreator.create(instance, callback, module, contextId, inquirerId);\n        const exceptionFilter = this.filtersContextCreator.create(instance, callback, module, contextId, inquirerId);\n        const interceptors = options.interceptors\n            ? this.interceptorsContextCreator.create(instance, callback, module, contextId, inquirerId)\n            : [];\n        const paramsMetadata = getParamsMetadata(module, contextId, inquirerId);\n        const paramsOptions = paramsMetadata\n            ? this.contextUtils.mergeParamsMetatypes(paramsMetadata, paramtypes)\n            : [];\n        const fnCanActivate = options.guards\n            ? this.createGuardsFn(guards, instance, callback, contextType)\n            : null;\n        const fnApplyPipes = this.createPipesFn(pipes, paramsOptions);\n        const handler = (initialArgs, ...args) => async () => {\n            if (fnApplyPipes) {\n                await fnApplyPipes(initialArgs, ...args);\n                return callback.apply(instance, initialArgs);\n            }\n            return callback.apply(instance, args);\n        };\n        const target = async (...args) => {\n            const initialArgs = this.contextUtils.createNullArray(argsLength);\n            fnCanActivate && (await fnCanActivate(args));\n            const result = await this.interceptorsConsumer.intercept(interceptors, args, instance, callback, handler(initialArgs, ...args), contextType);\n            return this.transformToResult(result);\n        };\n        return options.filters\n            ? this.externalErrorProxy.createProxy(target, exceptionFilter, contextType)\n            : target;\n    }\n    getMetadata(instance, methodName, metadataKey, paramsFactory, contextType) {\n        const cacheMetadata = this.handlerMetadataStorage.get(instance, methodName);\n        if (cacheMetadata) {\n            return cacheMetadata;\n        }\n        const metadata = this.contextUtils.reflectCallbackMetadata(instance, methodName, metadataKey || '') || {};\n        const keys = Object.keys(metadata);\n        const argsLength = this.contextUtils.getArgumentsLength(keys, metadata);\n        const paramtypes = this.contextUtils.reflectCallbackParamtypes(instance, methodName);\n        const contextFactory = this.contextUtils.getContextFactory(contextType, instance, instance[methodName]);\n        const getParamsMetadata = (moduleKey, contextId = constants_3.STATIC_CONTEXT, inquirerId) => paramsFactory\n            ? this.exchangeKeysForValues(keys, metadata, moduleKey, paramsFactory, contextId, inquirerId, contextFactory)\n            : null;\n        const handlerMetadata = {\n            argsLength,\n            paramtypes,\n            getParamsMetadata,\n        };\n        this.handlerMetadataStorage.set(instance, methodName, handlerMetadata);\n        return handlerMetadata;\n    }\n    getContextModuleKey(moduleCtor) {\n        const emptyModuleKey = '';\n        if (!moduleCtor) {\n            return emptyModuleKey;\n        }\n        const moduleContainerEntries = this.modulesContainer.entries();\n        for (const [key, moduleRef] of moduleContainerEntries) {\n            if (moduleRef.hasProvider(moduleCtor)) {\n                return key;\n            }\n        }\n        return emptyModuleKey;\n    }\n    exchangeKeysForValues(keys, metadata, moduleContext, paramsFactory, contextId = constants_3.STATIC_CONTEXT, inquirerId, contextFactory = this.contextUtils.getContextFactory('http')) {\n        this.pipesContextCreator.setModuleContext(moduleContext);\n        return keys.map(key => {\n            const { index, data, pipes: pipesCollection } = metadata[key];\n            const pipes = this.pipesContextCreator.createConcreteContext(pipesCollection, contextId, inquirerId);\n            const type = this.contextUtils.mapParamType(key);\n            if (key.includes(constants_1.CUSTOM_ROUTE_ARGS_METADATA)) {\n                const { factory } = metadata[key];\n                const customExtractValue = this.contextUtils.getCustomFactory(factory, data, contextFactory);\n                return { index, extractValue: customExtractValue, type, data, pipes };\n            }\n            const numericType = Number(type);\n            const extractValue = (...args) => paramsFactory.exchangeKeyForValue(numericType, data, args);\n            return { index, extractValue, type: numericType, data, pipes };\n        });\n    }\n    createPipesFn(pipes, paramsOptions) {\n        const pipesFn = async (args, ...params) => {\n            const resolveParamValue = async (param) => {\n                const { index, extractValue, type, data, metatype, pipes: paramPipes, } = param;\n                const value = extractValue(...params);\n                args[index] = await this.getParamValue(value, { metatype, type, data }, pipes.concat(paramPipes));\n            };\n            await Promise.all(paramsOptions.map(resolveParamValue));\n        };\n        return paramsOptions.length ? pipesFn : null;\n    }\n    async getParamValue(value, { metatype, type, data }, pipes) {\n        return (0, shared_utils_1.isEmpty)(pipes)\n            ? value\n            : this.pipesConsumer.apply(value, { metatype, type, data }, pipes);\n    }\n    async transformToResult(resultOrDeferred) {\n        if ((0, rxjs_1.isObservable)(resultOrDeferred)) {\n            return (0, rxjs_1.lastValueFrom)(resultOrDeferred);\n        }\n        return resultOrDeferred;\n    }\n    createGuardsFn(guards, instance, callback, contextType) {\n        const canActivateFn = async (args) => {\n            const canActivate = await this.guardsConsumer.tryActivate(guards, args, instance, callback, contextType);\n            if (!canActivate) {\n                throw new common_1.ForbiddenException(constants_2.FORBIDDEN_MESSAGE);\n            }\n        };\n        return guards.length ? canActivateFn : null;\n    }\n    registerRequestProvider(request, contextId) {\n        this.container.registerRequestProvider(request, contextId);\n    }\n}\nexports.ExternalContextCreator = ExternalContextCreator;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}