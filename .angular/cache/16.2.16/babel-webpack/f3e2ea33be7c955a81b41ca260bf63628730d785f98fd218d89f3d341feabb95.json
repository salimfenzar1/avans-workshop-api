{"ast":null,"code":"\"use strict\";\n\nvar _asyncToGenerator = require(\"C:/Users/salim/Dev/avans-nx-workshop-2024/avans-nx-workshop/node_modules/@babel/runtime/helpers/asyncToGenerator.js\").default;\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.ParseIntPipe = void 0;\nconst tslib_1 = require(\"tslib\");\nconst injectable_decorator_1 = require(\"../decorators/core/injectable.decorator\");\nconst optional_decorator_1 = require(\"../decorators/core/optional.decorator\");\nconst http_status_enum_1 = require(\"../enums/http-status.enum\");\nconst http_error_by_code_util_1 = require(\"../utils/http-error-by-code.util\");\nconst shared_utils_1 = require(\"../utils/shared.utils\");\n/**\n * Defines the built-in ParseInt Pipe\n *\n * @see [Built-in Pipes](https://docs.nestjs.com/pipes#built-in-pipes)\n *\n * @publicApi\n */\nlet ParseIntPipe = class ParseIntPipe {\n  constructor(options) {\n    this.options = options;\n    options = options || {};\n    const {\n      exceptionFactory,\n      errorHttpStatusCode = http_status_enum_1.HttpStatus.BAD_REQUEST\n    } = options;\n    this.exceptionFactory = exceptionFactory || (error => new http_error_by_code_util_1.HttpErrorByCode[errorHttpStatusCode](error));\n  }\n  /**\n   * Method that accesses and performs optional transformation on argument for\n   * in-flight requests.\n   *\n   * @param value currently processed route argument\n   * @param metadata contains metadata about the currently processed route argument\n   */\n  transform(value, metadata) {\n    var _this = this;\n    return _asyncToGenerator(function* () {\n      if ((0, shared_utils_1.isNil)(value) && _this.options?.optional) {\n        return value;\n      }\n      if (!_this.isNumeric(value)) {\n        throw _this.exceptionFactory('Validation failed (numeric string is expected)');\n      }\n      return parseInt(value, 10);\n    })();\n  }\n  /**\n   * @param value currently processed route argument\n   * @returns `true` if `value` is a valid integer number\n   */\n  isNumeric(value) {\n    return ['string', 'number'].includes(typeof value) && /^-?\\d+$/.test(value) && isFinite(value);\n  }\n};\nexports.ParseIntPipe = ParseIntPipe;\nexports.ParseIntPipe = ParseIntPipe = tslib_1.__decorate([(0, injectable_decorator_1.Injectable)(), tslib_1.__param(0, (0, optional_decorator_1.Optional)()), tslib_1.__metadata(\"design:paramtypes\", [Object])], ParseIntPipe);","map":{"version":3,"names":["_asyncToGenerator","require","default","Object","defineProperty","exports","value","ParseIntPipe","tslib_1","injectable_decorator_1","optional_decorator_1","http_status_enum_1","http_error_by_code_util_1","shared_utils_1","constructor","options","exceptionFactory","errorHttpStatusCode","HttpStatus","BAD_REQUEST","error","HttpErrorByCode","transform","metadata","_this","isNil","optional","isNumeric","parseInt","includes","test","isFinite","__decorate","Injectable","__param","Optional","__metadata"],"sources":["C:/Users/salim/Dev/avans-nx-workshop-2024/avans-nx-workshop/node_modules/@nestjs/common/pipes/parse-int.pipe.js"],"sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.ParseIntPipe = void 0;\nconst tslib_1 = require(\"tslib\");\nconst injectable_decorator_1 = require(\"../decorators/core/injectable.decorator\");\nconst optional_decorator_1 = require(\"../decorators/core/optional.decorator\");\nconst http_status_enum_1 = require(\"../enums/http-status.enum\");\nconst http_error_by_code_util_1 = require(\"../utils/http-error-by-code.util\");\nconst shared_utils_1 = require(\"../utils/shared.utils\");\n/**\n * Defines the built-in ParseInt Pipe\n *\n * @see [Built-in Pipes](https://docs.nestjs.com/pipes#built-in-pipes)\n *\n * @publicApi\n */\nlet ParseIntPipe = class ParseIntPipe {\n    constructor(options) {\n        this.options = options;\n        options = options || {};\n        const { exceptionFactory, errorHttpStatusCode = http_status_enum_1.HttpStatus.BAD_REQUEST } = options;\n        this.exceptionFactory =\n            exceptionFactory ||\n                (error => new http_error_by_code_util_1.HttpErrorByCode[errorHttpStatusCode](error));\n    }\n    /**\n     * Method that accesses and performs optional transformation on argument for\n     * in-flight requests.\n     *\n     * @param value currently processed route argument\n     * @param metadata contains metadata about the currently processed route argument\n     */\n    async transform(value, metadata) {\n        if ((0, shared_utils_1.isNil)(value) && this.options?.optional) {\n            return value;\n        }\n        if (!this.isNumeric(value)) {\n            throw this.exceptionFactory('Validation failed (numeric string is expected)');\n        }\n        return parseInt(value, 10);\n    }\n    /**\n     * @param value currently processed route argument\n     * @returns `true` if `value` is a valid integer number\n     */\n    isNumeric(value) {\n        return (['string', 'number'].includes(typeof value) &&\n            /^-?\\d+$/.test(value) &&\n            isFinite(value));\n    }\n};\nexports.ParseIntPipe = ParseIntPipe;\nexports.ParseIntPipe = ParseIntPipe = tslib_1.__decorate([\n    (0, injectable_decorator_1.Injectable)(),\n    tslib_1.__param(0, (0, optional_decorator_1.Optional)()),\n    tslib_1.__metadata(\"design:paramtypes\", [Object])\n], ParseIntPipe);\n"],"mappings":"AAAA,YAAY;;AAAC,IAAAA,iBAAA,GAAAC,OAAA,wHAAAC,OAAA;AACbC,MAAM,CAACC,cAAc,CAACC,OAAO,EAAE,YAAY,EAAE;EAAEC,KAAK,EAAE;AAAK,CAAC,CAAC;AAC7DD,OAAO,CAACE,YAAY,GAAG,KAAK,CAAC;AAC7B,MAAMC,OAAO,GAAGP,OAAO,CAAC,OAAO,CAAC;AAChC,MAAMQ,sBAAsB,GAAGR,OAAO,CAAC,yCAAyC,CAAC;AACjF,MAAMS,oBAAoB,GAAGT,OAAO,CAAC,uCAAuC,CAAC;AAC7E,MAAMU,kBAAkB,GAAGV,OAAO,CAAC,2BAA2B,CAAC;AAC/D,MAAMW,yBAAyB,GAAGX,OAAO,CAAC,kCAAkC,CAAC;AAC7E,MAAMY,cAAc,GAAGZ,OAAO,CAAC,uBAAuB,CAAC;AACvD;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAIM,YAAY,GAAG,MAAMA,YAAY,CAAC;EAClCO,WAAWA,CAACC,OAAO,EAAE;IACjB,IAAI,CAACA,OAAO,GAAGA,OAAO;IACtBA,OAAO,GAAGA,OAAO,IAAI,CAAC,CAAC;IACvB,MAAM;MAAEC,gBAAgB;MAAEC,mBAAmB,GAAGN,kBAAkB,CAACO,UAAU,CAACC;IAAY,CAAC,GAAGJ,OAAO;IACrG,IAAI,CAACC,gBAAgB,GACjBA,gBAAgB,KACXI,KAAK,IAAI,IAAIR,yBAAyB,CAACS,eAAe,CAACJ,mBAAmB,CAAC,CAACG,KAAK,CAAC,CAAC;EAChG;EACA;AACJ;AACA;AACA;AACA;AACA;AACA;EACUE,SAASA,CAAChB,KAAK,EAAEiB,QAAQ,EAAE;IAAA,IAAAC,KAAA;IAAA,OAAAxB,iBAAA;MAC7B,IAAI,CAAC,CAAC,EAAEa,cAAc,CAACY,KAAK,EAAEnB,KAAK,CAAC,IAAIkB,KAAI,CAACT,OAAO,EAAEW,QAAQ,EAAE;QAC5D,OAAOpB,KAAK;MAChB;MACA,IAAI,CAACkB,KAAI,CAACG,SAAS,CAACrB,KAAK,CAAC,EAAE;QACxB,MAAMkB,KAAI,CAACR,gBAAgB,CAAC,gDAAgD,CAAC;MACjF;MACA,OAAOY,QAAQ,CAACtB,KAAK,EAAE,EAAE,CAAC;IAAC;EAC/B;EACA;AACJ;AACA;AACA;EACIqB,SAASA,CAACrB,KAAK,EAAE;IACb,OAAQ,CAAC,QAAQ,EAAE,QAAQ,CAAC,CAACuB,QAAQ,CAAC,OAAOvB,KAAK,CAAC,IAC/C,SAAS,CAACwB,IAAI,CAACxB,KAAK,CAAC,IACrByB,QAAQ,CAACzB,KAAK,CAAC;EACvB;AACJ,CAAC;AACDD,OAAO,CAACE,YAAY,GAAGA,YAAY;AACnCF,OAAO,CAACE,YAAY,GAAGA,YAAY,GAAGC,OAAO,CAACwB,UAAU,CAAC,CACrD,CAAC,CAAC,EAAEvB,sBAAsB,CAACwB,UAAU,EAAE,CAAC,EACxCzB,OAAO,CAAC0B,OAAO,CAAC,CAAC,EAAE,CAAC,CAAC,EAAExB,oBAAoB,CAACyB,QAAQ,EAAE,CAAC,CAAC,EACxD3B,OAAO,CAAC4B,UAAU,CAAC,mBAAmB,EAAE,CAACjC,MAAM,CAAC,CAAC,CACpD,EAAEI,YAAY,CAAC","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}