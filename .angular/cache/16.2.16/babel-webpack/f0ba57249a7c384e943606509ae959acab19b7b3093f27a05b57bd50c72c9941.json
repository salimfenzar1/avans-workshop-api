{"ast":null,"code":"import { buildMessage, ValidateBy } from '../common/ValidateBy';\nexport const IS_FIREBASE_PUSH_ID = 'IsFirebasePushId';\n/**\n * Checks if the string is a Firebase Push Id\n * If given value is not a Firebase Push Id, it returns false\n */\nexport function isFirebasePushId(value) {\n  const webSafeRegex = /^[a-zA-Z0-9_-]*$/;\n  return typeof value === 'string' && value.length === 20 && webSafeRegex.test(value);\n}\n/**\n * Checks if the string is a Firebase Push Id\n * If given value is not a Firebase Push Id, it returns false\n */\nexport function IsFirebasePushId(validationOptions) {\n  return ValidateBy({\n    name: IS_FIREBASE_PUSH_ID,\n    validator: {\n      validate: (value, args) => isFirebasePushId(value),\n      defaultMessage: buildMessage(eachPrefix => eachPrefix + '$property must be a Firebase Push Id', validationOptions)\n    }\n  }, validationOptions);\n}","map":{"version":3,"names":["buildMessage","ValidateBy","IS_FIREBASE_PUSH_ID","isFirebasePushId","value","webSafeRegex","length","test","IsFirebasePushId","validationOptions","name","validator","validate","args","defaultMessage","eachPrefix"],"sources":["C:/Users/salim/Dev/avans-nx-workshop-2024/avans-nx-workshop/node_modules/class-validator/esm2015/decorator/string/IsFirebasePushId.js"],"sourcesContent":["import { buildMessage, ValidateBy } from '../common/ValidateBy';\nexport const IS_FIREBASE_PUSH_ID = 'IsFirebasePushId';\n/**\n * Checks if the string is a Firebase Push Id\n * If given value is not a Firebase Push Id, it returns false\n */\nexport function isFirebasePushId(value) {\n    const webSafeRegex = /^[a-zA-Z0-9_-]*$/;\n    return typeof value === 'string' && value.length === 20 && webSafeRegex.test(value);\n}\n/**\n * Checks if the string is a Firebase Push Id\n * If given value is not a Firebase Push Id, it returns false\n */\nexport function IsFirebasePushId(validationOptions) {\n    return ValidateBy({\n        name: IS_FIREBASE_PUSH_ID,\n        validator: {\n            validate: (value, args) => isFirebasePushId(value),\n            defaultMessage: buildMessage(eachPrefix => eachPrefix + '$property must be a Firebase Push Id', validationOptions),\n        },\n    }, validationOptions);\n}\n"],"mappings":"AAAA,SAASA,YAAY,EAAEC,UAAU,QAAQ,sBAAsB;AAC/D,OAAO,MAAMC,mBAAmB,GAAG,kBAAkB;AACrD;AACA;AACA;AACA;AACA,OAAO,SAASC,gBAAgBA,CAACC,KAAK,EAAE;EACpC,MAAMC,YAAY,GAAG,kBAAkB;EACvC,OAAO,OAAOD,KAAK,KAAK,QAAQ,IAAIA,KAAK,CAACE,MAAM,KAAK,EAAE,IAAID,YAAY,CAACE,IAAI,CAACH,KAAK,CAAC;AACvF;AACA;AACA;AACA;AACA;AACA,OAAO,SAASI,gBAAgBA,CAACC,iBAAiB,EAAE;EAChD,OAAOR,UAAU,CAAC;IACdS,IAAI,EAAER,mBAAmB;IACzBS,SAAS,EAAE;MACPC,QAAQ,EAAEA,CAACR,KAAK,EAAES,IAAI,KAAKV,gBAAgB,CAACC,KAAK,CAAC;MAClDU,cAAc,EAAEd,YAAY,CAACe,UAAU,IAAIA,UAAU,GAAG,sCAAsC,EAAEN,iBAAiB;IACrH;EACJ,CAAC,EAAEA,iBAAiB,CAAC;AACzB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}