{"ast":null,"code":"import { AuthService } from '@avans-nx-workshop/features';\nimport { Router } from '@angular/router';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@avans-nx-workshop/features\";\nimport * as i2 from \"@angular/router\";\nimport * as i3 from \"@angular/common\";\nimport * as i4 from \"@angular/forms\";\nfunction LoginComponent_div_14_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 11);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", ctx_r0.errorMessage, \" \");\n  }\n}\nexport class LoginComponent {\n  constructor(authService, router) {\n    this.authService = authService;\n    this.router = router;\n    this.credentials = {\n      emailAddress: '',\n      password: ''\n    };\n    this.errorMessage = null;\n  }\n  login() {\n    this.authService.login(this.credentials).subscribe({\n      next: user => {\n        console.log('Login successful', user);\n        if (user.token) {\n          localStorage.setItem('token', user.token);\n          this.router.navigate(['/']);\n        } else {\n          console.error('No token returned from login.');\n          this.errorMessage = 'Login failed. Please try again.';\n        }\n      },\n      error: err => {\n        this.errorMessage = 'Invalid email or password';\n        console.error('Login error', err);\n      }\n    });\n  }\n  static {\n    this.ɵfac = function LoginComponent_Factory(t) {\n      return new (t || LoginComponent)(i0.ɵɵdirectiveInject(i1.AuthService), i0.ɵɵdirectiveInject(i2.Router));\n    };\n  }\n  static {\n    this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n      type: LoginComponent,\n      selectors: [[\"app-login\"]],\n      decls: 15,\n      vars: 3,\n      consts: [[1, \"login-container\", \"d-flex\", \"justify-content-center\", \"align-items-center\", \"vh-70\"], [1, \"card\", \"p-4\", 2, \"width\", \"400px\"], [1, \"text-center\", \"mb-4\"], [3, \"ngSubmit\"], [1, \"form-group\", \"mb-3\"], [\"id\", \"emailAddress\", \"type\", \"email\", \"placeholder\", \"Email Address\", \"name\", \"emailAddress\", \"required\", \"\", 1, \"form-control\", 3, \"ngModel\", \"ngModelChange\"], [\"id\", \"password\", \"type\", \"password\", \"placeholder\", \"Password\", \"name\", \"password\", \"required\", \"\", 1, \"form-control\", 3, \"ngModel\", \"ngModelChange\"], [\"type\", \"submit\", 1, \"btn\", \"btn-primary\", \"w-100\", \"mb-3\"], [1, \"text-center\"], [\"routerLink\", \"/register\", 1, \"text-decoration-none\"], [\"class\", \"error-message text-danger mt-3 text-center\", 4, \"ngIf\"], [1, \"error-message\", \"text-danger\", \"mt-3\", \"text-center\"]],\n      template: function LoginComponent_Template(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵelementStart(0, \"div\", 0)(1, \"div\", 1)(2, \"h3\", 2);\n          i0.ɵɵtext(3, \"Login\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(4, \"form\", 3);\n          i0.ɵɵlistener(\"ngSubmit\", function LoginComponent_Template_form_ngSubmit_4_listener() {\n            return ctx.login();\n          });\n          i0.ɵɵelementStart(5, \"div\", 4)(6, \"input\", 5);\n          i0.ɵɵlistener(\"ngModelChange\", function LoginComponent_Template_input_ngModelChange_6_listener($event) {\n            return ctx.credentials.emailAddress = $event;\n          });\n          i0.ɵɵelementEnd()();\n          i0.ɵɵelementStart(7, \"div\", 4)(8, \"input\", 6);\n          i0.ɵɵlistener(\"ngModelChange\", function LoginComponent_Template_input_ngModelChange_8_listener($event) {\n            return ctx.credentials.password = $event;\n          });\n          i0.ɵɵelementEnd()();\n          i0.ɵɵelementStart(9, \"button\", 7);\n          i0.ɵɵtext(10, \"Login\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(11, \"div\", 8)(12, \"a\", 9);\n          i0.ɵɵtext(13, \"Don't have an account? Register\");\n          i0.ɵɵelementEnd()()();\n          i0.ɵɵtemplate(14, LoginComponent_div_14_Template, 2, 1, \"div\", 10);\n          i0.ɵɵelementEnd()();\n        }\n        if (rf & 2) {\n          i0.ɵɵadvance(6);\n          i0.ɵɵproperty(\"ngModel\", ctx.credentials.emailAddress);\n          i0.ɵɵadvance(2);\n          i0.ɵɵproperty(\"ngModel\", ctx.credentials.password);\n          i0.ɵɵadvance(6);\n          i0.ɵɵproperty(\"ngIf\", ctx.errorMessage);\n        }\n      },\n      dependencies: [i3.NgIf, i2.RouterLink, i4.ɵNgNoValidate, i4.DefaultValueAccessor, i4.NgControlStatus, i4.NgControlStatusGroup, i4.RequiredValidator, i4.NgModel, i4.NgForm],\n      encapsulation: 2\n    });\n  }\n}","map":{"version":3,"names":["AuthService","Router","i0","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵadvance","ɵɵtextInterpolate1","ctx_r0","errorMessage","LoginComponent","constructor","authService","router","credentials","emailAddress","password","login","subscribe","next","user","console","log","token","localStorage","setItem","navigate","error","err","ɵɵdirectiveInject","i1","i2","selectors","decls","vars","consts","template","LoginComponent_Template","rf","ctx","ɵɵlistener","LoginComponent_Template_form_ngSubmit_4_listener","LoginComponent_Template_input_ngModelChange_6_listener","$event","LoginComponent_Template_input_ngModelChange_8_listener","ɵɵtemplate","LoginComponent_div_14_Template","ɵɵproperty"],"sources":["C:\\Users\\salim\\Dev\\avans-nx-workshop-2024\\avans-nx-workshop\\apps\\my-app\\src\\app\\components\\login\\login.component.ts","C:\\Users\\salim\\Dev\\avans-nx-workshop-2024\\avans-nx-workshop\\apps\\my-app\\src\\app\\components\\login\\login.component.html"],"sourcesContent":["import { Component } from '@angular/core';\r\nimport { AuthService } from '@avans-nx-workshop/features';\r\nimport { IUserCredentials } from '@avans-nx-workshop/shared/api';\r\nimport { Router } from '@angular/router';\r\n\r\n@Component({\r\n    selector: 'app-login',\r\n    templateUrl: './login.component.html',\r\n})\r\nexport class LoginComponent {\r\n    credentials: IUserCredentials = { emailAddress: '', password: '' };\r\n    errorMessage: string | null = null;\r\n\r\n    constructor(private authService: AuthService, private router: Router) {}\r\n\r\n    login(): void {\r\n        this.authService.login(this.credentials).subscribe({\r\n            next: (user) => {\r\n                console.log('Login successful', user);\r\n                if (user.token) {\r\n                    localStorage.setItem('token', user.token);\r\n                    this.router.navigate(['/']);\r\n                } else {\r\n                    console.error('No token returned from login.');\r\n                    this.errorMessage = 'Login failed. Please try again.';\r\n                }\r\n            },\r\n            error: (err) => {\r\n                this.errorMessage = 'Invalid email or password';\r\n                console.error('Login error', err);\r\n            }\r\n        });\r\n        \r\n    }\r\n}\r\n","<div class=\"login-container d-flex justify-content-center align-items-center vh-70\">\r\n    <div class=\"card p-4\" style=\"width: 400px;\">\r\n        <h3 class=\"text-center mb-4\">Login</h3>\r\n        <form (ngSubmit)=\"login()\">\r\n            <div class=\"form-group mb-3\">\r\n                <input\r\n                    id=\"emailAddress\"\r\n                    type=\"email\"\r\n                    class=\"form-control\"\r\n                    placeholder=\"Email Address\"\r\n                    [(ngModel)]=\"credentials.emailAddress\"\r\n                    name=\"emailAddress\"\r\n                    required\r\n                />\r\n            </div>\r\n            <div class=\"form-group mb-3\">\r\n                <input\r\n                    id=\"password\"\r\n                    type=\"password\"\r\n                    class=\"form-control\"\r\n                    placeholder=\"Password\"\r\n                    [(ngModel)]=\"credentials.password\"\r\n                    name=\"password\"\r\n                    required\r\n                />\r\n            </div>\r\n            <button type=\"submit\" class=\"btn btn-primary w-100 mb-3\">Login</button>\r\n            <div class=\"text-center\">\r\n                <a routerLink=\"/register\" class=\"text-decoration-none\">Don't have an account? Register</a>\r\n            </div>\r\n        </form>\r\n        <div *ngIf=\"errorMessage\" class=\"error-message text-danger mt-3 text-center\">\r\n            {{ errorMessage }}\r\n        </div>\r\n    </div>\r\n</div>\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}