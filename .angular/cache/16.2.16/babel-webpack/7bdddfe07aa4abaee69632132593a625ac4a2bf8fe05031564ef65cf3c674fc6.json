{"ast":null,"code":"import _asyncToGenerator from \"C:/Users/salim/Dev/avans-nx-workshop-2024/avans-nx-workshop/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport { __decorate, __metadata, __param } from \"tslib\";\nimport { Body, Controller, Get, Param, Post, Put, UseGuards } from '@nestjs/common';\nimport { UserService } from './user.service';\nimport { CreateUserDto, UpdateUserDto } from '@avans-nx-workshop/backend/dto';\nimport { UserExistGuard } from './user-exists.guard';\nexport let UserController = class UserController {\n  constructor(userService) {\n    this.userService = userService;\n  }\n  findAll() {\n    var _this = this;\n    return _asyncToGenerator(function* () {\n      return _this.userService.findAll();\n    })();\n  }\n  // this method should precede the general getOne method, otherwise it never matches\n  // @Get('self')\n  // async getSelf(@InjectToken() token: Token): Promise<IUser> {\n  //     const result = await this.userService.getOne(token.id);\n  //     return result;\n  // }\n  findOne(id) {\n    var _this2 = this;\n    return _asyncToGenerator(function* () {\n      return _this2.userService.findOne(id);\n    })();\n  }\n  create(user) {\n    return this.userService.create(user);\n  }\n  update(id, user) {\n    return this.userService.update(id, user);\n  }\n};\n__decorate([Get(), __metadata(\"design:type\", Function), __metadata(\"design:paramtypes\", []), __metadata(\"design:returntype\", Promise)], UserController.prototype, \"findAll\", null);\n__decorate([Get(':id'), __param(0, Param('id')), __metadata(\"design:type\", Function), __metadata(\"design:paramtypes\", [String]), __metadata(\"design:returntype\", Promise)], UserController.prototype, \"findOne\", null);\n__decorate([Post(''), UseGuards(UserExistGuard), __param(0, Body()), __metadata(\"design:type\", Function), __metadata(\"design:paramtypes\", [CreateUserDto]), __metadata(\"design:returntype\", Promise)], UserController.prototype, \"create\", null);\n__decorate([Put(':id'), __param(0, Param('id')), __param(1, Body()), __metadata(\"design:type\", Function), __metadata(\"design:paramtypes\", [String, UpdateUserDto]), __metadata(\"design:returntype\", Promise)], UserController.prototype, \"update\", null);\nUserController = __decorate([Controller('user'), __metadata(\"design:paramtypes\", [UserService])], UserController);","map":{"version":3,"names":["Body","Controller","Get","Param","Post","Put","UseGuards","UserService","CreateUserDto","UpdateUserDto","UserExistGuard","UserController","constructor","userService","findAll","_this","_asyncToGenerator","findOne","id","_this2","create","user","update","__decorate","__param"],"sources":["C:\\Users\\salim\\Dev\\avans-nx-workshop-2024\\avans-nx-workshop\\libs\\backend\\user\\src\\lib\\user\\user.controller.ts"],"sourcesContent":["import {\r\n    Body,\r\n    Controller,\r\n    Get,\r\n    Param,\r\n    Post,\r\n    Put,\r\n    UseGuards\r\n} from '@nestjs/common';\r\nimport { UserService } from './user.service';\r\nimport { IUserInfo, IUser } from '@avans-nx-workshop/shared/api';\r\nimport { CreateUserDto, UpdateUserDto } from '@avans-nx-workshop/backend/dto';\r\nimport { UserExistGuard } from './user-exists.guard';\r\n\r\n@Controller('user')\r\nexport class UserController {\r\n    constructor(private readonly userService: UserService) {}\r\n\r\n    @Get()\r\n    async findAll(): Promise<IUserInfo[]> {\r\n        return this.userService.findAll();\r\n    }\r\n\r\n    // this method should precede the general getOne method, otherwise it never matches\r\n    // @Get('self')\r\n    // async getSelf(@InjectToken() token: Token): Promise<IUser> {\r\n    //     const result = await this.userService.getOne(token.id);\r\n    //     return result;\r\n    // }\r\n\r\n    @Get(':id')\r\n    async findOne(@Param('id') id: string): Promise<IUser | null> {\r\n        return this.userService.findOne(id);\r\n    }\r\n\r\n    @Post('')\r\n    @UseGuards(UserExistGuard)\r\n    create(@Body() user: CreateUserDto): Promise<IUserInfo> {\r\n        return this.userService.create(user);\r\n    }\r\n\r\n    @Put(':id')\r\n    update(\r\n        @Param('id') id: string,\r\n        @Body() user: UpdateUserDto\r\n    ): Promise<IUserInfo | null> {\r\n        return this.userService.update(id, user);\r\n    }\r\n}\r\n"],"mappings":";;AAAA,SACIA,IAAI,EACJC,UAAU,EACVC,GAAG,EACHC,KAAK,EACLC,IAAI,EACJC,GAAG,EACHC,SAAS,QACN,gBAAgB;AACvB,SAASC,WAAW,QAAQ,gBAAgB;AAE5C,SAASC,aAAa,EAAEC,aAAa,QAAQ,gCAAgC;AAC7E,SAASC,cAAc,QAAQ,qBAAqB;AAG7C,WAAMC,cAAc,GAApB,MAAMA,cAAc;EACvBC,YAA6BC,WAAwB;IAAxB,KAAAA,WAAW,GAAXA,WAAW;EAAgB;EAGlDC,OAAOA,CAAA;IAAA,IAAAC,KAAA;IAAA,OAAAC,iBAAA;MACT,OAAOD,KAAI,CAACF,WAAW,CAACC,OAAO,EAAE;IAAC;EACtC;EAEA;EACA;EACA;EACA;EACA;EACA;EAGMG,OAAOA,CAAcC,EAAU;IAAA,IAAAC,MAAA;IAAA,OAAAH,iBAAA;MACjC,OAAOG,MAAI,CAACN,WAAW,CAACI,OAAO,CAACC,EAAE,CAAC;IAAC;EACxC;EAIAE,MAAMA,CAASC,IAAmB;IAC9B,OAAO,IAAI,CAACR,WAAW,CAACO,MAAM,CAACC,IAAI,CAAC;EACxC;EAGAC,MAAMA,CACWJ,EAAU,EACfG,IAAmB;IAE3B,OAAO,IAAI,CAACR,WAAW,CAACS,MAAM,CAACJ,EAAE,EAAEG,IAAI,CAAC;EAC5C;CACH;AA7BSE,UAAA,EADLrB,GAAG,EAAE,E,+JAGL;AAUKqB,UAAA,EADLrB,GAAG,CAAC,KAAK,CAAC,EACIsB,OAAA,IAAArB,KAAK,CAAC,IAAI,CAAC,G,qKAEzB;AAIDoB,UAAA,EAFCnB,IAAI,CAAC,EAAE,CAAC,EACRE,SAAS,CAACI,cAAc,CAAC,EAClBc,OAAA,IAAAxB,IAAI,EAAE,G,sEAAOQ,aAAa,I,oFAEjC;AAGDe,UAAA,EADClB,GAAG,CAAC,KAAK,CAAC,EAENmB,OAAA,IAAArB,KAAK,CAAC,IAAI,CAAC,GACXqB,OAAA,IAAAxB,IAAI,EAAE,G,8EAAOS,aAAa,I,oFAG9B;AAhCQE,cAAc,GAAAY,UAAA,EAD1BtB,UAAU,CAAC,MAAM,CAAC,E,iCAE2BM,WAAW,G,EAD5CI,cAAc,CAiC1B","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}