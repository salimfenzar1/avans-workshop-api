{"ast":null,"code":"import { buildMessage, ValidateBy } from '../common/ValidateBy';\nimport matchesValidator from 'validator/lib/matches';\nexport const MATCHES = 'matches';\nexport function matches(value, pattern, modifiers) {\n  return typeof value === 'string' && matchesValidator(value, pattern, modifiers);\n}\nexport function Matches(pattern, modifiersOrAnnotationOptions, validationOptions) {\n  let modifiers;\n  if (modifiersOrAnnotationOptions && modifiersOrAnnotationOptions instanceof Object && !validationOptions) {\n    validationOptions = modifiersOrAnnotationOptions;\n  } else {\n    modifiers = modifiersOrAnnotationOptions;\n  }\n  return ValidateBy({\n    name: MATCHES,\n    constraints: [pattern, modifiers],\n    validator: {\n      validate: (value, args) => matches(value, args === null || args === void 0 ? void 0 : args.constraints[0], args === null || args === void 0 ? void 0 : args.constraints[1]),\n      defaultMessage: buildMessage((eachPrefix, args) => eachPrefix + '$property must match $constraint1 regular expression', validationOptions)\n    }\n  }, validationOptions);\n}","map":{"version":3,"names":["buildMessage","ValidateBy","matchesValidator","MATCHES","matches","value","pattern","modifiers","Matches","modifiersOrAnnotationOptions","validationOptions","Object","name","constraints","validator","validate","args","defaultMessage","eachPrefix"],"sources":["C:/Users/salim/Dev/avans-nx-workshop-2024/avans-nx-workshop/node_modules/class-validator/esm2015/decorator/string/Matches.js"],"sourcesContent":["import { buildMessage, ValidateBy } from '../common/ValidateBy';\nimport matchesValidator from 'validator/lib/matches';\nexport const MATCHES = 'matches';\nexport function matches(value, pattern, modifiers) {\n    return typeof value === 'string' && matchesValidator(value, pattern, modifiers);\n}\nexport function Matches(pattern, modifiersOrAnnotationOptions, validationOptions) {\n    let modifiers;\n    if (modifiersOrAnnotationOptions && modifiersOrAnnotationOptions instanceof Object && !validationOptions) {\n        validationOptions = modifiersOrAnnotationOptions;\n    }\n    else {\n        modifiers = modifiersOrAnnotationOptions;\n    }\n    return ValidateBy({\n        name: MATCHES,\n        constraints: [pattern, modifiers],\n        validator: {\n            validate: (value, args) => matches(value, args === null || args === void 0 ? void 0 : args.constraints[0], args === null || args === void 0 ? void 0 : args.constraints[1]),\n            defaultMessage: buildMessage((eachPrefix, args) => eachPrefix + '$property must match $constraint1 regular expression', validationOptions),\n        },\n    }, validationOptions);\n}\n"],"mappings":"AAAA,SAASA,YAAY,EAAEC,UAAU,QAAQ,sBAAsB;AAC/D,OAAOC,gBAAgB,MAAM,uBAAuB;AACpD,OAAO,MAAMC,OAAO,GAAG,SAAS;AAChC,OAAO,SAASC,OAAOA,CAACC,KAAK,EAAEC,OAAO,EAAEC,SAAS,EAAE;EAC/C,OAAO,OAAOF,KAAK,KAAK,QAAQ,IAAIH,gBAAgB,CAACG,KAAK,EAAEC,OAAO,EAAEC,SAAS,CAAC;AACnF;AACA,OAAO,SAASC,OAAOA,CAACF,OAAO,EAAEG,4BAA4B,EAAEC,iBAAiB,EAAE;EAC9E,IAAIH,SAAS;EACb,IAAIE,4BAA4B,IAAIA,4BAA4B,YAAYE,MAAM,IAAI,CAACD,iBAAiB,EAAE;IACtGA,iBAAiB,GAAGD,4BAA4B;EACpD,CAAC,MACI;IACDF,SAAS,GAAGE,4BAA4B;EAC5C;EACA,OAAOR,UAAU,CAAC;IACdW,IAAI,EAAET,OAAO;IACbU,WAAW,EAAE,CAACP,OAAO,EAAEC,SAAS,CAAC;IACjCO,SAAS,EAAE;MACPC,QAAQ,EAAEA,CAACV,KAAK,EAAEW,IAAI,KAAKZ,OAAO,CAACC,KAAK,EAAEW,IAAI,KAAK,IAAI,IAAIA,IAAI,KAAK,KAAK,CAAC,GAAG,KAAK,CAAC,GAAGA,IAAI,CAACH,WAAW,CAAC,CAAC,CAAC,EAAEG,IAAI,KAAK,IAAI,IAAIA,IAAI,KAAK,KAAK,CAAC,GAAG,KAAK,CAAC,GAAGA,IAAI,CAACH,WAAW,CAAC,CAAC,CAAC,CAAC;MAC3KI,cAAc,EAAEjB,YAAY,CAAC,CAACkB,UAAU,EAAEF,IAAI,KAAKE,UAAU,GAAG,sDAAsD,EAAER,iBAAiB;IAC7I;EACJ,CAAC,EAAEA,iBAAiB,CAAC;AACzB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}