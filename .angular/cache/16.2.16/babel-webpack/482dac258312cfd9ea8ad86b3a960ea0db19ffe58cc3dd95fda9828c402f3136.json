{"ast":null,"code":"import { HttpClient } from '@angular/common/http';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class UserService {\n  constructor(http) {\n    this.http = http;\n    this.apiUrl = '/api/user'; // Pas dit aan op basis van je backend API endpoint.\n  }\n  /**\n   * Haal alle gebruikers op\n   */\n  getUsers() {\n    return this.http.get(this.apiUrl);\n  }\n  /**\n   * Haal een gebruiker op met een specifieke ID\n   * @param id De ID van de gebruiker\n   */\n  getUserById(id) {\n    return this.http.get(`${this.apiUrl}/${id}`);\n  }\n  /**\n   * Update een gebruiker met een specifieke ID\n   * @param user De gegevens van de gebruiker die geüpdatet moeten worden\n   */\n  updateUser(user) {\n    return this.http.put(`${this.apiUrl}/${user._id}`, user);\n  }\n  /**\n   * Maak een nieuwe gebruiker\n   * @param user De gegevens van de nieuwe gebruiker\n   */\n  createUser(user) {\n    return this.http.post(this.apiUrl, user);\n  }\n  /**\n   * Verwijder een gebruiker met een specifieke ID\n   * @param id De ID van de gebruiker die verwijderd moet worden\n   */\n  deleteUser(id) {\n    return this.http.delete(`${this.apiUrl}/${id}`);\n  }\n  static {\n    this.ɵfac = function UserService_Factory(t) {\n      return new (t || UserService)(i0.ɵɵinject(i1.HttpClient));\n    };\n  }\n  static {\n    this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n      token: UserService,\n      factory: UserService.ɵfac,\n      providedIn: 'root'\n    });\n  }\n}","map":{"version":3,"names":["HttpClient","UserService","constructor","http","apiUrl","getUsers","get","getUserById","id","updateUser","user","put","_id","createUser","post","deleteUser","delete","i0","ɵɵinject","i1","factory","ɵfac","providedIn"],"sources":["C:\\Users\\salim\\Dev\\avans-nx-workshop-2024\\avans-nx-workshop\\libs\\frontend\\features\\src\\lib\\users\\user.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\n \r\nexport interface IUserInfo {\r\n  _id: string;\r\n  name: string;\r\n  emailAddress: string;\r\n  role: string;\r\n  gender?: string;\r\n  isActive: boolean;\r\n}\r\n \r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class UserService {\r\n  private readonly apiUrl = '/api/user'; // Pas dit aan op basis van je backend API endpoint.\r\n \r\n  constructor(private http: HttpClient) {}\r\n \r\n  /**\r\n   * Haal alle gebruikers op\r\n   */\r\n  getUsers(): Observable<IUserInfo[]> {\r\n    return this.http.get<IUserInfo[]>(this.apiUrl);\r\n  }\r\n \r\n  /**\r\n   * Haal een gebruiker op met een specifieke ID\r\n   * @param id De ID van de gebruiker\r\n   */\r\n  getUserById(id: string): Observable<IUserInfo> {\r\n    return this.http.get<IUserInfo>(`${this.apiUrl}/${id}`);\r\n  }\r\n \r\n  /**\r\n   * Update een gebruiker met een specifieke ID\r\n   * @param user De gegevens van de gebruiker die geüpdatet moeten worden\r\n   */\r\n  updateUser(user: Partial<IUserInfo>): Observable<boolean> {\r\n    return this.http.put<boolean>(`${this.apiUrl}/${user._id}`, user);\r\n  }\r\n \r\n  /**\r\n   * Maak een nieuwe gebruiker\r\n   * @param user De gegevens van de nieuwe gebruiker\r\n   */\r\n  createUser(user: IUserInfo): Observable<IUserInfo> {\r\n    return this.http.post<IUserInfo>(this.apiUrl, user);\r\n  }\r\n \r\n  /**\r\n   * Verwijder een gebruiker met een specifieke ID\r\n   * @param id De ID van de gebruiker die verwijderd moet worden\r\n   */\r\n  deleteUser(id: string): Observable<void> {\r\n    return this.http.delete<void>(`${this.apiUrl}/${id}`);\r\n  }\r\n}\r\n "],"mappings":"AACA,SAASA,UAAU,QAAQ,sBAAsB;;;AAejD,OAAM,MAAOC,WAAW;EAGtBC,YAAoBC,IAAgB;IAAhB,KAAAA,IAAI,GAAJA,IAAI;IAFP,KAAAC,MAAM,GAAG,WAAW,CAAC,CAAC;EAEA;EAEvC;;;EAGAC,QAAQA,CAAA;IACN,OAAO,IAAI,CAACF,IAAI,CAACG,GAAG,CAAc,IAAI,CAACF,MAAM,CAAC;EAChD;EAEA;;;;EAIAG,WAAWA,CAACC,EAAU;IACpB,OAAO,IAAI,CAACL,IAAI,CAACG,GAAG,CAAY,GAAG,IAAI,CAACF,MAAM,IAAII,EAAE,EAAE,CAAC;EACzD;EAEA;;;;EAIAC,UAAUA,CAACC,IAAwB;IACjC,OAAO,IAAI,CAACP,IAAI,CAACQ,GAAG,CAAU,GAAG,IAAI,CAACP,MAAM,IAAIM,IAAI,CAACE,GAAG,EAAE,EAAEF,IAAI,CAAC;EACnE;EAEA;;;;EAIAG,UAAUA,CAACH,IAAe;IACxB,OAAO,IAAI,CAACP,IAAI,CAACW,IAAI,CAAY,IAAI,CAACV,MAAM,EAAEM,IAAI,CAAC;EACrD;EAEA;;;;EAIAK,UAAUA,CAACP,EAAU;IACnB,OAAO,IAAI,CAACL,IAAI,CAACa,MAAM,CAAO,GAAG,IAAI,CAACZ,MAAM,IAAII,EAAE,EAAE,CAAC;EACvD;;;uBA1CWP,WAAW,EAAAgB,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAnB,UAAA;IAAA;EAAA;;;aAAXC,WAAW;MAAAmB,OAAA,EAAXnB,WAAW,CAAAoB,IAAA;MAAAC,UAAA,EAFV;IAAM;EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}