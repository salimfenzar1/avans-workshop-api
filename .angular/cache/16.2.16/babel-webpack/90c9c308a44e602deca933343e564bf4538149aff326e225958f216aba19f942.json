{"ast":null,"code":"\"use strict\";\n\nvar _asyncToGenerator = require(\"C:/Users/salim/Dev/avans-nx-workshop-2024/avans-nx-workshop/node_modules/@babel/runtime/helpers/asyncToGenerator.js\").default;\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.MiddlewareModule = void 0;\nconst common_1 = require(\"@nestjs/common\");\nconst request_method_enum_1 = require(\"@nestjs/common/enums/request-method.enum\");\nconst shared_utils_1 = require(\"@nestjs/common/utils/shared.utils\");\nconst invalid_middleware_exception_1 = require(\"../errors/exceptions/invalid-middleware.exception\");\nconst runtime_exception_1 = require(\"../errors/exceptions/runtime.exception\");\nconst context_id_factory_1 = require(\"../helpers/context-id-factory\");\nconst execution_context_host_1 = require(\"../helpers/execution-context-host\");\nconst constants_1 = require(\"../injector/constants\");\nconst request_constants_1 = require(\"../router/request/request-constants\");\nconst router_exception_filters_1 = require(\"../router/router-exception-filters\");\nconst router_proxy_1 = require(\"../router/router-proxy\");\nconst utils_1 = require(\"../router/utils\");\nconst builder_1 = require(\"./builder\");\nconst resolver_1 = require(\"./resolver\");\nconst route_info_path_extractor_1 = require(\"./route-info-path-extractor\");\nconst routes_mapper_1 = require(\"./routes-mapper\");\nclass MiddlewareModule {\n  constructor() {\n    this.routerProxy = new router_proxy_1.RouterProxy();\n    this.exceptionFiltersCache = new WeakMap();\n    this.logger = new common_1.Logger(MiddlewareModule.name);\n  }\n  register(middlewareContainer, container, config, injector, httpAdapter, graphInspector, options) {\n    var _this = this;\n    return _asyncToGenerator(function* () {\n      _this.appOptions = options;\n      const appRef = container.getHttpAdapterRef();\n      _this.routerExceptionFilter = new router_exception_filters_1.RouterExceptionFilters(container, config, appRef);\n      _this.routesMapper = new routes_mapper_1.RoutesMapper(container, config);\n      _this.resolver = new resolver_1.MiddlewareResolver(middlewareContainer, injector);\n      _this.routeInfoPathExtractor = new route_info_path_extractor_1.RouteInfoPathExtractor(config);\n      _this.injector = injector;\n      _this.container = container;\n      _this.httpAdapter = httpAdapter;\n      _this.graphInspector = graphInspector;\n      const modules = container.getModules();\n      yield _this.resolveMiddleware(middlewareContainer, modules);\n    })();\n  }\n  resolveMiddleware(middlewareContainer, modules) {\n    var _this2 = this;\n    return _asyncToGenerator(function* () {\n      const moduleEntries = [...modules.entries()];\n      const loadMiddlewareConfiguration = /*#__PURE__*/function () {\n        var _ref = _asyncToGenerator(function* ([moduleName, moduleRef]) {\n          yield _this2.loadConfiguration(middlewareContainer, moduleRef, moduleName);\n          yield _this2.resolver.resolveInstances(moduleRef, moduleName);\n        });\n        return function loadMiddlewareConfiguration(_x) {\n          return _ref.apply(this, arguments);\n        };\n      }();\n      yield Promise.all(moduleEntries.map(loadMiddlewareConfiguration));\n    })();\n  }\n  loadConfiguration(middlewareContainer, moduleRef, moduleKey) {\n    var _this3 = this;\n    return _asyncToGenerator(function* () {\n      const {\n        instance\n      } = moduleRef;\n      if (!instance.configure) {\n        return;\n      }\n      const middlewareBuilder = new builder_1.MiddlewareBuilder(_this3.routesMapper, _this3.httpAdapter, _this3.routeInfoPathExtractor);\n      try {\n        yield instance.configure(middlewareBuilder);\n      } catch (err) {\n        if (!_this3.appOptions.preview) {\n          throw err;\n        }\n        const warningMessage = `Warning! \"${moduleRef.name}\" module exposes a \"configure\" method that throws an exception in the preview mode` + ` (possibly due to missing dependencies). Note: you can ignore this message, just be aware that some of those conditional middlewares will not be reflected in your graph.`;\n        _this3.logger.warn(warningMessage);\n      }\n      if (!(middlewareBuilder instanceof builder_1.MiddlewareBuilder)) {\n        return;\n      }\n      const config = middlewareBuilder.build();\n      middlewareContainer.insertConfig(config, moduleKey);\n    })();\n  }\n  registerMiddleware(middlewareContainer, applicationRef) {\n    var _this4 = this;\n    return _asyncToGenerator(function* () {\n      const configs = middlewareContainer.getConfigurations();\n      const registerAllConfigs = /*#__PURE__*/function () {\n        var _ref2 = _asyncToGenerator(function* (moduleKey, middlewareConfig) {\n          for (const config of middlewareConfig) {\n            yield _this4.registerMiddlewareConfig(middlewareContainer, config, moduleKey, applicationRef);\n          }\n        });\n        return function registerAllConfigs(_x2, _x3) {\n          return _ref2.apply(this, arguments);\n        };\n      }();\n      const entriesSortedByDistance = [...configs.entries()].sort(([moduleA], [moduleB]) => {\n        return _this4.container.getModuleByKey(moduleA).distance - _this4.container.getModuleByKey(moduleB).distance;\n      });\n      for (const [moduleRef, moduleConfigurations] of entriesSortedByDistance) {\n        yield registerAllConfigs(moduleRef, [...moduleConfigurations]);\n      }\n    })();\n  }\n  registerMiddlewareConfig(middlewareContainer, config, moduleKey, applicationRef) {\n    var _this5 = this;\n    return _asyncToGenerator(function* () {\n      const {\n        forRoutes\n      } = config;\n      for (const routeInfo of forRoutes) {\n        yield _this5.registerRouteMiddleware(middlewareContainer, routeInfo, config, moduleKey, applicationRef);\n      }\n    })();\n  }\n  registerRouteMiddleware(middlewareContainer, routeInfo, config, moduleKey, applicationRef) {\n    var _this6 = this;\n    return _asyncToGenerator(function* () {\n      const middlewareCollection = [].concat(config.middleware);\n      const moduleRef = _this6.container.getModuleByKey(moduleKey);\n      for (const metatype of middlewareCollection) {\n        const collection = middlewareContainer.getMiddlewareCollection(moduleKey);\n        const instanceWrapper = collection.get(metatype);\n        if ((0, shared_utils_1.isUndefined)(instanceWrapper)) {\n          throw new runtime_exception_1.RuntimeException();\n        }\n        if (instanceWrapper.isTransient) {\n          return;\n        }\n        _this6.graphInspector.insertClassNode(moduleRef, instanceWrapper, 'middleware');\n        const middlewareDefinition = {\n          type: 'middleware',\n          methodName: 'use',\n          className: instanceWrapper.name,\n          classNodeId: instanceWrapper.id,\n          metadata: {\n            key: routeInfo.path,\n            path: routeInfo.path,\n            requestMethod: request_method_enum_1.RequestMethod[routeInfo.method] ?? 'ALL',\n            version: routeInfo.version\n          }\n        };\n        _this6.graphInspector.insertEntrypointDefinition(middlewareDefinition, instanceWrapper.id);\n        yield _this6.bindHandler(instanceWrapper, applicationRef, routeInfo, moduleRef, collection);\n      }\n    })();\n  }\n  bindHandler(wrapper, applicationRef, routeInfo, moduleRef, collection) {\n    var _this7 = this;\n    return _asyncToGenerator(function* () {\n      const {\n        instance,\n        metatype\n      } = wrapper;\n      if ((0, shared_utils_1.isUndefined)(instance?.use)) {\n        throw new invalid_middleware_exception_1.InvalidMiddlewareException(metatype.name);\n      }\n      const isStatic = wrapper.isDependencyTreeStatic();\n      if (isStatic) {\n        const proxy = yield _this7.createProxy(instance);\n        return _this7.registerHandler(applicationRef, routeInfo, proxy);\n      }\n      const isTreeDurable = wrapper.isDependencyTreeDurable();\n      yield _this7.registerHandler(applicationRef, routeInfo, /*#__PURE__*/function () {\n        var _ref3 = _asyncToGenerator(function* (req, res, next) {\n          try {\n            const contextId = _this7.getContextId(req, isTreeDurable);\n            const contextInstance = yield _this7.injector.loadPerContext(instance, moduleRef, collection, contextId);\n            const proxy = yield _this7.createProxy(contextInstance, contextId);\n            return proxy(req, res, next);\n          } catch (err) {\n            let exceptionsHandler = _this7.exceptionFiltersCache.get(instance.use);\n            if (!exceptionsHandler) {\n              exceptionsHandler = _this7.routerExceptionFilter.create(instance, instance.use, undefined);\n              _this7.exceptionFiltersCache.set(instance.use, exceptionsHandler);\n            }\n            const host = new execution_context_host_1.ExecutionContextHost([req, res, next]);\n            exceptionsHandler.next(err, host);\n          }\n        });\n        return function (_x4, _x5, _x6) {\n          return _ref3.apply(this, arguments);\n        };\n      }());\n    })();\n  }\n  createProxy(instance, contextId = constants_1.STATIC_CONTEXT) {\n    var _this8 = this;\n    return _asyncToGenerator(function* () {\n      const exceptionsHandler = _this8.routerExceptionFilter.create(instance, instance.use, undefined, contextId);\n      const middleware = instance.use.bind(instance);\n      return _this8.routerProxy.createProxy(middleware, exceptionsHandler);\n    })();\n  }\n  registerHandler(applicationRef, routeInfo, proxy) {\n    var _this9 = this;\n    return _asyncToGenerator(function* () {\n      const {\n        method\n      } = routeInfo;\n      const paths = _this9.routeInfoPathExtractor.extractPathsFrom(routeInfo);\n      const isMethodAll = (0, utils_1.isRequestMethodAll)(method);\n      const requestMethod = request_method_enum_1.RequestMethod[method];\n      const router = yield applicationRef.createMiddlewareFactory(method);\n      const middlewareFunction = isMethodAll ? proxy : (req, res, next) => {\n        if (applicationRef.getRequestMethod(req) === requestMethod) {\n          return proxy(req, res, next);\n        }\n        return next();\n      };\n      const pathsToApplyMiddleware = [];\n      paths.some(path => path.match(/^\\/?$/)) ? pathsToApplyMiddleware.push('/') : pathsToApplyMiddleware.push(...paths);\n      pathsToApplyMiddleware.forEach(path => router(path, middlewareFunction));\n    })();\n  }\n  getContextId(request, isTreeDurable) {\n    const contextId = context_id_factory_1.ContextIdFactory.getByRequest(request);\n    if (!request[request_constants_1.REQUEST_CONTEXT_ID]) {\n      Object.defineProperty(request, request_constants_1.REQUEST_CONTEXT_ID, {\n        value: contextId,\n        enumerable: false,\n        writable: false,\n        configurable: false\n      });\n      const requestProviderValue = isTreeDurable ? contextId.payload : request;\n      this.container.registerRequestProvider(requestProviderValue, contextId);\n    }\n    return contextId;\n  }\n}\nexports.MiddlewareModule = MiddlewareModule;","map":{"version":3,"names":["_asyncToGenerator","require","default","Object","defineProperty","exports","value","MiddlewareModule","common_1","request_method_enum_1","shared_utils_1","invalid_middleware_exception_1","runtime_exception_1","context_id_factory_1","execution_context_host_1","constants_1","request_constants_1","router_exception_filters_1","router_proxy_1","utils_1","builder_1","resolver_1","route_info_path_extractor_1","routes_mapper_1","constructor","routerProxy","RouterProxy","exceptionFiltersCache","WeakMap","logger","Logger","name","register","middlewareContainer","container","config","injector","httpAdapter","graphInspector","options","_this","appOptions","appRef","getHttpAdapterRef","routerExceptionFilter","RouterExceptionFilters","routesMapper","RoutesMapper","resolver","MiddlewareResolver","routeInfoPathExtractor","RouteInfoPathExtractor","modules","getModules","resolveMiddleware","_this2","moduleEntries","entries","loadMiddlewareConfiguration","_ref","moduleName","moduleRef","loadConfiguration","resolveInstances","_x","apply","arguments","Promise","all","map","moduleKey","_this3","instance","configure","middlewareBuilder","MiddlewareBuilder","err","preview","warningMessage","warn","build","insertConfig","registerMiddleware","applicationRef","_this4","configs","getConfigurations","registerAllConfigs","_ref2","middlewareConfig","registerMiddlewareConfig","_x2","_x3","entriesSortedByDistance","sort","moduleA","moduleB","getModuleByKey","distance","moduleConfigurations","_this5","forRoutes","routeInfo","registerRouteMiddleware","_this6","middlewareCollection","concat","middleware","metatype","collection","getMiddlewareCollection","instanceWrapper","get","isUndefined","RuntimeException","isTransient","insertClassNode","middlewareDefinition","type","methodName","className","classNodeId","id","metadata","key","path","requestMethod","RequestMethod","method","version","insertEntrypointDefinition","bindHandler","wrapper","_this7","use","InvalidMiddlewareException","isStatic","isDependencyTreeStatic","proxy","createProxy","registerHandler","isTreeDurable","isDependencyTreeDurable","_ref3","req","res","next","contextId","getContextId","contextInstance","loadPerContext","exceptionsHandler","create","undefined","set","host","ExecutionContextHost","_x4","_x5","_x6","STATIC_CONTEXT","_this8","bind","_this9","paths","extractPathsFrom","isMethodAll","isRequestMethodAll","router","createMiddlewareFactory","middlewareFunction","getRequestMethod","pathsToApplyMiddleware","some","match","push","forEach","request","ContextIdFactory","getByRequest","REQUEST_CONTEXT_ID","enumerable","writable","configurable","requestProviderValue","payload","registerRequestProvider"],"sources":["C:/Users/salim/Dev/avans-nx-workshop-2024/avans-nx-workshop/node_modules/@nestjs/core/middleware/middleware-module.js"],"sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.MiddlewareModule = void 0;\nconst common_1 = require(\"@nestjs/common\");\nconst request_method_enum_1 = require(\"@nestjs/common/enums/request-method.enum\");\nconst shared_utils_1 = require(\"@nestjs/common/utils/shared.utils\");\nconst invalid_middleware_exception_1 = require(\"../errors/exceptions/invalid-middleware.exception\");\nconst runtime_exception_1 = require(\"../errors/exceptions/runtime.exception\");\nconst context_id_factory_1 = require(\"../helpers/context-id-factory\");\nconst execution_context_host_1 = require(\"../helpers/execution-context-host\");\nconst constants_1 = require(\"../injector/constants\");\nconst request_constants_1 = require(\"../router/request/request-constants\");\nconst router_exception_filters_1 = require(\"../router/router-exception-filters\");\nconst router_proxy_1 = require(\"../router/router-proxy\");\nconst utils_1 = require(\"../router/utils\");\nconst builder_1 = require(\"./builder\");\nconst resolver_1 = require(\"./resolver\");\nconst route_info_path_extractor_1 = require(\"./route-info-path-extractor\");\nconst routes_mapper_1 = require(\"./routes-mapper\");\nclass MiddlewareModule {\n    constructor() {\n        this.routerProxy = new router_proxy_1.RouterProxy();\n        this.exceptionFiltersCache = new WeakMap();\n        this.logger = new common_1.Logger(MiddlewareModule.name);\n    }\n    async register(middlewareContainer, container, config, injector, httpAdapter, graphInspector, options) {\n        this.appOptions = options;\n        const appRef = container.getHttpAdapterRef();\n        this.routerExceptionFilter = new router_exception_filters_1.RouterExceptionFilters(container, config, appRef);\n        this.routesMapper = new routes_mapper_1.RoutesMapper(container, config);\n        this.resolver = new resolver_1.MiddlewareResolver(middlewareContainer, injector);\n        this.routeInfoPathExtractor = new route_info_path_extractor_1.RouteInfoPathExtractor(config);\n        this.injector = injector;\n        this.container = container;\n        this.httpAdapter = httpAdapter;\n        this.graphInspector = graphInspector;\n        const modules = container.getModules();\n        await this.resolveMiddleware(middlewareContainer, modules);\n    }\n    async resolveMiddleware(middlewareContainer, modules) {\n        const moduleEntries = [...modules.entries()];\n        const loadMiddlewareConfiguration = async ([moduleName, moduleRef]) => {\n            await this.loadConfiguration(middlewareContainer, moduleRef, moduleName);\n            await this.resolver.resolveInstances(moduleRef, moduleName);\n        };\n        await Promise.all(moduleEntries.map(loadMiddlewareConfiguration));\n    }\n    async loadConfiguration(middlewareContainer, moduleRef, moduleKey) {\n        const { instance } = moduleRef;\n        if (!instance.configure) {\n            return;\n        }\n        const middlewareBuilder = new builder_1.MiddlewareBuilder(this.routesMapper, this.httpAdapter, this.routeInfoPathExtractor);\n        try {\n            await instance.configure(middlewareBuilder);\n        }\n        catch (err) {\n            if (!this.appOptions.preview) {\n                throw err;\n            }\n            const warningMessage = `Warning! \"${moduleRef.name}\" module exposes a \"configure\" method that throws an exception in the preview mode` +\n                ` (possibly due to missing dependencies). Note: you can ignore this message, just be aware that some of those conditional middlewares will not be reflected in your graph.`;\n            this.logger.warn(warningMessage);\n        }\n        if (!(middlewareBuilder instanceof builder_1.MiddlewareBuilder)) {\n            return;\n        }\n        const config = middlewareBuilder.build();\n        middlewareContainer.insertConfig(config, moduleKey);\n    }\n    async registerMiddleware(middlewareContainer, applicationRef) {\n        const configs = middlewareContainer.getConfigurations();\n        const registerAllConfigs = async (moduleKey, middlewareConfig) => {\n            for (const config of middlewareConfig) {\n                await this.registerMiddlewareConfig(middlewareContainer, config, moduleKey, applicationRef);\n            }\n        };\n        const entriesSortedByDistance = [...configs.entries()].sort(([moduleA], [moduleB]) => {\n            return (this.container.getModuleByKey(moduleA).distance -\n                this.container.getModuleByKey(moduleB).distance);\n        });\n        for (const [moduleRef, moduleConfigurations] of entriesSortedByDistance) {\n            await registerAllConfigs(moduleRef, [...moduleConfigurations]);\n        }\n    }\n    async registerMiddlewareConfig(middlewareContainer, config, moduleKey, applicationRef) {\n        const { forRoutes } = config;\n        for (const routeInfo of forRoutes) {\n            await this.registerRouteMiddleware(middlewareContainer, routeInfo, config, moduleKey, applicationRef);\n        }\n    }\n    async registerRouteMiddleware(middlewareContainer, routeInfo, config, moduleKey, applicationRef) {\n        const middlewareCollection = [].concat(config.middleware);\n        const moduleRef = this.container.getModuleByKey(moduleKey);\n        for (const metatype of middlewareCollection) {\n            const collection = middlewareContainer.getMiddlewareCollection(moduleKey);\n            const instanceWrapper = collection.get(metatype);\n            if ((0, shared_utils_1.isUndefined)(instanceWrapper)) {\n                throw new runtime_exception_1.RuntimeException();\n            }\n            if (instanceWrapper.isTransient) {\n                return;\n            }\n            this.graphInspector.insertClassNode(moduleRef, instanceWrapper, 'middleware');\n            const middlewareDefinition = {\n                type: 'middleware',\n                methodName: 'use',\n                className: instanceWrapper.name,\n                classNodeId: instanceWrapper.id,\n                metadata: {\n                    key: routeInfo.path,\n                    path: routeInfo.path,\n                    requestMethod: request_method_enum_1.RequestMethod[routeInfo.method] ??\n                        'ALL',\n                    version: routeInfo.version,\n                },\n            };\n            this.graphInspector.insertEntrypointDefinition(middlewareDefinition, instanceWrapper.id);\n            await this.bindHandler(instanceWrapper, applicationRef, routeInfo, moduleRef, collection);\n        }\n    }\n    async bindHandler(wrapper, applicationRef, routeInfo, moduleRef, collection) {\n        const { instance, metatype } = wrapper;\n        if ((0, shared_utils_1.isUndefined)(instance?.use)) {\n            throw new invalid_middleware_exception_1.InvalidMiddlewareException(metatype.name);\n        }\n        const isStatic = wrapper.isDependencyTreeStatic();\n        if (isStatic) {\n            const proxy = await this.createProxy(instance);\n            return this.registerHandler(applicationRef, routeInfo, proxy);\n        }\n        const isTreeDurable = wrapper.isDependencyTreeDurable();\n        await this.registerHandler(applicationRef, routeInfo, async (req, res, next) => {\n            try {\n                const contextId = this.getContextId(req, isTreeDurable);\n                const contextInstance = await this.injector.loadPerContext(instance, moduleRef, collection, contextId);\n                const proxy = await this.createProxy(contextInstance, contextId);\n                return proxy(req, res, next);\n            }\n            catch (err) {\n                let exceptionsHandler = this.exceptionFiltersCache.get(instance.use);\n                if (!exceptionsHandler) {\n                    exceptionsHandler = this.routerExceptionFilter.create(instance, instance.use, undefined);\n                    this.exceptionFiltersCache.set(instance.use, exceptionsHandler);\n                }\n                const host = new execution_context_host_1.ExecutionContextHost([req, res, next]);\n                exceptionsHandler.next(err, host);\n            }\n        });\n    }\n    async createProxy(instance, contextId = constants_1.STATIC_CONTEXT) {\n        const exceptionsHandler = this.routerExceptionFilter.create(instance, instance.use, undefined, contextId);\n        const middleware = instance.use.bind(instance);\n        return this.routerProxy.createProxy(middleware, exceptionsHandler);\n    }\n    async registerHandler(applicationRef, routeInfo, proxy) {\n        const { method } = routeInfo;\n        const paths = this.routeInfoPathExtractor.extractPathsFrom(routeInfo);\n        const isMethodAll = (0, utils_1.isRequestMethodAll)(method);\n        const requestMethod = request_method_enum_1.RequestMethod[method];\n        const router = await applicationRef.createMiddlewareFactory(method);\n        const middlewareFunction = isMethodAll\n            ? proxy\n            : (req, res, next) => {\n                if (applicationRef.getRequestMethod(req) === requestMethod) {\n                    return proxy(req, res, next);\n                }\n                return next();\n            };\n        const pathsToApplyMiddleware = [];\n        paths.some(path => path.match(/^\\/?$/))\n            ? pathsToApplyMiddleware.push('/')\n            : pathsToApplyMiddleware.push(...paths);\n        pathsToApplyMiddleware.forEach(path => router(path, middlewareFunction));\n    }\n    getContextId(request, isTreeDurable) {\n        const contextId = context_id_factory_1.ContextIdFactory.getByRequest(request);\n        if (!request[request_constants_1.REQUEST_CONTEXT_ID]) {\n            Object.defineProperty(request, request_constants_1.REQUEST_CONTEXT_ID, {\n                value: contextId,\n                enumerable: false,\n                writable: false,\n                configurable: false,\n            });\n            const requestProviderValue = isTreeDurable ? contextId.payload : request;\n            this.container.registerRequestProvider(requestProviderValue, contextId);\n        }\n        return contextId;\n    }\n}\nexports.MiddlewareModule = MiddlewareModule;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}