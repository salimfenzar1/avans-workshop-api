{"ast":null,"code":"\"use strict\";\n\nvar _asyncToGenerator = require(\"C:/Users/salim/Dev/avans-nx-workshop-2024/avans-nx-workshop/node_modules/@babel/runtime/helpers/asyncToGenerator.js\").default;\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.RouterResponseController = void 0;\nconst common_1 = require(\"@nestjs/common\");\nconst shared_utils_1 = require(\"@nestjs/common/utils/shared.utils\");\nconst rxjs_1 = require(\"rxjs\");\nconst operators_1 = require(\"rxjs/operators\");\nconst sse_stream_1 = require(\"./sse-stream\");\nclass RouterResponseController {\n  constructor(applicationRef) {\n    this.applicationRef = applicationRef;\n    this.logger = new common_1.Logger(RouterResponseController.name);\n  }\n  apply(result, response, httpStatusCode) {\n    var _this = this;\n    return _asyncToGenerator(function* () {\n      return _this.applicationRef.reply(response, result, httpStatusCode);\n    })();\n  }\n  redirect(resultOrDeferred, response, redirectResponse) {\n    var _this2 = this;\n    return _asyncToGenerator(function* () {\n      const result = yield _this2.transformToResult(resultOrDeferred);\n      const statusCode = result && result.statusCode ? result.statusCode : redirectResponse.statusCode ? redirectResponse.statusCode : common_1.HttpStatus.FOUND;\n      const url = result && result.url ? result.url : redirectResponse.url;\n      _this2.applicationRef.redirect(response, statusCode, url);\n    })();\n  }\n  render(resultOrDeferred, response, template) {\n    var _this3 = this;\n    return _asyncToGenerator(function* () {\n      const result = yield _this3.transformToResult(resultOrDeferred);\n      return _this3.applicationRef.render(response, template, result);\n    })();\n  }\n  transformToResult(resultOrDeferred) {\n    return _asyncToGenerator(function* () {\n      if ((0, rxjs_1.isObservable)(resultOrDeferred)) {\n        return (0, rxjs_1.lastValueFrom)(resultOrDeferred);\n      }\n      return resultOrDeferred;\n    })();\n  }\n  getStatusByMethod(requestMethod) {\n    switch (requestMethod) {\n      case common_1.RequestMethod.POST:\n        return common_1.HttpStatus.CREATED;\n      default:\n        return common_1.HttpStatus.OK;\n    }\n  }\n  setHeaders(response, headers) {\n    headers.forEach(({\n      name,\n      value\n    }) => this.applicationRef.setHeader(response, name, typeof value === 'function' ? value() : value));\n  }\n  setStatus(response, statusCode) {\n    this.applicationRef.status(response, statusCode);\n  }\n  sse(result, response, request, options) {\n    // It's possible that we sent headers already so don't use a stream\n    if (response.writableEnded) {\n      return;\n    }\n    this.assertObservable(result);\n    const stream = new sse_stream_1.SseStream(request);\n    stream.pipe(response, options);\n    const subscription = result.pipe((0, operators_1.map)(message => {\n      if ((0, shared_utils_1.isObject)(message)) {\n        return message;\n      }\n      return {\n        data: message\n      };\n    }), (0, operators_1.concatMap)(message => new Promise(resolve => stream.writeMessage(message, () => resolve()))), (0, operators_1.catchError)(err => {\n      const data = err instanceof Error ? err.message : err;\n      stream.writeMessage({\n        type: 'error',\n        data\n      }, writeError => {\n        if (writeError) {\n          this.logger.error(writeError);\n        }\n      });\n      return rxjs_1.EMPTY;\n    })).subscribe({\n      complete: () => {\n        response.end();\n      }\n    });\n    request.on('close', () => {\n      subscription.unsubscribe();\n      if (!stream.writableEnded) {\n        stream.end();\n      }\n    });\n  }\n  assertObservable(value) {\n    if (!(0, rxjs_1.isObservable)(value)) {\n      throw new ReferenceError('You must return an Observable stream to use Server-Sent Events (SSE).');\n    }\n  }\n}\nexports.RouterResponseController = RouterResponseController;","map":{"version":3,"names":["_asyncToGenerator","require","default","Object","defineProperty","exports","value","RouterResponseController","common_1","shared_utils_1","rxjs_1","operators_1","sse_stream_1","constructor","applicationRef","logger","Logger","name","apply","result","response","httpStatusCode","_this","reply","redirect","resultOrDeferred","redirectResponse","_this2","transformToResult","statusCode","HttpStatus","FOUND","url","render","template","_this3","isObservable","lastValueFrom","getStatusByMethod","requestMethod","RequestMethod","POST","CREATED","OK","setHeaders","headers","forEach","setHeader","setStatus","status","sse","request","options","writableEnded","assertObservable","stream","SseStream","pipe","subscription","map","message","isObject","data","concatMap","Promise","resolve","writeMessage","catchError","err","Error","type","writeError","error","EMPTY","subscribe","complete","end","on","unsubscribe","ReferenceError"],"sources":["C:/Users/salim/Dev/avans-nx-workshop-2024/avans-nx-workshop/node_modules/@nestjs/core/router/router-response-controller.js"],"sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.RouterResponseController = void 0;\nconst common_1 = require(\"@nestjs/common\");\nconst shared_utils_1 = require(\"@nestjs/common/utils/shared.utils\");\nconst rxjs_1 = require(\"rxjs\");\nconst operators_1 = require(\"rxjs/operators\");\nconst sse_stream_1 = require(\"./sse-stream\");\nclass RouterResponseController {\n    constructor(applicationRef) {\n        this.applicationRef = applicationRef;\n        this.logger = new common_1.Logger(RouterResponseController.name);\n    }\n    async apply(result, response, httpStatusCode) {\n        return this.applicationRef.reply(response, result, httpStatusCode);\n    }\n    async redirect(resultOrDeferred, response, redirectResponse) {\n        const result = await this.transformToResult(resultOrDeferred);\n        const statusCode = result && result.statusCode\n            ? result.statusCode\n            : redirectResponse.statusCode\n                ? redirectResponse.statusCode\n                : common_1.HttpStatus.FOUND;\n        const url = result && result.url ? result.url : redirectResponse.url;\n        this.applicationRef.redirect(response, statusCode, url);\n    }\n    async render(resultOrDeferred, response, template) {\n        const result = await this.transformToResult(resultOrDeferred);\n        return this.applicationRef.render(response, template, result);\n    }\n    async transformToResult(resultOrDeferred) {\n        if ((0, rxjs_1.isObservable)(resultOrDeferred)) {\n            return (0, rxjs_1.lastValueFrom)(resultOrDeferred);\n        }\n        return resultOrDeferred;\n    }\n    getStatusByMethod(requestMethod) {\n        switch (requestMethod) {\n            case common_1.RequestMethod.POST:\n                return common_1.HttpStatus.CREATED;\n            default:\n                return common_1.HttpStatus.OK;\n        }\n    }\n    setHeaders(response, headers) {\n        headers.forEach(({ name, value }) => this.applicationRef.setHeader(response, name, typeof value === 'function' ? value() : value));\n    }\n    setStatus(response, statusCode) {\n        this.applicationRef.status(response, statusCode);\n    }\n    sse(result, response, request, options) {\n        // It's possible that we sent headers already so don't use a stream\n        if (response.writableEnded) {\n            return;\n        }\n        this.assertObservable(result);\n        const stream = new sse_stream_1.SseStream(request);\n        stream.pipe(response, options);\n        const subscription = result\n            .pipe((0, operators_1.map)((message) => {\n            if ((0, shared_utils_1.isObject)(message)) {\n                return message;\n            }\n            return { data: message };\n        }), (0, operators_1.concatMap)(message => new Promise(resolve => stream.writeMessage(message, () => resolve()))), (0, operators_1.catchError)(err => {\n            const data = err instanceof Error ? err.message : err;\n            stream.writeMessage({ type: 'error', data }, writeError => {\n                if (writeError) {\n                    this.logger.error(writeError);\n                }\n            });\n            return rxjs_1.EMPTY;\n        }))\n            .subscribe({\n            complete: () => {\n                response.end();\n            },\n        });\n        request.on('close', () => {\n            subscription.unsubscribe();\n            if (!stream.writableEnded) {\n                stream.end();\n            }\n        });\n    }\n    assertObservable(value) {\n        if (!(0, rxjs_1.isObservable)(value)) {\n            throw new ReferenceError('You must return an Observable stream to use Server-Sent Events (SSE).');\n        }\n    }\n}\nexports.RouterResponseController = RouterResponseController;\n"],"mappings":"AAAA,YAAY;;AAAC,IAAAA,iBAAA,GAAAC,OAAA,wHAAAC,OAAA;AACbC,MAAM,CAACC,cAAc,CAACC,OAAO,EAAE,YAAY,EAAE;EAAEC,KAAK,EAAE;AAAK,CAAC,CAAC;AAC7DD,OAAO,CAACE,wBAAwB,GAAG,KAAK,CAAC;AACzC,MAAMC,QAAQ,GAAGP,OAAO,CAAC,gBAAgB,CAAC;AAC1C,MAAMQ,cAAc,GAAGR,OAAO,CAAC,mCAAmC,CAAC;AACnE,MAAMS,MAAM,GAAGT,OAAO,CAAC,MAAM,CAAC;AAC9B,MAAMU,WAAW,GAAGV,OAAO,CAAC,gBAAgB,CAAC;AAC7C,MAAMW,YAAY,GAAGX,OAAO,CAAC,cAAc,CAAC;AAC5C,MAAMM,wBAAwB,CAAC;EAC3BM,WAAWA,CAACC,cAAc,EAAE;IACxB,IAAI,CAACA,cAAc,GAAGA,cAAc;IACpC,IAAI,CAACC,MAAM,GAAG,IAAIP,QAAQ,CAACQ,MAAM,CAACT,wBAAwB,CAACU,IAAI,CAAC;EACpE;EACMC,KAAKA,CAACC,MAAM,EAAEC,QAAQ,EAAEC,cAAc,EAAE;IAAA,IAAAC,KAAA;IAAA,OAAAtB,iBAAA;MAC1C,OAAOsB,KAAI,CAACR,cAAc,CAACS,KAAK,CAACH,QAAQ,EAAED,MAAM,EAAEE,cAAc,CAAC;IAAC;EACvE;EACMG,QAAQA,CAACC,gBAAgB,EAAEL,QAAQ,EAAEM,gBAAgB,EAAE;IAAA,IAAAC,MAAA;IAAA,OAAA3B,iBAAA;MACzD,MAAMmB,MAAM,SAASQ,MAAI,CAACC,iBAAiB,CAACH,gBAAgB,CAAC;MAC7D,MAAMI,UAAU,GAAGV,MAAM,IAAIA,MAAM,CAACU,UAAU,GACxCV,MAAM,CAACU,UAAU,GACjBH,gBAAgB,CAACG,UAAU,GACvBH,gBAAgB,CAACG,UAAU,GAC3BrB,QAAQ,CAACsB,UAAU,CAACC,KAAK;MACnC,MAAMC,GAAG,GAAGb,MAAM,IAAIA,MAAM,CAACa,GAAG,GAAGb,MAAM,CAACa,GAAG,GAAGN,gBAAgB,CAACM,GAAG;MACpEL,MAAI,CAACb,cAAc,CAACU,QAAQ,CAACJ,QAAQ,EAAES,UAAU,EAAEG,GAAG,CAAC;IAAC;EAC5D;EACMC,MAAMA,CAACR,gBAAgB,EAAEL,QAAQ,EAAEc,QAAQ,EAAE;IAAA,IAAAC,MAAA;IAAA,OAAAnC,iBAAA;MAC/C,MAAMmB,MAAM,SAASgB,MAAI,CAACP,iBAAiB,CAACH,gBAAgB,CAAC;MAC7D,OAAOU,MAAI,CAACrB,cAAc,CAACmB,MAAM,CAACb,QAAQ,EAAEc,QAAQ,EAAEf,MAAM,CAAC;IAAC;EAClE;EACMS,iBAAiBA,CAACH,gBAAgB,EAAE;IAAA,OAAAzB,iBAAA;MACtC,IAAI,CAAC,CAAC,EAAEU,MAAM,CAAC0B,YAAY,EAAEX,gBAAgB,CAAC,EAAE;QAC5C,OAAO,CAAC,CAAC,EAAEf,MAAM,CAAC2B,aAAa,EAAEZ,gBAAgB,CAAC;MACtD;MACA,OAAOA,gBAAgB;IAAC;EAC5B;EACAa,iBAAiBA,CAACC,aAAa,EAAE;IAC7B,QAAQA,aAAa;MACjB,KAAK/B,QAAQ,CAACgC,aAAa,CAACC,IAAI;QAC5B,OAAOjC,QAAQ,CAACsB,UAAU,CAACY,OAAO;MACtC;QACI,OAAOlC,QAAQ,CAACsB,UAAU,CAACa,EAAE;IACrC;EACJ;EACAC,UAAUA,CAACxB,QAAQ,EAAEyB,OAAO,EAAE;IAC1BA,OAAO,CAACC,OAAO,CAAC,CAAC;MAAE7B,IAAI;MAAEX;IAAM,CAAC,KAAK,IAAI,CAACQ,cAAc,CAACiC,SAAS,CAAC3B,QAAQ,EAAEH,IAAI,EAAE,OAAOX,KAAK,KAAK,UAAU,GAAGA,KAAK,CAAC,CAAC,GAAGA,KAAK,CAAC,CAAC;EACtI;EACA0C,SAASA,CAAC5B,QAAQ,EAAES,UAAU,EAAE;IAC5B,IAAI,CAACf,cAAc,CAACmC,MAAM,CAAC7B,QAAQ,EAAES,UAAU,CAAC;EACpD;EACAqB,GAAGA,CAAC/B,MAAM,EAAEC,QAAQ,EAAE+B,OAAO,EAAEC,OAAO,EAAE;IACpC;IACA,IAAIhC,QAAQ,CAACiC,aAAa,EAAE;MACxB;IACJ;IACA,IAAI,CAACC,gBAAgB,CAACnC,MAAM,CAAC;IAC7B,MAAMoC,MAAM,GAAG,IAAI3C,YAAY,CAAC4C,SAAS,CAACL,OAAO,CAAC;IAClDI,MAAM,CAACE,IAAI,CAACrC,QAAQ,EAAEgC,OAAO,CAAC;IAC9B,MAAMM,YAAY,GAAGvC,MAAM,CACtBsC,IAAI,CAAC,CAAC,CAAC,EAAE9C,WAAW,CAACgD,GAAG,EAAGC,OAAO,IAAK;MACxC,IAAI,CAAC,CAAC,EAAEnD,cAAc,CAACoD,QAAQ,EAAED,OAAO,CAAC,EAAE;QACvC,OAAOA,OAAO;MAClB;MACA,OAAO;QAAEE,IAAI,EAAEF;MAAQ,CAAC;IAC5B,CAAC,CAAC,EAAE,CAAC,CAAC,EAAEjD,WAAW,CAACoD,SAAS,EAAEH,OAAO,IAAI,IAAII,OAAO,CAACC,OAAO,IAAIV,MAAM,CAACW,YAAY,CAACN,OAAO,EAAE,MAAMK,OAAO,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,EAAEtD,WAAW,CAACwD,UAAU,EAAEC,GAAG,IAAI;MACjJ,MAAMN,IAAI,GAAGM,GAAG,YAAYC,KAAK,GAAGD,GAAG,CAACR,OAAO,GAAGQ,GAAG;MACrDb,MAAM,CAACW,YAAY,CAAC;QAAEI,IAAI,EAAE,OAAO;QAAER;MAAK,CAAC,EAAES,UAAU,IAAI;QACvD,IAAIA,UAAU,EAAE;UACZ,IAAI,CAACxD,MAAM,CAACyD,KAAK,CAACD,UAAU,CAAC;QACjC;MACJ,CAAC,CAAC;MACF,OAAO7D,MAAM,CAAC+D,KAAK;IACvB,CAAC,CAAC,CAAC,CACEC,SAAS,CAAC;MACXC,QAAQ,EAAEA,CAAA,KAAM;QACZvD,QAAQ,CAACwD,GAAG,CAAC,CAAC;MAClB;IACJ,CAAC,CAAC;IACFzB,OAAO,CAAC0B,EAAE,CAAC,OAAO,EAAE,MAAM;MACtBnB,YAAY,CAACoB,WAAW,CAAC,CAAC;MAC1B,IAAI,CAACvB,MAAM,CAACF,aAAa,EAAE;QACvBE,MAAM,CAACqB,GAAG,CAAC,CAAC;MAChB;IACJ,CAAC,CAAC;EACN;EACAtB,gBAAgBA,CAAChD,KAAK,EAAE;IACpB,IAAI,CAAC,CAAC,CAAC,EAAEI,MAAM,CAAC0B,YAAY,EAAE9B,KAAK,CAAC,EAAE;MAClC,MAAM,IAAIyE,cAAc,CAAC,uEAAuE,CAAC;IACrG;EACJ;AACJ;AACA1E,OAAO,CAACE,wBAAwB,GAAGA,wBAAwB","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}