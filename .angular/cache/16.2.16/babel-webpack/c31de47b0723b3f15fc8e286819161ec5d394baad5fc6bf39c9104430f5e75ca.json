{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.MethodsReplFn = void 0;\nconst cli_colors_util_1 = require(\"@nestjs/common/utils/cli-colors.util\");\nconst metadata_scanner_1 = require(\"../../metadata-scanner\");\nconst repl_function_1 = require(\"../repl-function\");\nclass MethodsReplFn extends repl_function_1.ReplFunction {\n  constructor() {\n    super(...arguments);\n    this.fnDefinition = {\n      name: 'methods',\n      description: 'Display all public methods available on a given provider or controller.',\n      signature: '(token: ClassRef | string) => void'\n    };\n    this.metadataScanner = new metadata_scanner_1.MetadataScanner();\n  }\n  action(token) {\n    const proto = typeof token !== 'function' ? Object.getPrototypeOf(this.ctx.app.get(token)) : token?.prototype;\n    const methods = this.metadataScanner.getAllMethodNames(proto);\n    this.ctx.writeToStdout('\\n');\n    this.ctx.writeToStdout(`${cli_colors_util_1.clc.green('Methods')}:\\n`);\n    methods.forEach(methodName => this.ctx.writeToStdout(` ${cli_colors_util_1.clc.yellow('◻')} ${methodName}\\n`));\n    this.ctx.writeToStdout('\\n');\n  }\n}\nexports.MethodsReplFn = MethodsReplFn;","map":{"version":3,"names":["Object","defineProperty","exports","value","MethodsReplFn","cli_colors_util_1","require","metadata_scanner_1","repl_function_1","ReplFunction","constructor","arguments","fnDefinition","name","description","signature","metadataScanner","MetadataScanner","action","token","proto","getPrototypeOf","ctx","app","get","prototype","methods","getAllMethodNames","writeToStdout","clc","green","forEach","methodName","yellow"],"sources":["C:/Users/salim/Dev/avans-nx-workshop-2024/avans-nx-workshop/node_modules/@nestjs/core/repl/native-functions/methods-repl-fn.js"],"sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.MethodsReplFn = void 0;\nconst cli_colors_util_1 = require(\"@nestjs/common/utils/cli-colors.util\");\nconst metadata_scanner_1 = require(\"../../metadata-scanner\");\nconst repl_function_1 = require(\"../repl-function\");\nclass MethodsReplFn extends repl_function_1.ReplFunction {\n    constructor() {\n        super(...arguments);\n        this.fnDefinition = {\n            name: 'methods',\n            description: 'Display all public methods available on a given provider or controller.',\n            signature: '(token: ClassRef | string) => void',\n        };\n        this.metadataScanner = new metadata_scanner_1.MetadataScanner();\n    }\n    action(token) {\n        const proto = typeof token !== 'function'\n            ? Object.getPrototypeOf(this.ctx.app.get(token))\n            : token?.prototype;\n        const methods = this.metadataScanner.getAllMethodNames(proto);\n        this.ctx.writeToStdout('\\n');\n        this.ctx.writeToStdout(`${cli_colors_util_1.clc.green('Methods')}:\\n`);\n        methods.forEach(methodName => this.ctx.writeToStdout(` ${cli_colors_util_1.clc.yellow('◻')} ${methodName}\\n`));\n        this.ctx.writeToStdout('\\n');\n    }\n}\nexports.MethodsReplFn = MethodsReplFn;\n"],"mappings":"AAAA,YAAY;;AACZA,MAAM,CAACC,cAAc,CAACC,OAAO,EAAE,YAAY,EAAE;EAAEC,KAAK,EAAE;AAAK,CAAC,CAAC;AAC7DD,OAAO,CAACE,aAAa,GAAG,KAAK,CAAC;AAC9B,MAAMC,iBAAiB,GAAGC,OAAO,CAAC,sCAAsC,CAAC;AACzE,MAAMC,kBAAkB,GAAGD,OAAO,CAAC,wBAAwB,CAAC;AAC5D,MAAME,eAAe,GAAGF,OAAO,CAAC,kBAAkB,CAAC;AACnD,MAAMF,aAAa,SAASI,eAAe,CAACC,YAAY,CAAC;EACrDC,WAAWA,CAAA,EAAG;IACV,KAAK,CAAC,GAAGC,SAAS,CAAC;IACnB,IAAI,CAACC,YAAY,GAAG;MAChBC,IAAI,EAAE,SAAS;MACfC,WAAW,EAAE,yEAAyE;MACtFC,SAAS,EAAE;IACf,CAAC;IACD,IAAI,CAACC,eAAe,GAAG,IAAIT,kBAAkB,CAACU,eAAe,CAAC,CAAC;EACnE;EACAC,MAAMA,CAACC,KAAK,EAAE;IACV,MAAMC,KAAK,GAAG,OAAOD,KAAK,KAAK,UAAU,GACnCnB,MAAM,CAACqB,cAAc,CAAC,IAAI,CAACC,GAAG,CAACC,GAAG,CAACC,GAAG,CAACL,KAAK,CAAC,CAAC,GAC9CA,KAAK,EAAEM,SAAS;IACtB,MAAMC,OAAO,GAAG,IAAI,CAACV,eAAe,CAACW,iBAAiB,CAACP,KAAK,CAAC;IAC7D,IAAI,CAACE,GAAG,CAACM,aAAa,CAAC,IAAI,CAAC;IAC5B,IAAI,CAACN,GAAG,CAACM,aAAa,CAAE,GAAEvB,iBAAiB,CAACwB,GAAG,CAACC,KAAK,CAAC,SAAS,CAAE,KAAI,CAAC;IACtEJ,OAAO,CAACK,OAAO,CAACC,UAAU,IAAI,IAAI,CAACV,GAAG,CAACM,aAAa,CAAE,IAAGvB,iBAAiB,CAACwB,GAAG,CAACI,MAAM,CAAC,GAAG,CAAE,IAAGD,UAAW,IAAG,CAAC,CAAC;IAC9G,IAAI,CAACV,GAAG,CAACM,aAAa,CAAC,IAAI,CAAC;EAChC;AACJ;AACA1B,OAAO,CAACE,aAAa,GAAGA,aAAa","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}