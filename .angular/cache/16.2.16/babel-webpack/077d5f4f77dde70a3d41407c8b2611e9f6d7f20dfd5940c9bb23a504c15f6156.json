{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.SetMetadata = void 0;\n/**\n * Decorator that assigns metadata to the class/function using the\n * specified `key`.\n *\n * Requires two parameters:\n * - `key` - a value defining the key under which the metadata is stored\n * - `value` - metadata to be associated with `key`\n *\n * This metadata can be reflected using the `Reflector` class.\n *\n * Example: `@SetMetadata('roles', ['admin'])`\n *\n * @see [Reflection](https://docs.nestjs.com/fundamentals/execution-context#reflection-and-metadata)\n *\n * @publicApi\n */\nconst SetMetadata = (metadataKey, metadataValue) => {\n  const decoratorFactory = (target, key, descriptor) => {\n    if (descriptor) {\n      Reflect.defineMetadata(metadataKey, metadataValue, descriptor.value);\n      return descriptor;\n    }\n    Reflect.defineMetadata(metadataKey, metadataValue, target);\n    return target;\n  };\n  decoratorFactory.KEY = metadataKey;\n  return decoratorFactory;\n};\nexports.SetMetadata = SetMetadata;","map":{"version":3,"names":["Object","defineProperty","exports","value","SetMetadata","metadataKey","metadataValue","decoratorFactory","target","key","descriptor","Reflect","defineMetadata","KEY"],"sources":["C:/Users/salim/Dev/avans-nx-workshop-2024/avans-nx-workshop/node_modules/@nestjs/common/decorators/core/set-metadata.decorator.js"],"sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.SetMetadata = void 0;\n/**\n * Decorator that assigns metadata to the class/function using the\n * specified `key`.\n *\n * Requires two parameters:\n * - `key` - a value defining the key under which the metadata is stored\n * - `value` - metadata to be associated with `key`\n *\n * This metadata can be reflected using the `Reflector` class.\n *\n * Example: `@SetMetadata('roles', ['admin'])`\n *\n * @see [Reflection](https://docs.nestjs.com/fundamentals/execution-context#reflection-and-metadata)\n *\n * @publicApi\n */\nconst SetMetadata = (metadataKey, metadataValue) => {\n    const decoratorFactory = (target, key, descriptor) => {\n        if (descriptor) {\n            Reflect.defineMetadata(metadataKey, metadataValue, descriptor.value);\n            return descriptor;\n        }\n        Reflect.defineMetadata(metadataKey, metadataValue, target);\n        return target;\n    };\n    decoratorFactory.KEY = metadataKey;\n    return decoratorFactory;\n};\nexports.SetMetadata = SetMetadata;\n"],"mappings":"AAAA,YAAY;;AACZA,MAAM,CAACC,cAAc,CAACC,OAAO,EAAE,YAAY,EAAE;EAAEC,KAAK,EAAE;AAAK,CAAC,CAAC;AAC7DD,OAAO,CAACE,WAAW,GAAG,KAAK,CAAC;AAC5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAMA,WAAW,GAAGA,CAACC,WAAW,EAAEC,aAAa,KAAK;EAChD,MAAMC,gBAAgB,GAAGA,CAACC,MAAM,EAAEC,GAAG,EAAEC,UAAU,KAAK;IAClD,IAAIA,UAAU,EAAE;MACZC,OAAO,CAACC,cAAc,CAACP,WAAW,EAAEC,aAAa,EAAEI,UAAU,CAACP,KAAK,CAAC;MACpE,OAAOO,UAAU;IACrB;IACAC,OAAO,CAACC,cAAc,CAACP,WAAW,EAAEC,aAAa,EAAEE,MAAM,CAAC;IAC1D,OAAOA,MAAM;EACjB,CAAC;EACDD,gBAAgB,CAACM,GAAG,GAAGR,WAAW;EAClC,OAAOE,gBAAgB;AAC3B,CAAC;AACDL,OAAO,CAACE,WAAW,GAAGA,WAAW","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}