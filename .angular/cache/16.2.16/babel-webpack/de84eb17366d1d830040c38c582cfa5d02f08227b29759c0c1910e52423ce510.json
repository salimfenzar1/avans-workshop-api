{"ast":null,"code":"/**\n * Convert the constraint to a string to be shown in an error\n */\nexport function constraintToString(constraint) {\n  if (Array.isArray(constraint)) {\n    return constraint.join(', ');\n  }\n  if (typeof constraint === 'symbol') {\n    constraint = constraint.description;\n  }\n  return `${constraint}`;\n}\nexport class ValidationUtils {\n  static replaceMessageSpecialTokens(message, validationArguments) {\n    let messageString;\n    if (message instanceof Function) {\n      messageString = message(validationArguments);\n    } else if (typeof message === 'string') {\n      messageString = message;\n    }\n    if (messageString && Array.isArray(validationArguments.constraints)) {\n      validationArguments.constraints.forEach((constraint, index) => {\n        messageString = messageString.replace(new RegExp(`\\\\$constraint${index + 1}`, 'g'), constraintToString(constraint));\n      });\n    }\n    if (messageString && validationArguments.value !== undefined && validationArguments.value !== null && ['string', 'boolean', 'number'].includes(typeof validationArguments.value)) messageString = messageString.replace(/\\$value/g, validationArguments.value);\n    if (messageString) messageString = messageString.replace(/\\$property/g, validationArguments.property);\n    if (messageString) messageString = messageString.replace(/\\$target/g, validationArguments.targetName);\n    return messageString;\n  }\n}","map":{"version":3,"names":["constraintToString","constraint","Array","isArray","join","description","ValidationUtils","replaceMessageSpecialTokens","message","validationArguments","messageString","Function","constraints","forEach","index","replace","RegExp","value","undefined","includes","property","targetName"],"sources":["C:/Users/salim/Dev/avans-nx-workshop-2024/avans-nx-workshop/node_modules/class-validator/esm2015/validation/ValidationUtils.js"],"sourcesContent":["/**\n * Convert the constraint to a string to be shown in an error\n */\nexport function constraintToString(constraint) {\n    if (Array.isArray(constraint)) {\n        return constraint.join(', ');\n    }\n    if (typeof constraint === 'symbol') {\n        constraint = constraint.description;\n    }\n    return `${constraint}`;\n}\nexport class ValidationUtils {\n    static replaceMessageSpecialTokens(message, validationArguments) {\n        let messageString;\n        if (message instanceof Function) {\n            messageString = message(validationArguments);\n        }\n        else if (typeof message === 'string') {\n            messageString = message;\n        }\n        if (messageString && Array.isArray(validationArguments.constraints)) {\n            validationArguments.constraints.forEach((constraint, index) => {\n                messageString = messageString.replace(new RegExp(`\\\\$constraint${index + 1}`, 'g'), constraintToString(constraint));\n            });\n        }\n        if (messageString &&\n            validationArguments.value !== undefined &&\n            validationArguments.value !== null &&\n            ['string', 'boolean', 'number'].includes(typeof validationArguments.value))\n            messageString = messageString.replace(/\\$value/g, validationArguments.value);\n        if (messageString)\n            messageString = messageString.replace(/\\$property/g, validationArguments.property);\n        if (messageString)\n            messageString = messageString.replace(/\\$target/g, validationArguments.targetName);\n        return messageString;\n    }\n}\n"],"mappings":"AAAA;AACA;AACA;AACA,OAAO,SAASA,kBAAkBA,CAACC,UAAU,EAAE;EAC3C,IAAIC,KAAK,CAACC,OAAO,CAACF,UAAU,CAAC,EAAE;IAC3B,OAAOA,UAAU,CAACG,IAAI,CAAC,IAAI,CAAC;EAChC;EACA,IAAI,OAAOH,UAAU,KAAK,QAAQ,EAAE;IAChCA,UAAU,GAAGA,UAAU,CAACI,WAAW;EACvC;EACA,OAAQ,GAAEJ,UAAW,EAAC;AAC1B;AACA,OAAO,MAAMK,eAAe,CAAC;EACzB,OAAOC,2BAA2BA,CAACC,OAAO,EAAEC,mBAAmB,EAAE;IAC7D,IAAIC,aAAa;IACjB,IAAIF,OAAO,YAAYG,QAAQ,EAAE;MAC7BD,aAAa,GAAGF,OAAO,CAACC,mBAAmB,CAAC;IAChD,CAAC,MACI,IAAI,OAAOD,OAAO,KAAK,QAAQ,EAAE;MAClCE,aAAa,GAAGF,OAAO;IAC3B;IACA,IAAIE,aAAa,IAAIR,KAAK,CAACC,OAAO,CAACM,mBAAmB,CAACG,WAAW,CAAC,EAAE;MACjEH,mBAAmB,CAACG,WAAW,CAACC,OAAO,CAAC,CAACZ,UAAU,EAAEa,KAAK,KAAK;QAC3DJ,aAAa,GAAGA,aAAa,CAACK,OAAO,CAAC,IAAIC,MAAM,CAAE,gBAAeF,KAAK,GAAG,CAAE,EAAC,EAAE,GAAG,CAAC,EAAEd,kBAAkB,CAACC,UAAU,CAAC,CAAC;MACvH,CAAC,CAAC;IACN;IACA,IAAIS,aAAa,IACbD,mBAAmB,CAACQ,KAAK,KAAKC,SAAS,IACvCT,mBAAmB,CAACQ,KAAK,KAAK,IAAI,IAClC,CAAC,QAAQ,EAAE,SAAS,EAAE,QAAQ,CAAC,CAACE,QAAQ,CAAC,OAAOV,mBAAmB,CAACQ,KAAK,CAAC,EAC1EP,aAAa,GAAGA,aAAa,CAACK,OAAO,CAAC,UAAU,EAAEN,mBAAmB,CAACQ,KAAK,CAAC;IAChF,IAAIP,aAAa,EACbA,aAAa,GAAGA,aAAa,CAACK,OAAO,CAAC,aAAa,EAAEN,mBAAmB,CAACW,QAAQ,CAAC;IACtF,IAAIV,aAAa,EACbA,aAAa,GAAGA,aAAa,CAACK,OAAO,CAAC,WAAW,EAAEN,mBAAmB,CAACY,UAAU,CAAC;IACtF,OAAOX,aAAa;EACxB;AACJ","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}