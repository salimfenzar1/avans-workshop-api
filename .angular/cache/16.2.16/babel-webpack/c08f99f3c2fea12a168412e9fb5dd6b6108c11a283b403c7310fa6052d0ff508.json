{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.getModelToken = getModelToken;\nexports.getConnectionToken = getConnectionToken;\nexports.handleRetry = handleRetry;\nconst common_1 = require(\"@nestjs/common\");\nconst operators_1 = require(\"rxjs/operators\");\nconst mongoose_constants_1 = require(\"../mongoose.constants\");\nfunction getModelToken(model, connectionName) {\n  if (connectionName === undefined) {\n    return `${model}Model`;\n  }\n  return `${getConnectionToken(connectionName)}/${model}Model`;\n}\nfunction getConnectionToken(name) {\n  return name && name !== mongoose_constants_1.DEFAULT_DB_CONNECTION ? `${name}Connection` : mongoose_constants_1.DEFAULT_DB_CONNECTION;\n}\nfunction handleRetry(retryAttempts = 9, retryDelay = 3000, verboseRetryLog = false) {\n  const logger = new common_1.Logger('MongooseModule');\n  return source => source.pipe((0, operators_1.retryWhen)(e => e.pipe((0, operators_1.scan)((errorCount, error) => {\n    const verboseMessage = verboseRetryLog ? ` Message: ${error.message}.` : \"\";\n    const retryMessage = retryAttempts > 0 ? ` Retrying (${errorCount + 1})...` : \"\";\n    logger.error([\"Unable to connect to the database.\", verboseMessage, retryMessage].join(\"\"), error.stack);\n    if (errorCount + 1 >= retryAttempts) {\n      throw error;\n    }\n    return errorCount + 1;\n  }, 0), (0, operators_1.delay)(retryDelay))));\n}","map":{"version":3,"names":["Object","defineProperty","exports","value","getModelToken","getConnectionToken","handleRetry","common_1","require","operators_1","mongoose_constants_1","model","connectionName","undefined","name","DEFAULT_DB_CONNECTION","retryAttempts","retryDelay","verboseRetryLog","logger","Logger","source","pipe","retryWhen","e","scan","errorCount","error","verboseMessage","message","retryMessage","join","stack","delay"],"sources":["C:/Users/salim/Dev/avans-nx-workshop-2024/avans-nx-workshop/node_modules/@nestjs/mongoose/dist/common/mongoose.utils.js"],"sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.getModelToken = getModelToken;\nexports.getConnectionToken = getConnectionToken;\nexports.handleRetry = handleRetry;\nconst common_1 = require(\"@nestjs/common\");\nconst operators_1 = require(\"rxjs/operators\");\nconst mongoose_constants_1 = require(\"../mongoose.constants\");\nfunction getModelToken(model, connectionName) {\n    if (connectionName === undefined) {\n        return `${model}Model`;\n    }\n    return `${getConnectionToken(connectionName)}/${model}Model`;\n}\nfunction getConnectionToken(name) {\n    return name && name !== mongoose_constants_1.DEFAULT_DB_CONNECTION\n        ? `${name}Connection`\n        : mongoose_constants_1.DEFAULT_DB_CONNECTION;\n}\nfunction handleRetry(retryAttempts = 9, retryDelay = 3000, verboseRetryLog = false) {\n    const logger = new common_1.Logger('MongooseModule');\n    return (source) => source.pipe((0, operators_1.retryWhen)((e) => e.pipe((0, operators_1.scan)((errorCount, error) => {\n        const verboseMessage = verboseRetryLog\n            ? ` Message: ${error.message}.`\n            : \"\";\n        const retryMessage = retryAttempts > 0\n            ? ` Retrying (${errorCount + 1})...`\n            : \"\";\n        logger.error([\n            \"Unable to connect to the database.\",\n            verboseMessage,\n            retryMessage,\n        ].join(\"\"), error.stack);\n        if (errorCount + 1 >= retryAttempts) {\n            throw error;\n        }\n        return errorCount + 1;\n    }, 0), (0, operators_1.delay)(retryDelay))));\n}\n"],"mappings":"AAAA,YAAY;;AACZA,MAAM,CAACC,cAAc,CAACC,OAAO,EAAE,YAAY,EAAE;EAAEC,KAAK,EAAE;AAAK,CAAC,CAAC;AAC7DD,OAAO,CAACE,aAAa,GAAGA,aAAa;AACrCF,OAAO,CAACG,kBAAkB,GAAGA,kBAAkB;AAC/CH,OAAO,CAACI,WAAW,GAAGA,WAAW;AACjC,MAAMC,QAAQ,GAAGC,OAAO,CAAC,gBAAgB,CAAC;AAC1C,MAAMC,WAAW,GAAGD,OAAO,CAAC,gBAAgB,CAAC;AAC7C,MAAME,oBAAoB,GAAGF,OAAO,CAAC,uBAAuB,CAAC;AAC7D,SAASJ,aAAaA,CAACO,KAAK,EAAEC,cAAc,EAAE;EAC1C,IAAIA,cAAc,KAAKC,SAAS,EAAE;IAC9B,OAAQ,GAAEF,KAAM,OAAM;EAC1B;EACA,OAAQ,GAAEN,kBAAkB,CAACO,cAAc,CAAE,IAAGD,KAAM,OAAM;AAChE;AACA,SAASN,kBAAkBA,CAACS,IAAI,EAAE;EAC9B,OAAOA,IAAI,IAAIA,IAAI,KAAKJ,oBAAoB,CAACK,qBAAqB,GAC3D,GAAED,IAAK,YAAW,GACnBJ,oBAAoB,CAACK,qBAAqB;AACpD;AACA,SAAST,WAAWA,CAACU,aAAa,GAAG,CAAC,EAAEC,UAAU,GAAG,IAAI,EAAEC,eAAe,GAAG,KAAK,EAAE;EAChF,MAAMC,MAAM,GAAG,IAAIZ,QAAQ,CAACa,MAAM,CAAC,gBAAgB,CAAC;EACpD,OAAQC,MAAM,IAAKA,MAAM,CAACC,IAAI,CAAC,CAAC,CAAC,EAAEb,WAAW,CAACc,SAAS,EAAGC,CAAC,IAAKA,CAAC,CAACF,IAAI,CAAC,CAAC,CAAC,EAAEb,WAAW,CAACgB,IAAI,EAAE,CAACC,UAAU,EAAEC,KAAK,KAAK;IACjH,MAAMC,cAAc,GAAGV,eAAe,GAC/B,aAAYS,KAAK,CAACE,OAAQ,GAAE,GAC7B,EAAE;IACR,MAAMC,YAAY,GAAGd,aAAa,GAAG,CAAC,GAC/B,cAAaU,UAAU,GAAG,CAAE,MAAK,GAClC,EAAE;IACRP,MAAM,CAACQ,KAAK,CAAC,CACT,oCAAoC,EACpCC,cAAc,EACdE,YAAY,CACf,CAACC,IAAI,CAAC,EAAE,CAAC,EAAEJ,KAAK,CAACK,KAAK,CAAC;IACxB,IAAIN,UAAU,GAAG,CAAC,IAAIV,aAAa,EAAE;MACjC,MAAMW,KAAK;IACf;IACA,OAAOD,UAAU,GAAG,CAAC;EACzB,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAEjB,WAAW,CAACwB,KAAK,EAAEhB,UAAU,CAAC,CAAC,CAAC,CAAC;AAChD","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}