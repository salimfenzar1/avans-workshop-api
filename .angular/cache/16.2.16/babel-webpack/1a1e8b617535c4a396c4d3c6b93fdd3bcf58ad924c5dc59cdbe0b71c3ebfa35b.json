{"ast":null,"code":"\"use strict\";\n\nvar _asyncToGenerator = require(\"C:/Users/salim/Dev/avans-nx-workshop-2024/avans-nx-workshop/node_modules/@babel/runtime/helpers/asyncToGenerator.js\").default;\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.createMongooseProviders = createMongooseProviders;\nexports.createMongooseAsyncProviders = createMongooseAsyncProviders;\nconst mongoose_utils_1 = require(\"./common/mongoose.utils\");\nfunction createMongooseProviders(connectionName, options = []) {\n  return options.reduce((providers, option) => [...providers, ...(option.discriminators || []).map(d => ({\n    provide: (0, mongoose_utils_1.getModelToken)(d.name, connectionName),\n    useFactory: model => model.discriminator(d.name, d.schema, d.value),\n    inject: [(0, mongoose_utils_1.getModelToken)(option.name, connectionName)]\n  })), {\n    provide: (0, mongoose_utils_1.getModelToken)(option.name, connectionName),\n    useFactory: connection => {\n      const model = connection.models[option.name] ? connection.models[option.name] : connection.model(option.name, option.schema, option.collection);\n      return model;\n    },\n    inject: [(0, mongoose_utils_1.getConnectionToken)(connectionName)]\n  }], []);\n}\nfunction createMongooseAsyncProviders(connectionName, modelFactories = []) {\n  return modelFactories.reduce((providers, option) => {\n    return [...providers, {\n      provide: (0, mongoose_utils_1.getModelToken)(option.name, connectionName),\n      useFactory: function () {\n        var _ref = _asyncToGenerator(function* (connection, ...args) {\n          const schema = yield option.useFactory(...args);\n          const model = connection.model(option.name, schema, option.collection);\n          return model;\n        });\n        return function useFactory(_x) {\n          return _ref.apply(this, arguments);\n        };\n      }(),\n      inject: [(0, mongoose_utils_1.getConnectionToken)(connectionName), ...(option.inject || [])]\n    }, ...(option.discriminators || []).map(d => ({\n      provide: (0, mongoose_utils_1.getModelToken)(d.name, connectionName),\n      useFactory: model => model.discriminator(d.name, d.schema, d.value),\n      inject: [(0, mongoose_utils_1.getModelToken)(option.name, connectionName)]\n    }))];\n  }, []);\n}","map":{"version":3,"names":["_asyncToGenerator","require","default","Object","defineProperty","exports","value","createMongooseProviders","createMongooseAsyncProviders","mongoose_utils_1","connectionName","options","reduce","providers","option","discriminators","map","d","provide","getModelToken","name","useFactory","model","discriminator","schema","inject","connection","models","collection","getConnectionToken","modelFactories","_ref","args","_x","apply","arguments"],"sources":["C:/Users/salim/Dev/avans-nx-workshop-2024/avans-nx-workshop/node_modules/@nestjs/mongoose/dist/mongoose.providers.js"],"sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.createMongooseProviders = createMongooseProviders;\nexports.createMongooseAsyncProviders = createMongooseAsyncProviders;\nconst mongoose_utils_1 = require(\"./common/mongoose.utils\");\nfunction createMongooseProviders(connectionName, options = []) {\n    return options.reduce((providers, option) => [\n        ...providers,\n        ...(option.discriminators || []).map((d) => ({\n            provide: (0, mongoose_utils_1.getModelToken)(d.name, connectionName),\n            useFactory: (model) => model.discriminator(d.name, d.schema, d.value),\n            inject: [(0, mongoose_utils_1.getModelToken)(option.name, connectionName)],\n        })),\n        {\n            provide: (0, mongoose_utils_1.getModelToken)(option.name, connectionName),\n            useFactory: (connection) => {\n                const model = connection.models[option.name] ? connection.models[option.name] : connection.model(option.name, option.schema, option.collection);\n                return model;\n            },\n            inject: [(0, mongoose_utils_1.getConnectionToken)(connectionName)],\n        },\n    ], []);\n}\nfunction createMongooseAsyncProviders(connectionName, modelFactories = []) {\n    return modelFactories.reduce((providers, option) => {\n        return [\n            ...providers,\n            {\n                provide: (0, mongoose_utils_1.getModelToken)(option.name, connectionName),\n                useFactory: async (connection, ...args) => {\n                    const schema = await option.useFactory(...args);\n                    const model = connection.model(option.name, schema, option.collection);\n                    return model;\n                },\n                inject: [(0, mongoose_utils_1.getConnectionToken)(connectionName), ...(option.inject || [])],\n            },\n            ...(option.discriminators || []).map((d) => ({\n                provide: (0, mongoose_utils_1.getModelToken)(d.name, connectionName),\n                useFactory: (model) => model.discriminator(d.name, d.schema, d.value),\n                inject: [(0, mongoose_utils_1.getModelToken)(option.name, connectionName)],\n            })),\n        ];\n    }, []);\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}