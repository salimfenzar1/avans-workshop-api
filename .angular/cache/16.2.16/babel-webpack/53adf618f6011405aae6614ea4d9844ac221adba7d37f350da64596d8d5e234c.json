{"ast":null,"code":"\"use strict\";\n\nvar _asyncToGenerator = require(\"C:/Users/salim/Dev/avans-nx-workshop-2024/avans-nx-workshop/node_modules/@babel/runtime/helpers/asyncToGenerator.js\").default;\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.NestApplication = void 0;\nconst common_1 = require(\"@nestjs/common\");\nconst logger_service_1 = require(\"@nestjs/common/services/logger.service\");\nconst load_package_util_1 = require(\"@nestjs/common/utils/load-package.util\");\nconst shared_utils_1 = require(\"@nestjs/common/utils/shared.utils\");\nconst iterare_1 = require(\"iterare\");\nconst os_1 = require(\"os\");\nconst application_config_1 = require(\"./application-config\");\nconst constants_1 = require(\"./constants\");\nconst optional_require_1 = require(\"./helpers/optional-require\");\nconst injector_1 = require(\"./injector/injector\");\nconst container_1 = require(\"./middleware/container\");\nconst middleware_module_1 = require(\"./middleware/middleware-module\");\nconst utils_1 = require(\"./middleware/utils\");\nconst nest_application_context_1 = require(\"./nest-application-context\");\nconst routes_resolver_1 = require(\"./router/routes-resolver\");\nconst {\n  SocketModule\n} = (0, optional_require_1.optionalRequire)('@nestjs/websockets/socket-module', () => require('@nestjs/websockets/socket-module'));\nconst {\n  MicroservicesModule\n} = (0, optional_require_1.optionalRequire)('@nestjs/microservices/microservices-module', () => require('@nestjs/microservices/microservices-module'));\n/**\n * @publicApi\n */\nclass NestApplication extends nest_application_context_1.NestApplicationContext {\n  constructor(container, httpAdapter, config, graphInspector, appOptions = {}) {\n    super(container, appOptions);\n    this.httpAdapter = httpAdapter;\n    this.config = config;\n    this.graphInspector = graphInspector;\n    this.logger = new logger_service_1.Logger(NestApplication.name, {\n      timestamp: true\n    });\n    this.middlewareContainer = new container_1.MiddlewareContainer(this.container);\n    this.microservicesModule = MicroservicesModule && new MicroservicesModule();\n    this.socketModule = SocketModule && new SocketModule();\n    this.microservices = [];\n    this.isListening = false;\n    this.selectContextModule();\n    this.registerHttpServer();\n    this.injector = new injector_1.Injector({\n      preview: this.appOptions.preview\n    });\n    this.middlewareModule = new middleware_module_1.MiddlewareModule();\n    this.routesResolver = new routes_resolver_1.RoutesResolver(this.container, this.config, this.injector, this.graphInspector);\n  }\n  dispose() {\n    var _this = this;\n    return _asyncToGenerator(function* () {\n      _this.socketModule && (yield _this.socketModule.close());\n      _this.microservicesModule && (yield _this.microservicesModule.close());\n      _this.httpAdapter && (yield _this.httpAdapter.close());\n      yield Promise.all((0, iterare_1.iterate)(_this.microservices).map( /*#__PURE__*/function () {\n        var _ref = _asyncToGenerator(function* (microservice) {\n          microservice.setIsTerminated(true);\n          yield microservice.close();\n        });\n        return function (_x) {\n          return _ref.apply(this, arguments);\n        };\n      }()));\n    })();\n  }\n  getHttpAdapter() {\n    return this.httpAdapter;\n  }\n  registerHttpServer() {\n    this.httpServer = this.createServer();\n  }\n  getUnderlyingHttpServer() {\n    return this.httpAdapter.getHttpServer();\n  }\n  applyOptions() {\n    if (!this.appOptions || !this.appOptions.cors) {\n      return undefined;\n    }\n    const passCustomOptions = (0, shared_utils_1.isObject)(this.appOptions.cors) || (0, shared_utils_1.isFunction)(this.appOptions.cors);\n    if (!passCustomOptions) {\n      return this.enableCors();\n    }\n    return this.enableCors(this.appOptions.cors);\n  }\n  createServer() {\n    this.httpAdapter.initHttpServer(this.appOptions);\n    return this.httpAdapter.getHttpServer();\n  }\n  registerModules() {\n    var _this2 = this;\n    return _asyncToGenerator(function* () {\n      _this2.registerWsModule();\n      if (_this2.microservicesModule) {\n        _this2.microservicesModule.register(_this2.container, _this2.graphInspector, _this2.config, _this2.appOptions);\n        _this2.microservicesModule.setupClients(_this2.container);\n      }\n      yield _this2.middlewareModule.register(_this2.middlewareContainer, _this2.container, _this2.config, _this2.injector, _this2.httpAdapter, _this2.graphInspector, _this2.appOptions);\n    })();\n  }\n  registerWsModule() {\n    if (!this.socketModule) {\n      return;\n    }\n    this.socketModule.register(this.container, this.config, this.graphInspector, this.appOptions, this.httpServer);\n  }\n  init() {\n    var _this3 = this;\n    return _asyncToGenerator(function* () {\n      if (_this3.isInitialized) {\n        return _this3;\n      }\n      _this3.applyOptions();\n      yield _this3.httpAdapter?.init();\n      const useBodyParser = _this3.appOptions && _this3.appOptions.bodyParser !== false;\n      useBodyParser && _this3.registerParserMiddleware();\n      yield _this3.registerModules();\n      yield _this3.registerRouter();\n      yield _this3.callInitHook();\n      yield _this3.registerRouterHooks();\n      yield _this3.callBootstrapHook();\n      _this3.isInitialized = true;\n      _this3.logger.log(constants_1.MESSAGES.APPLICATION_READY);\n      return _this3;\n    })();\n  }\n  registerParserMiddleware() {\n    const prefix = this.config.getGlobalPrefix();\n    const rawBody = !!this.appOptions?.rawBody;\n    this.httpAdapter.registerParserMiddleware(prefix, rawBody);\n  }\n  registerRouter() {\n    var _this4 = this;\n    return _asyncToGenerator(function* () {\n      yield _this4.registerMiddleware(_this4.httpAdapter);\n      const prefix = _this4.config.getGlobalPrefix();\n      const basePath = (0, shared_utils_1.addLeadingSlash)(prefix);\n      _this4.routesResolver.resolve(_this4.httpAdapter, basePath);\n    })();\n  }\n  registerRouterHooks() {\n    var _this5 = this;\n    return _asyncToGenerator(function* () {\n      _this5.routesResolver.registerNotFoundHandler();\n      _this5.routesResolver.registerExceptionHandler();\n    })();\n  }\n  connectMicroservice(microserviceOptions, hybridAppOptions = {}) {\n    const {\n      NestMicroservice\n    } = (0, load_package_util_1.loadPackage)('@nestjs/microservices', 'NestFactory', () => require('@nestjs/microservices'));\n    const {\n      inheritAppConfig\n    } = hybridAppOptions;\n    const applicationConfig = inheritAppConfig ? this.config : new application_config_1.ApplicationConfig();\n    const instance = new NestMicroservice(this.container, microserviceOptions, this.graphInspector, applicationConfig);\n    instance.registerListeners();\n    instance.setIsInitialized(true);\n    instance.setIsInitHookCalled(true);\n    this.microservices.push(instance);\n    return instance;\n  }\n  getMicroservices() {\n    return this.microservices;\n  }\n  getHttpServer() {\n    return this.httpServer;\n  }\n  startAllMicroservices() {\n    var _this6 = this;\n    return _asyncToGenerator(function* () {\n      _this6.assertNotInPreviewMode('startAllMicroservices');\n      yield Promise.all(_this6.microservices.map(msvc => msvc.listen()));\n      return _this6;\n    })();\n  }\n  use(...args) {\n    this.httpAdapter.use(...args);\n    return this;\n  }\n  useBodyParser(...args) {\n    if (!('useBodyParser' in this.httpAdapter)) {\n      this.logger.warn('Your HTTP Adapter does not support `.useBodyParser`.');\n      return this;\n    }\n    const [parserType, ...otherArgs] = args;\n    const rawBody = !!this.appOptions.rawBody;\n    this.httpAdapter.useBodyParser(...[parserType, rawBody, ...otherArgs]);\n    return this;\n  }\n  enableCors(options) {\n    this.httpAdapter.enableCors(options);\n  }\n  enableVersioning(options = {\n    type: common_1.VersioningType.URI\n  }) {\n    this.config.enableVersioning(options);\n    return this;\n  }\n  listen(port, ...args) {\n    var _this7 = this;\n    return _asyncToGenerator(function* () {\n      _this7.assertNotInPreviewMode('listen');\n      if (!_this7.isInitialized) {\n        yield _this7.init();\n      }\n      const httpAdapterHost = _this7.container.getHttpAdapterHostRef();\n      return new Promise((resolve, reject) => {\n        const errorHandler = e => {\n          _this7.logger.error(e?.toString?.());\n          reject(e);\n        };\n        _this7.httpServer.once('error', errorHandler);\n        const isCallbackInOriginalArgs = (0, shared_utils_1.isFunction)(args[args.length - 1]);\n        const listenFnArgs = isCallbackInOriginalArgs ? args.slice(0, args.length - 1) : args;\n        _this7.httpAdapter.listen(port, ...listenFnArgs, (...originalCallbackArgs) => {\n          if (_this7.appOptions?.autoFlushLogs ?? true) {\n            _this7.flushLogs();\n          }\n          if (originalCallbackArgs[0] instanceof Error) {\n            return reject(originalCallbackArgs[0]);\n          }\n          const address = _this7.httpServer.address();\n          if (address) {\n            _this7.httpServer.removeListener('error', errorHandler);\n            _this7.isListening = true;\n            httpAdapterHost.listening = true;\n            resolve(_this7.httpServer);\n          }\n          if (isCallbackInOriginalArgs) {\n            args[args.length - 1](...originalCallbackArgs);\n          }\n        });\n      });\n    })();\n  }\n  getUrl() {\n    var _this8 = this;\n    return _asyncToGenerator(function* () {\n      return new Promise((resolve, reject) => {\n        if (!_this8.isListening) {\n          _this8.logger.error(constants_1.MESSAGES.CALL_LISTEN_FIRST);\n          reject(constants_1.MESSAGES.CALL_LISTEN_FIRST);\n          return;\n        }\n        const address = _this8.httpServer.address();\n        resolve(_this8.formatAddress(address));\n      });\n    })();\n  }\n  formatAddress(address) {\n    if ((0, shared_utils_1.isString)(address)) {\n      if ((0, os_1.platform)() === 'win32') {\n        return address;\n      }\n      const basePath = encodeURIComponent(address);\n      return `${this.getProtocol()}+unix://${basePath}`;\n    }\n    let host = this.host();\n    if (address && address.family === 'IPv6') {\n      if (host === '::') {\n        host = '[::1]';\n      } else {\n        host = `[${host}]`;\n      }\n    } else if (host === '0.0.0.0') {\n      host = '127.0.0.1';\n    }\n    return `${this.getProtocol()}://${host}:${address.port}`;\n  }\n  setGlobalPrefix(prefix, options) {\n    this.config.setGlobalPrefix(prefix);\n    if (options) {\n      const exclude = options?.exclude ? (0, utils_1.mapToExcludeRoute)(options.exclude) : [];\n      this.config.setGlobalPrefixOptions({\n        ...options,\n        exclude\n      });\n    }\n    return this;\n  }\n  useWebSocketAdapter(adapter) {\n    this.config.setIoAdapter(adapter);\n    return this;\n  }\n  useGlobalFilters(...filters) {\n    this.config.useGlobalFilters(...filters);\n    filters.forEach(item => this.graphInspector.insertOrphanedEnhancer({\n      subtype: 'filter',\n      ref: item\n    }));\n    return this;\n  }\n  useGlobalPipes(...pipes) {\n    this.config.useGlobalPipes(...pipes);\n    pipes.forEach(item => this.graphInspector.insertOrphanedEnhancer({\n      subtype: 'pipe',\n      ref: item\n    }));\n    return this;\n  }\n  useGlobalInterceptors(...interceptors) {\n    this.config.useGlobalInterceptors(...interceptors);\n    interceptors.forEach(item => this.graphInspector.insertOrphanedEnhancer({\n      subtype: 'interceptor',\n      ref: item\n    }));\n    return this;\n  }\n  useGlobalGuards(...guards) {\n    this.config.useGlobalGuards(...guards);\n    guards.forEach(item => this.graphInspector.insertOrphanedEnhancer({\n      subtype: 'guard',\n      ref: item\n    }));\n    return this;\n  }\n  useStaticAssets(pathOrOptions, options) {\n    this.httpAdapter.useStaticAssets && this.httpAdapter.useStaticAssets(pathOrOptions, options);\n    return this;\n  }\n  setBaseViewsDir(path) {\n    this.httpAdapter.setBaseViewsDir && this.httpAdapter.setBaseViewsDir(path);\n    return this;\n  }\n  setViewEngine(engineOrOptions) {\n    this.httpAdapter.setViewEngine && this.httpAdapter.setViewEngine(engineOrOptions);\n    return this;\n  }\n  host() {\n    const address = this.httpServer.address();\n    if ((0, shared_utils_1.isString)(address)) {\n      return undefined;\n    }\n    return address && address.address;\n  }\n  getProtocol() {\n    return this.appOptions && this.appOptions.httpsOptions ? 'https' : 'http';\n  }\n  registerMiddleware(instance) {\n    var _this9 = this;\n    return _asyncToGenerator(function* () {\n      yield _this9.middlewareModule.registerMiddleware(_this9.middlewareContainer, instance);\n    })();\n  }\n}\nexports.NestApplication = NestApplication;","map":{"version":3,"names":["_asyncToGenerator","require","default","Object","defineProperty","exports","value","NestApplication","common_1","logger_service_1","load_package_util_1","shared_utils_1","iterare_1","os_1","application_config_1","constants_1","optional_require_1","injector_1","container_1","middleware_module_1","utils_1","nest_application_context_1","routes_resolver_1","SocketModule","optionalRequire","MicroservicesModule","NestApplicationContext","constructor","container","httpAdapter","config","graphInspector","appOptions","logger","Logger","name","timestamp","middlewareContainer","MiddlewareContainer","microservicesModule","socketModule","microservices","isListening","selectContextModule","registerHttpServer","injector","Injector","preview","middlewareModule","MiddlewareModule","routesResolver","RoutesResolver","dispose","_this","close","Promise","all","iterate","map","_ref","microservice","setIsTerminated","_x","apply","arguments","getHttpAdapter","httpServer","createServer","getUnderlyingHttpServer","getHttpServer","applyOptions","cors","undefined","passCustomOptions","isObject","isFunction","enableCors","initHttpServer","registerModules","_this2","registerWsModule","register","setupClients","init","_this3","isInitialized","useBodyParser","bodyParser","registerParserMiddleware","registerRouter","callInitHook","registerRouterHooks","callBootstrapHook","log","MESSAGES","APPLICATION_READY","prefix","getGlobalPrefix","rawBody","_this4","registerMiddleware","basePath","addLeadingSlash","resolve","_this5","registerNotFoundHandler","registerExceptionHandler","connectMicroservice","microserviceOptions","hybridAppOptions","NestMicroservice","loadPackage","inheritAppConfig","applicationConfig","ApplicationConfig","instance","registerListeners","setIsInitialized","setIsInitHookCalled","push","getMicroservices","startAllMicroservices","_this6","assertNotInPreviewMode","msvc","listen","use","args","warn","parserType","otherArgs","options","enableVersioning","type","VersioningType","URI","port","_this7","httpAdapterHost","getHttpAdapterHostRef","reject","errorHandler","e","error","toString","once","isCallbackInOriginalArgs","length","listenFnArgs","slice","originalCallbackArgs","autoFlushLogs","flushLogs","Error","address","removeListener","listening","getUrl","_this8","CALL_LISTEN_FIRST","formatAddress","isString","platform","encodeURIComponent","getProtocol","host","family","setGlobalPrefix","exclude","mapToExcludeRoute","setGlobalPrefixOptions","useWebSocketAdapter","adapter","setIoAdapter","useGlobalFilters","filters","forEach","item","insertOrphanedEnhancer","subtype","ref","useGlobalPipes","pipes","useGlobalInterceptors","interceptors","useGlobalGuards","guards","useStaticAssets","pathOrOptions","setBaseViewsDir","path","setViewEngine","engineOrOptions","httpsOptions","_this9"],"sources":["C:/Users/salim/Dev/avans-nx-workshop-2024/avans-nx-workshop/node_modules/@nestjs/core/nest-application.js"],"sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.NestApplication = void 0;\nconst common_1 = require(\"@nestjs/common\");\nconst logger_service_1 = require(\"@nestjs/common/services/logger.service\");\nconst load_package_util_1 = require(\"@nestjs/common/utils/load-package.util\");\nconst shared_utils_1 = require(\"@nestjs/common/utils/shared.utils\");\nconst iterare_1 = require(\"iterare\");\nconst os_1 = require(\"os\");\nconst application_config_1 = require(\"./application-config\");\nconst constants_1 = require(\"./constants\");\nconst optional_require_1 = require(\"./helpers/optional-require\");\nconst injector_1 = require(\"./injector/injector\");\nconst container_1 = require(\"./middleware/container\");\nconst middleware_module_1 = require(\"./middleware/middleware-module\");\nconst utils_1 = require(\"./middleware/utils\");\nconst nest_application_context_1 = require(\"./nest-application-context\");\nconst routes_resolver_1 = require(\"./router/routes-resolver\");\nconst { SocketModule } = (0, optional_require_1.optionalRequire)('@nestjs/websockets/socket-module', () => require('@nestjs/websockets/socket-module'));\nconst { MicroservicesModule } = (0, optional_require_1.optionalRequire)('@nestjs/microservices/microservices-module', () => require('@nestjs/microservices/microservices-module'));\n/**\n * @publicApi\n */\nclass NestApplication extends nest_application_context_1.NestApplicationContext {\n    constructor(container, httpAdapter, config, graphInspector, appOptions = {}) {\n        super(container, appOptions);\n        this.httpAdapter = httpAdapter;\n        this.config = config;\n        this.graphInspector = graphInspector;\n        this.logger = new logger_service_1.Logger(NestApplication.name, {\n            timestamp: true,\n        });\n        this.middlewareContainer = new container_1.MiddlewareContainer(this.container);\n        this.microservicesModule = MicroservicesModule && new MicroservicesModule();\n        this.socketModule = SocketModule && new SocketModule();\n        this.microservices = [];\n        this.isListening = false;\n        this.selectContextModule();\n        this.registerHttpServer();\n        this.injector = new injector_1.Injector({ preview: this.appOptions.preview });\n        this.middlewareModule = new middleware_module_1.MiddlewareModule();\n        this.routesResolver = new routes_resolver_1.RoutesResolver(this.container, this.config, this.injector, this.graphInspector);\n    }\n    async dispose() {\n        this.socketModule && (await this.socketModule.close());\n        this.microservicesModule && (await this.microservicesModule.close());\n        this.httpAdapter && (await this.httpAdapter.close());\n        await Promise.all((0, iterare_1.iterate)(this.microservices).map(async (microservice) => {\n            microservice.setIsTerminated(true);\n            await microservice.close();\n        }));\n    }\n    getHttpAdapter() {\n        return this.httpAdapter;\n    }\n    registerHttpServer() {\n        this.httpServer = this.createServer();\n    }\n    getUnderlyingHttpServer() {\n        return this.httpAdapter.getHttpServer();\n    }\n    applyOptions() {\n        if (!this.appOptions || !this.appOptions.cors) {\n            return undefined;\n        }\n        const passCustomOptions = (0, shared_utils_1.isObject)(this.appOptions.cors) || (0, shared_utils_1.isFunction)(this.appOptions.cors);\n        if (!passCustomOptions) {\n            return this.enableCors();\n        }\n        return this.enableCors(this.appOptions.cors);\n    }\n    createServer() {\n        this.httpAdapter.initHttpServer(this.appOptions);\n        return this.httpAdapter.getHttpServer();\n    }\n    async registerModules() {\n        this.registerWsModule();\n        if (this.microservicesModule) {\n            this.microservicesModule.register(this.container, this.graphInspector, this.config, this.appOptions);\n            this.microservicesModule.setupClients(this.container);\n        }\n        await this.middlewareModule.register(this.middlewareContainer, this.container, this.config, this.injector, this.httpAdapter, this.graphInspector, this.appOptions);\n    }\n    registerWsModule() {\n        if (!this.socketModule) {\n            return;\n        }\n        this.socketModule.register(this.container, this.config, this.graphInspector, this.appOptions, this.httpServer);\n    }\n    async init() {\n        if (this.isInitialized) {\n            return this;\n        }\n        this.applyOptions();\n        await this.httpAdapter?.init();\n        const useBodyParser = this.appOptions && this.appOptions.bodyParser !== false;\n        useBodyParser && this.registerParserMiddleware();\n        await this.registerModules();\n        await this.registerRouter();\n        await this.callInitHook();\n        await this.registerRouterHooks();\n        await this.callBootstrapHook();\n        this.isInitialized = true;\n        this.logger.log(constants_1.MESSAGES.APPLICATION_READY);\n        return this;\n    }\n    registerParserMiddleware() {\n        const prefix = this.config.getGlobalPrefix();\n        const rawBody = !!this.appOptions?.rawBody;\n        this.httpAdapter.registerParserMiddleware(prefix, rawBody);\n    }\n    async registerRouter() {\n        await this.registerMiddleware(this.httpAdapter);\n        const prefix = this.config.getGlobalPrefix();\n        const basePath = (0, shared_utils_1.addLeadingSlash)(prefix);\n        this.routesResolver.resolve(this.httpAdapter, basePath);\n    }\n    async registerRouterHooks() {\n        this.routesResolver.registerNotFoundHandler();\n        this.routesResolver.registerExceptionHandler();\n    }\n    connectMicroservice(microserviceOptions, hybridAppOptions = {}) {\n        const { NestMicroservice } = (0, load_package_util_1.loadPackage)('@nestjs/microservices', 'NestFactory', () => require('@nestjs/microservices'));\n        const { inheritAppConfig } = hybridAppOptions;\n        const applicationConfig = inheritAppConfig\n            ? this.config\n            : new application_config_1.ApplicationConfig();\n        const instance = new NestMicroservice(this.container, microserviceOptions, this.graphInspector, applicationConfig);\n        instance.registerListeners();\n        instance.setIsInitialized(true);\n        instance.setIsInitHookCalled(true);\n        this.microservices.push(instance);\n        return instance;\n    }\n    getMicroservices() {\n        return this.microservices;\n    }\n    getHttpServer() {\n        return this.httpServer;\n    }\n    async startAllMicroservices() {\n        this.assertNotInPreviewMode('startAllMicroservices');\n        await Promise.all(this.microservices.map(msvc => msvc.listen()));\n        return this;\n    }\n    use(...args) {\n        this.httpAdapter.use(...args);\n        return this;\n    }\n    useBodyParser(...args) {\n        if (!('useBodyParser' in this.httpAdapter)) {\n            this.logger.warn('Your HTTP Adapter does not support `.useBodyParser`.');\n            return this;\n        }\n        const [parserType, ...otherArgs] = args;\n        const rawBody = !!this.appOptions.rawBody;\n        this.httpAdapter.useBodyParser(...[parserType, rawBody, ...otherArgs]);\n        return this;\n    }\n    enableCors(options) {\n        this.httpAdapter.enableCors(options);\n    }\n    enableVersioning(options = { type: common_1.VersioningType.URI }) {\n        this.config.enableVersioning(options);\n        return this;\n    }\n    async listen(port, ...args) {\n        this.assertNotInPreviewMode('listen');\n        if (!this.isInitialized) {\n            await this.init();\n        }\n        const httpAdapterHost = this.container.getHttpAdapterHostRef();\n        return new Promise((resolve, reject) => {\n            const errorHandler = (e) => {\n                this.logger.error(e?.toString?.());\n                reject(e);\n            };\n            this.httpServer.once('error', errorHandler);\n            const isCallbackInOriginalArgs = (0, shared_utils_1.isFunction)(args[args.length - 1]);\n            const listenFnArgs = isCallbackInOriginalArgs\n                ? args.slice(0, args.length - 1)\n                : args;\n            this.httpAdapter.listen(port, ...listenFnArgs, (...originalCallbackArgs) => {\n                if (this.appOptions?.autoFlushLogs ?? true) {\n                    this.flushLogs();\n                }\n                if (originalCallbackArgs[0] instanceof Error) {\n                    return reject(originalCallbackArgs[0]);\n                }\n                const address = this.httpServer.address();\n                if (address) {\n                    this.httpServer.removeListener('error', errorHandler);\n                    this.isListening = true;\n                    httpAdapterHost.listening = true;\n                    resolve(this.httpServer);\n                }\n                if (isCallbackInOriginalArgs) {\n                    args[args.length - 1](...originalCallbackArgs);\n                }\n            });\n        });\n    }\n    async getUrl() {\n        return new Promise((resolve, reject) => {\n            if (!this.isListening) {\n                this.logger.error(constants_1.MESSAGES.CALL_LISTEN_FIRST);\n                reject(constants_1.MESSAGES.CALL_LISTEN_FIRST);\n                return;\n            }\n            const address = this.httpServer.address();\n            resolve(this.formatAddress(address));\n        });\n    }\n    formatAddress(address) {\n        if ((0, shared_utils_1.isString)(address)) {\n            if ((0, os_1.platform)() === 'win32') {\n                return address;\n            }\n            const basePath = encodeURIComponent(address);\n            return `${this.getProtocol()}+unix://${basePath}`;\n        }\n        let host = this.host();\n        if (address && address.family === 'IPv6') {\n            if (host === '::') {\n                host = '[::1]';\n            }\n            else {\n                host = `[${host}]`;\n            }\n        }\n        else if (host === '0.0.0.0') {\n            host = '127.0.0.1';\n        }\n        return `${this.getProtocol()}://${host}:${address.port}`;\n    }\n    setGlobalPrefix(prefix, options) {\n        this.config.setGlobalPrefix(prefix);\n        if (options) {\n            const exclude = options?.exclude\n                ? (0, utils_1.mapToExcludeRoute)(options.exclude)\n                : [];\n            this.config.setGlobalPrefixOptions({\n                ...options,\n                exclude,\n            });\n        }\n        return this;\n    }\n    useWebSocketAdapter(adapter) {\n        this.config.setIoAdapter(adapter);\n        return this;\n    }\n    useGlobalFilters(...filters) {\n        this.config.useGlobalFilters(...filters);\n        filters.forEach(item => this.graphInspector.insertOrphanedEnhancer({\n            subtype: 'filter',\n            ref: item,\n        }));\n        return this;\n    }\n    useGlobalPipes(...pipes) {\n        this.config.useGlobalPipes(...pipes);\n        pipes.forEach(item => this.graphInspector.insertOrphanedEnhancer({\n            subtype: 'pipe',\n            ref: item,\n        }));\n        return this;\n    }\n    useGlobalInterceptors(...interceptors) {\n        this.config.useGlobalInterceptors(...interceptors);\n        interceptors.forEach(item => this.graphInspector.insertOrphanedEnhancer({\n            subtype: 'interceptor',\n            ref: item,\n        }));\n        return this;\n    }\n    useGlobalGuards(...guards) {\n        this.config.useGlobalGuards(...guards);\n        guards.forEach(item => this.graphInspector.insertOrphanedEnhancer({\n            subtype: 'guard',\n            ref: item,\n        }));\n        return this;\n    }\n    useStaticAssets(pathOrOptions, options) {\n        this.httpAdapter.useStaticAssets &&\n            this.httpAdapter.useStaticAssets(pathOrOptions, options);\n        return this;\n    }\n    setBaseViewsDir(path) {\n        this.httpAdapter.setBaseViewsDir && this.httpAdapter.setBaseViewsDir(path);\n        return this;\n    }\n    setViewEngine(engineOrOptions) {\n        this.httpAdapter.setViewEngine &&\n            this.httpAdapter.setViewEngine(engineOrOptions);\n        return this;\n    }\n    host() {\n        const address = this.httpServer.address();\n        if ((0, shared_utils_1.isString)(address)) {\n            return undefined;\n        }\n        return address && address.address;\n    }\n    getProtocol() {\n        return this.appOptions && this.appOptions.httpsOptions ? 'https' : 'http';\n    }\n    async registerMiddleware(instance) {\n        await this.middlewareModule.registerMiddleware(this.middlewareContainer, instance);\n    }\n}\nexports.NestApplication = NestApplication;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}