{"ast":null,"code":"import { __decorate, __metadata } from \"tslib\";\nimport { Prop, Schema, SchemaFactory } from '@nestjs/mongoose';\nimport { UserGender, UserRole } from '@avans-nx-workshop/shared/api';\nimport { IsMongoId } from 'class-validator';\nexport let User = class User {\n  constructor() {\n    this.password = '';\n    this.emailAddress = '';\n    this.role = UserRole.Guest;\n    this.gender = UserGender.Unknown;\n    this.isActive = true;\n  }\n};\n__decorate([IsMongoId(), __metadata(\"design:type\", String)], User.prototype, \"_id\", void 0);\n__decorate([Prop({\n  required: true,\n  type: String\n}), __metadata(\"design:type\", String)], User.prototype, \"name\", void 0);\n__decorate([Prop({\n  required: true,\n  select: false,\n  type: String\n}), __metadata(\"design:type\", Object)], User.prototype, \"password\", void 0);\n__decorate([Prop({\n  required: true,\n  type: String,\n  select: true,\n  unique: true\n  // validate: {\n  //     validator: isEmail,\n  //     message: 'should be a valid email address'\n  // }\n}), __metadata(\"design:type\", Object)], User.prototype, \"emailAddress\", void 0);\n__decorate([Prop({\n  required: false,\n  select: true,\n  default: 'https://cdn-icons-png.flaticon.com/512/219/219969.png'\n}), __metadata(\"design:type\", String)], User.prototype, \"profileImgUrl\", void 0);\n__decorate([Prop({\n  required: false,\n  type: String,\n  default: UserRole.Guest\n}), __metadata(\"design:type\", String)], User.prototype, \"role\", void 0);\n__decorate([Prop({\n  required: false,\n  type: String,\n  default: UserGender.Unknown\n}), __metadata(\"design:type\", String)], User.prototype, \"gender\", void 0);\n__decorate([Prop({\n  required: false,\n  type: Boolean,\n  default: true\n}), __metadata(\"design:type\", Object)], User.prototype, \"isActive\", void 0);\nUser = __decorate([Schema()], User);\nexport const UserSchema = SchemaFactory.createForClass(User);","map":{"version":3,"names":["Prop","Schema","SchemaFactory","UserGender","UserRole","IsMongoId","User","constructor","password","emailAddress","role","Guest","gender","Unknown","isActive","__decorate","required","type","String","select","unique","default","Boolean","UserSchema","createForClass"],"sources":["C:\\Users\\salim\\Dev\\avans-nx-workshop-2024\\avans-nx-workshop\\libs\\backend\\user\\src\\lib\\user\\user.schema.ts"],"sourcesContent":["import { Prop, Schema, SchemaFactory } from '@nestjs/mongoose';\r\nimport { Document, Schema as MongooseSchema } from 'mongoose';\r\n// import { v4 as uuid } from 'uuid';\r\nimport isEmail from 'validator/lib/isEmail';\r\nimport {\r\n    IMeal,\r\n    IUser,\r\n    UserGender,\r\n    UserRole\r\n} from '@avans-nx-workshop/shared/api';\r\nimport { IsMongoId } from 'class-validator';\r\n\r\nexport type UserDocument = User & Document;\r\n\r\n@Schema()\r\nexport class User implements IUser {\r\n    @IsMongoId()\r\n    _id!: string;\r\n\r\n    @Prop({\r\n        required: true,\r\n        type: String\r\n    })\r\n    name!: string;\r\n\r\n    @Prop({\r\n        required: true,\r\n        select: false, // do not return password in select statements\r\n        type: String\r\n    })\r\n    password = '';\r\n\r\n    @Prop({\r\n        required: true,\r\n        type: String,\r\n        select: true,\r\n        unique: true\r\n        // validate: {\r\n        //     validator: isEmail,\r\n        //     message: 'should be a valid email address'\r\n        // }\r\n    })\r\n    emailAddress = '';\r\n\r\n    @Prop({\r\n        required: false,\r\n        select: true,\r\n        default: 'https://cdn-icons-png.flaticon.com/512/219/219969.png'\r\n    })\r\n    profileImgUrl!: string;\r\n\r\n    @Prop({\r\n        required: false,\r\n        type: String,\r\n        default: UserRole.Guest\r\n    })\r\n    role: UserRole = UserRole.Guest;\r\n\r\n    @Prop({\r\n        required: false,\r\n        type: String,\r\n        default: UserGender.Unknown\r\n    })\r\n    gender: UserGender = UserGender.Unknown;\r\n\r\n    @Prop({\r\n        required: false,\r\n        type: Boolean,\r\n        default: true\r\n    })\r\n    isActive = true;\r\n\r\n}\r\n\r\nexport const UserSchema = SchemaFactory.createForClass(User);\r\n"],"mappings":";AAAA,SAASA,IAAI,EAAEC,MAAM,EAAEC,aAAa,QAAQ,kBAAkB;AAI9D,SAGIC,UAAU,EACVC,QAAQ,QACL,+BAA+B;AACtC,SAASC,SAAS,QAAQ,iBAAiB;AAKpC,WAAMC,IAAI,GAAV,MAAMA,IAAI;EAAVC,YAAA;IAeH,KAAAC,QAAQ,GAAG,EAAE;IAYb,KAAAC,YAAY,GAAG,EAAE;IAcjB,KAAAC,IAAI,GAAaN,QAAQ,CAACO,KAAK;IAO/B,KAAAC,MAAM,GAAeT,UAAU,CAACU,OAAO;IAOvC,KAAAC,QAAQ,GAAG,IAAI;EAEnB;CAAC;AAvDGC,UAAA,EADCV,SAAS,EAAE,E,kEACC;AAMbU,UAAA,EAJCf,IAAI,CAAC;EACFgB,QAAQ,EAAE,IAAI;EACdC,IAAI,EAAEC;CACT,CAAC,E,mEACY;AAOdH,UAAA,EALCf,IAAI,CAAC;EACFgB,QAAQ,EAAE,IAAI;EACdG,MAAM,EAAE,KAAK;EACbF,IAAI,EAAEC;CACT,CAAC,E,uEACY;AAYdH,UAAA,EAVCf,IAAI,CAAC;EACFgB,QAAQ,EAAE,IAAI;EACdC,IAAI,EAAEC,MAAM;EACZC,MAAM,EAAE,IAAI;EACZC,MAAM,EAAE;EACR;EACA;EACA;EACA;CACH,CAAC,E,2EACgB;AAOlBL,UAAA,EALCf,IAAI,CAAC;EACFgB,QAAQ,EAAE,KAAK;EACfG,MAAM,EAAE,IAAI;EACZE,OAAO,EAAE;CACZ,CAAC,E,4EACqB;AAOvBN,UAAA,EALCf,IAAI,CAAC;EACFgB,QAAQ,EAAE,KAAK;EACfC,IAAI,EAAEC,MAAM;EACZG,OAAO,EAAEjB,QAAQ,CAACO;CACrB,CAAC,E,mEAC8B;AAOhCI,UAAA,EALCf,IAAI,CAAC;EACFgB,QAAQ,EAAE,KAAK;EACfC,IAAI,EAAEC,MAAM;EACZG,OAAO,EAAElB,UAAU,CAACU;CACvB,CAAC,E,qEACsC;AAOxCE,UAAA,EALCf,IAAI,CAAC;EACFgB,QAAQ,EAAE,KAAK;EACfC,IAAI,EAAEK,OAAO;EACbD,OAAO,EAAE;CACZ,CAAC,E,uEACc;AAvDPf,IAAI,GAAAS,UAAA,EADhBd,MAAM,EAAE,C,EACIK,IAAI,CAyDhB;AAED,OAAO,MAAMiB,UAAU,GAAGrB,aAAa,CAACsB,cAAc,CAAClB,IAAI,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}