{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.BaseExceptionFilterContext = void 0;\nconst constants_1 = require(\"@nestjs/common/constants\");\nconst shared_utils_1 = require(\"@nestjs/common/utils/shared.utils\");\nconst iterare_1 = require(\"iterare\");\nconst context_creator_1 = require(\"../helpers/context-creator\");\nconst constants_2 = require(\"../injector/constants\");\nclass BaseExceptionFilterContext extends context_creator_1.ContextCreator {\n  constructor(container) {\n    super();\n    this.container = container;\n  }\n  createConcreteContext(metadata, contextId = constants_2.STATIC_CONTEXT, inquirerId) {\n    if ((0, shared_utils_1.isEmpty)(metadata)) {\n      return [];\n    }\n    return (0, iterare_1.iterate)(metadata).filter(instance => instance && ((0, shared_utils_1.isFunction)(instance.catch) || instance.name)).map(filter => this.getFilterInstance(filter, contextId, inquirerId)).filter(item => !!item).map(instance => ({\n      func: instance.catch.bind(instance),\n      exceptionMetatypes: this.reflectCatchExceptions(instance)\n    })).toArray();\n  }\n  getFilterInstance(filter, contextId = constants_2.STATIC_CONTEXT, inquirerId) {\n    const isObject = filter.catch;\n    if (isObject) {\n      return filter;\n    }\n    const instanceWrapper = this.getInstanceByMetatype(filter);\n    if (!instanceWrapper) {\n      return null;\n    }\n    const instanceHost = instanceWrapper.getInstanceByContextId(this.getContextId(contextId, instanceWrapper), inquirerId);\n    return instanceHost && instanceHost.instance;\n  }\n  getInstanceByMetatype(metatype) {\n    if (!this.moduleContext) {\n      return;\n    }\n    const collection = this.container.getModules();\n    const moduleRef = collection.get(this.moduleContext);\n    if (!moduleRef) {\n      return;\n    }\n    return moduleRef.injectables.get(metatype);\n  }\n  reflectCatchExceptions(instance) {\n    const prototype = Object.getPrototypeOf(instance);\n    return Reflect.getMetadata(constants_1.FILTER_CATCH_EXCEPTIONS, prototype.constructor) || [];\n  }\n}\nexports.BaseExceptionFilterContext = BaseExceptionFilterContext;","map":{"version":3,"names":["Object","defineProperty","exports","value","BaseExceptionFilterContext","constants_1","require","shared_utils_1","iterare_1","context_creator_1","constants_2","ContextCreator","constructor","container","createConcreteContext","metadata","contextId","STATIC_CONTEXT","inquirerId","isEmpty","iterate","filter","instance","isFunction","catch","name","map","getFilterInstance","item","func","bind","exceptionMetatypes","reflectCatchExceptions","toArray","isObject","instanceWrapper","getInstanceByMetatype","instanceHost","getInstanceByContextId","getContextId","metatype","moduleContext","collection","getModules","moduleRef","get","injectables","prototype","getPrototypeOf","Reflect","getMetadata","FILTER_CATCH_EXCEPTIONS"],"sources":["C:/Users/salim/Dev/avans-nx-workshop-2024/avans-nx-workshop/node_modules/@nestjs/core/exceptions/base-exception-filter-context.js"],"sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.BaseExceptionFilterContext = void 0;\nconst constants_1 = require(\"@nestjs/common/constants\");\nconst shared_utils_1 = require(\"@nestjs/common/utils/shared.utils\");\nconst iterare_1 = require(\"iterare\");\nconst context_creator_1 = require(\"../helpers/context-creator\");\nconst constants_2 = require(\"../injector/constants\");\nclass BaseExceptionFilterContext extends context_creator_1.ContextCreator {\n    constructor(container) {\n        super();\n        this.container = container;\n    }\n    createConcreteContext(metadata, contextId = constants_2.STATIC_CONTEXT, inquirerId) {\n        if ((0, shared_utils_1.isEmpty)(metadata)) {\n            return [];\n        }\n        return (0, iterare_1.iterate)(metadata)\n            .filter(instance => instance && ((0, shared_utils_1.isFunction)(instance.catch) || instance.name))\n            .map(filter => this.getFilterInstance(filter, contextId, inquirerId))\n            .filter(item => !!item)\n            .map(instance => ({\n            func: instance.catch.bind(instance),\n            exceptionMetatypes: this.reflectCatchExceptions(instance),\n        }))\n            .toArray();\n    }\n    getFilterInstance(filter, contextId = constants_2.STATIC_CONTEXT, inquirerId) {\n        const isObject = filter.catch;\n        if (isObject) {\n            return filter;\n        }\n        const instanceWrapper = this.getInstanceByMetatype(filter);\n        if (!instanceWrapper) {\n            return null;\n        }\n        const instanceHost = instanceWrapper.getInstanceByContextId(this.getContextId(contextId, instanceWrapper), inquirerId);\n        return instanceHost && instanceHost.instance;\n    }\n    getInstanceByMetatype(metatype) {\n        if (!this.moduleContext) {\n            return;\n        }\n        const collection = this.container.getModules();\n        const moduleRef = collection.get(this.moduleContext);\n        if (!moduleRef) {\n            return;\n        }\n        return moduleRef.injectables.get(metatype);\n    }\n    reflectCatchExceptions(instance) {\n        const prototype = Object.getPrototypeOf(instance);\n        return (Reflect.getMetadata(constants_1.FILTER_CATCH_EXCEPTIONS, prototype.constructor) || []);\n    }\n}\nexports.BaseExceptionFilterContext = BaseExceptionFilterContext;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}